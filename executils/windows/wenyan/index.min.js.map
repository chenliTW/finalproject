{"version":3,"sources":["webpack://Wenyan.[name]/webpack/universalModuleDefinition","webpack://Wenyan.[name]/webpack/bootstrap","webpack://Wenyan.[name]/external \"fs\"","webpack://Wenyan.[name]/external \"path\"","webpack://Wenyan.[name]/external \"util\"","webpack://Wenyan.[name]/./src/parser.ts","webpack://Wenyan.[name]/./src/converts/hanzi2num.ts","webpack://Wenyan.[name]/./src/utils.ts","webpack://Wenyan.[name]/./src/transpilers/base.ts","webpack://Wenyan.[name]/./src/version.ts","webpack://Wenyan.[name]/./src/reader.ts","webpack://Wenyan.[name]/./src/keywords.ts","webpack://Wenyan.[name]/./src/execute.ts","webpack://Wenyan.[name]/./src/cli.ts","webpack://Wenyan.[name]/./node_modules/commander/index.js","webpack://Wenyan.[name]/external \"events\"","webpack://Wenyan.[name]/external \"child_process\"","webpack://Wenyan.[name]/./node_modules/find-up/index.js","webpack://Wenyan.[name]/./node_modules/locate-path/index.js","webpack://Wenyan.[name]/./node_modules/p-locate/index.js","webpack://Wenyan.[name]/./node_modules/p-limit/index.js","webpack://Wenyan.[name]/./node_modules/p-try/index.js","webpack://Wenyan.[name]/./node_modules/path-exists/index.js","webpack://Wenyan.[name]/./src/converts/hanzi2pinyin.ts","webpack://Wenyan.[name]/./src/macro.ts","webpack://Wenyan.[name]/./src/stdlib.ts","webpack://Wenyan.[name]/./lib sync .*\\.wy$","webpack://Wenyan.[name]/./lib/js/位經.wy","webpack://Wenyan.[name]/./lib/js/天地經.wy","webpack://Wenyan.[name]/./lib/js/格物.wy","webpack://Wenyan.[name]/./lib/js/畫譜.wy","webpack://Wenyan.[name]/./lib/js/西曆法.wy","webpack://Wenyan.[name]/./lib/py/位經.wy","webpack://Wenyan.[name]/./lib/py/天地經.wy","webpack://Wenyan.[name]/./lib/py/西曆法.wy","webpack://Wenyan.[name]/./lib/rb/天地經.wy","webpack://Wenyan.[name]/./lib/列經.wy","webpack://Wenyan.[name]/./lib/易經.wy","webpack://Wenyan.[name]/./lib/曆法.wy","webpack://Wenyan.[name]/./lib/曆表.wy","webpack://Wenyan.[name]/./lib/渾沌經.wy","webpack://Wenyan.[name]/./lib/算經.wy","webpack://Wenyan.[name]/./lib/籌經.wy","webpack://Wenyan.[name]/./src/typecheck.ts","webpack://Wenyan.[name]/./src/types.ts","webpack://Wenyan.[name]/./src/transpilers/index.ts","webpack://Wenyan.[name]/./src/transpilers/js.ts","webpack://Wenyan.[name]/./src/transpilers/py.ts","webpack://Wenyan.[name]/./src/transpilers/rb.ts","webpack://Wenyan.[name]/./src/render.ts","webpack://Wenyan.[name]/./src/highlight.js","webpack://Wenyan.[name]/external \"readline\""],"names":[],"mappings":"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AAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAC/C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,CAA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SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CACjE,CAAC;QACJ,CAAC,CAAC;KACH;AACH,CAAC;;;;;;;ACxXD;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,EAAQ;AACnC,YAAY,mBAAO,CAAC,EAAe;AACnC,WAAW,mBAAO,CAAC,CAAM;AACzB;AACA;AACA,SAAS,mBAAO,CAAC,CAAI;;AAErB;AACA;AACA;;AAEA,mBAAO,CAAC,CAAM;;AAEd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,EAAE;AACb,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,EAAE;AACb,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,EAAE;AACb,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA,yBAAyB,kBAAkB;AAC3C;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,mBAAmB;AAC9D,KAAK;AACL,+BAA+B,mBAAmB;AAClD;AACA,GAAG;AACH;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB,EAAE;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,aAAa,2BAA2B,KAAK;AAC7E,GAAG;AACH,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA,6DAA6D,KAAK;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;;AAEA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,YAAY,GAAG,UAAU,GAAG,wBAAwB;AACxE;AACA;AACA;AACA,GAAG;AACH;;;;;;;AC7gDA,mC;;;;;;ACAA,0C;;;;;;;ACAa;AACb,aAAa,mBAAO,CAAC,CAAM;AAC3B,mBAAmB,mBAAO,CAAC,EAAa;AACxC,mBAAmB,mBAAO,CAAC,EAAa;;AAExC;;AAEA,0CAA0C;AAC1C;AACA,QAAQ,KAAK;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,2BAA2B;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA,QAAQ,KAAK;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,2BAA2B;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;ACxFa;AACb,aAAa,mBAAO,CAAC,CAAM;AAC3B,WAAW,mBAAO,CAAC,CAAI;AACvB,OAAO,UAAU,GAAG,mBAAO,CAAC,CAAM;AAClC,gBAAgB,mBAAO,CAAC,EAAU;;AAElC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,KAAK;AACzB;AACA;AACA;;AAEA,4CAA4C,KAAK;AACjD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;AChEa;AACb,eAAe,mBAAO,CAAC,EAAS;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACnDa;AACb,aAAa,mBAAO,CAAC,EAAO;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;;;;;;;ACnDa;;AAEb;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;ACRa;AACb,WAAW,mBAAO,CAAC,CAAI;AACvB,OAAO,UAAU,GAAG,mBAAO,CAAC,CAAM;;AAElC;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;;;;;ACrBA,6EAAmD;AACnD,6EAAmD;AAEnD,SAAgB,kBAAkB,CAAC,CAAS;IAC1C,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,KAAc,UAAC,EAAD,OAAC,EAAD,eAAC,EAAD,IAAC,EAAE;QAAZ,IAAI,CAAC;QACR,CAAC,IAAI,GAAG,CAAC;QACT,CAAC,IAAI,CAAC;aACH,UAAU,CAAC,CAAC,CAAC;aACb,QAAQ,CAAC,EAAE,CAAC;aACZ,WAAW,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zC,CAAC,IAAI,EAAE,CAAC;aACT;SACF;KACF;IACD,IAAI,UAAU,EAAE;QACd,aAAa,EAAE,CAAC;KACjB;IACD,cAAc;IACd,GAAG,IAAI,QAAQ,CAAC;IAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,OAAO,IAAI,CAAC;AACd,CAAC;AAYQ,wBAAM;AAVf,SAAS,QAAQ,CAAC,IAAI;IACpB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAS,CAAC,EAAE,CAAC;YAC/C,GAAG,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAEgB,4BAAQ;;;;;;;AC/UzB,KAAK,YAAY,GAAG,mBAAO,CAAC,CAAsB;AAClD,KAAK,4BAA4B,GAAG,mBAAO,CAAC,CAAY;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC,+BAA+B,sBAAsB,IAAI,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtMA,qC","file":"cli/index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cli\"] = factory();\n\telse\n\t\troot[\"Wenyan\"] = root[\"Wenyan\"] || {}, root[\"Wenyan\"][\"cli\"] = factory();\n})((typeof self !== \"undefined\" ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"util\");","import {\n  CompileOptions,\n  ASCNode,\n  Token,\n  TokenType,\n  RomanizeSystem,\n  ExecuteOptions\n} from \"./types\";\nimport {\n  hanzi2num,\n  hanzi2numstr,\n  num2hanzi,\n  bool2hanzi\n} from \"./converts/hanzi2num\";\nimport { hanzi2pinyin } from \"./converts/hanzi2pinyin\";\nimport { bundleImports } from \"./reader\";\nimport { expandMacros, extractMacros } from \"./macro\";\nimport { version } from \"./version\";\nimport { NUMBER_KEYWORDS, KEYWORDS } from \"./keywords\";\nimport { STDLIB } from \"./stdlib\";\nimport { typecheck, printSignature } from \"./typecheck\";\nimport transpilers from \"./transpilers\";\nimport { match, defaultAssert, isRoman } from \"./utils\";\nimport { evalCompiled, isLangSupportedForEval } from \"./execute\";\n\nconst defaultTrustedHosts = [\n  \"https://raw.githubusercontent.com/LingDong-/wenyan-lang/master\"\n];\n\nconst IGNORE_SYMBOLS = \"。、\\n\\r\\t \";\n\nfunction wy2tokens(txt: string, assert = defaultAssert()) {\n  var tokens: Token[] = [];\n  var tok = \"\";\n  var idt = false;\n  var num = false;\n  var litlvl = 0;\n  var data = false;\n\n  var i = 0;\n\n  function enddata() {\n    if (data) {\n      tokens.push([\"data\", tok, i]);\n      data = false;\n      tok = \"\";\n    }\n  }\n  function endnum() {\n    if (num) {\n      const numStr = hanzi2numstr(tok);\n      assert(`Invalid number \"${tok}\".`, i, numStr != null);\n      tokens.push([\"num\", numStr, i]);\n      tok = \"\";\n      num = false;\n    }\n  }\n\n  while (i < txt.length) {\n    if (IGNORE_SYMBOLS.includes(txt[i])) {\n      if (idt || data) {\n        tok += txt[i];\n      }\n    } else if (match(txt, i, \"「「\") || txt[i] == \"『\") {\n      var is_sin = txt[i] == \"「\";\n      if (litlvl == 0) {\n        enddata();\n        endnum();\n        idt = true;\n        tok = \"\";\n      } else {\n        tok += txt[i];\n        if (is_sin) {\n          tok += txt[i + 1];\n        }\n      }\n      litlvl++;\n      if (is_sin) {\n        i++;\n      }\n    } else if (\n      (txt[i] == \"」\" &&\n        txt[i + 1] == \"」\" &&\n        (txt[i + 2] != \"」\" || txt[i + 3] == \"」\")) ||\n      txt[i] == \"』\"\n    ) {\n      var is_sin = txt[i] == \"」\";\n      litlvl--;\n      if (litlvl == 0) {\n        // escape double quote and new lines\n        tok = tok.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\");\n\n        tokens.push([\"lit\", `\"${tok}\"`, i + 1]);\n        idt = false;\n        tok = \"\";\n      } else {\n        tok += txt[i];\n        if (is_sin) {\n          tok += txt[i + 1];\n        }\n      }\n      if (is_sin) {\n        i++;\n      }\n    } else if (litlvl > 0) {\n      tok += txt[i];\n    } else {\n      if (txt[i] == \"「\") {\n        enddata();\n        endnum();\n        idt = true;\n        tok = \"\";\n      } else if (txt[i] == \"」\") {\n        tokens.push([\"iden\", tok, i]);\n        idt = false;\n        tok = \"\";\n      } else {\n        if (idt) {\n          tok += txt[i];\n        } else if (num) {\n          if (NUMBER_KEYWORDS.includes(txt[i])) {\n            tok += txt[i];\n          } else {\n            endnum();\n            i--;\n          }\n        } else {\n          var ok = false;\n          for (var k in KEYWORDS) {\n            ok = match(txt, i, k);\n            if (ok) {\n              enddata();\n              var kinfo = KEYWORDS[k];\n              i += k.length - 1;\n              tokens.push([...kinfo, i] as Token);\n              break;\n            }\n          }\n          if (!ok) {\n            if (NUMBER_KEYWORDS.includes(txt[i])) {\n              num = true;\n              tok = txt[i];\n            } else {\n              tok += txt[i];\n              data = true;\n            }\n          }\n        }\n      }\n    }\n    i++;\n  }\n  if (tok.length) {\n    if (num) {\n      const numStr = hanzi2numstr(tok);\n      assert(`Invalid number \"${tok}\".`, i, numStr != null);\n      tokens.push([\"num\", numStr, i]);\n    } else if (data) {\n      tokens.push([\"data\", tok, i]);\n    } else {\n      assert(\"Unterminated identifier.\", i, false);\n    }\n  }\n  return tokens;\n}\n\nlet idenMap = {};\n\nfunction tokenRomanize(tokens: Token[], system: RomanizeSystem) {\n  function noDup(x: string) {\n    for (var k in idenMap) {\n      if (idenMap[k] == x) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  for (const token of tokens) {\n    if (token[0] == \"iden\" && !isRoman(token[1])) {\n      var r = idenMap[token[1]];\n      var key = token[1];\n      if (r !== undefined) {\n        token[1] = r;\n      } else {\n        r = hanzi2pinyin(token[1], system);\n        while (!noDup(r)) {\n          r += \"_\";\n        }\n        token[1] = r;\n      }\n      idenMap[key] = r;\n    }\n  }\n}\n\nfunction defaultLogCallback(x: any) {\n  return typeof x == \"string\"\n    ? console.log(x)\n    : console.dir(x, { depth: null, maxArrayLength: null });\n}\n\nfunction defaultErrorCallback(e: any) {\n  console.error(e);\n  process.exit(e);\n}\n\nfunction tokens2asc(tokens: Token[], assert = defaultAssert()) {\n  var asc: ASCNode[] = [];\n  var i = 0;\n  while (i < tokens.length) {\n    var pos = gettok(i, 2);\n    var cmd = gettok(i, 0);\n\n    // @ts-ignore\n    function gettok(idx: number, jdx: 0): TokenType;\n    // @ts-ignore\n    function gettok(idx: number, jdx: 1): string | undefined;\n    // @ts-ignore\n    function gettok(idx: number, jdx: 2): number;\n    // @ts-ignore\n    function gettok(idx: number, jdx: number) {\n      if (tokens[idx] === undefined) {\n        assert(`Unexpected EOF`, pos, false);\n      }\n      return tokens[idx][jdx];\n    }\n\n    const typeassert = (idx: number, good, reason?: string) => {\n      var typ = gettok(idx, 0);\n      assert(\n        `<${cmd}> Expecting ${good.join(\"/\")}${\n          reason ? \" for \" + reason : \"\"\n        }, found ${typ}`,\n        pos,\n        good.includes(typ)\n      );\n    };\n\n    if (\n      gettok(i, 0) == \"decl\" &&\n      (gettok(i, 1) == \"uninit\" || gettok(i, 1) == \"public\")\n    ) {\n      typeassert(i + 1, [\"num\"], \"variable count\");\n      typeassert(i + 2, [\"type\"], \"variable type\");\n      const cnt = Number(gettok(i + 1, 1));\n      assert(\n        `Invalid variable count ${cnt}`,\n        pos,\n        Number.isSafeInteger(cnt) && cnt > 0\n      );\n\n      var x: ASCNode = {\n        op: \"var\",\n        count: cnt,\n        type: gettok(i + 2, 1),\n        values: [],\n        names: [],\n        public: gettok(i, 1) == \"public\",\n        pos\n      };\n      i += 3;\n      while (tokens[i] && gettok(i, 0) == \"assgn\") {\n        x.values.push(tokens[i + 1]);\n        i += 2;\n      }\n      if (tokens[i] && gettok(i, 0) == \"name\") {\n        x.names.push(gettok(i + 1, 1));\n        i += 2;\n      }\n      while (tokens[i] && gettok(i, 0) == \"assgn\") {\n        x.names.push(gettok(i + 1, 1));\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"decl\" && gettok(i, 1) == \"init\") {\n      typeassert(i + 1, [\"type\"], \"variable type\");\n      typeassert(\n        i + 2,\n        [\"data\", \"num\", \"lit\", \"iden\", \"bool\", \"any\"],\n        \"variable initialization\"\n      );\n\n      var x: ASCNode = {\n        op: \"var\",\n        count: 1,\n        type: gettok(i + 1, 1),\n        values: [tokens[i + 2]],\n        public: false,\n        pos\n      };\n      i += 3;\n      if (tokens[i] !== undefined && gettok(i, 0) == \"name\") {\n        x.names = [gettok(i + 1, 1)];\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"decl\" && gettok(i, 1) == \"prop\") {\n      typeassert(i + 1, [\"lit\"], \"property key\");\n      typeassert(i + 3, [\"type\"], \"property type\");\n      typeassert(i + 4, [\"assgn\"], \"property value\");\n      var x: ASCNode = {\n        op: \"prop\",\n        type: gettok(i + 3, 1),\n        name: tokens[i + 1][1],\n        value: tokens[i + 5],\n        pos\n      };\n      i += 6;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"print\") {\n      asc.push({ op: \"print\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funstart\") {\n      var x: ASCNode = { op: \"fun\", arity: 0, args: [], pos };\n      i++;\n      if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funarg\") {\n        i++;\n        while (!(gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funbody\")) {\n          typeassert(i, [\"num\"], \"argument count\");\n          typeassert(i + 1, [\"type\"], \"argument type\");\n          var typ = gettok(i + 1, 1);\n          var cnt = Number(gettok(i, 1));\n          assert(\n            `Invalid argument count ${cnt}.`,\n            pos,\n            Number.isSafeInteger(cnt) && cnt > 0\n          );\n          x.arity += cnt;\n          i += 2;\n          for (var j = 0; j < cnt; j++) {\n            typeassert(i + j * 2, [\"assgn\"], \"another argument\");\n            typeassert(i + j * 2 + 1, [\"iden\"], \"argument\");\n            x.args.push({ name: tokens[i + j * 2 + 1][1], type: typ });\n          }\n          i += cnt * 2;\n        }\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funbody\") {\n      asc.push({ op: \"funbody\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"bigend\") {\n      assert(\n        `<${cmd}> Incorrect function/object end`,\n        pos,\n        gettok(i + 2, 0) == \"ctrl\" && gettok(i + 1, 0) == \"iden\"\n      );\n      asc.push({ op: gettok(i + 2, 1) as \"objend\", pos });\n      i += 3;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"objbody\") {\n      asc.push({ op: \"objbody\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"if\") {\n      var x: ASCNode = { op: \"if\", test: [], pos };\n      i++;\n      while (!(gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"conj\")) {\n        x.test.push(tokens[i]);\n        i++;\n      }\n      i++;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"iftrue\") {\n      asc.push({ op: \"if\", test: [[\"ans\"]], pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"iffalse\") {\n      asc.push({ op: \"if\", test: [[\"ans\"]], not: true, pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"elseif\") {\n      var x: ASCNode = { op: \"if\", test: [], elseif: true, pos };\n      i++;\n      while (!(gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"conj\")) {\n        x.test.push(tokens[i]);\n        i++;\n      }\n      i++;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"end\") {\n      asc.push({ op: \"end\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"ret\") {\n      asc.push({ op: \"return\", value: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"retprev\") {\n      asc.push({ op: \"return\", value: [\"ans\"], pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"retvoid\") {\n      asc.push({ op: \"return\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"break\") {\n      asc.push({ op: \"break\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"continue\") {\n      asc.push({ op: \"continue\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"else\") {\n      asc.push({ op: \"else\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"op\") {\n      typeassert(i + 2, [\"opord\"]);\n      var x: ASCNode = { op: \"op+\", pos };\n      if (gettok(i + 2, 1) == \"l\") {\n        x.lhs = tokens[i + 1];\n        x.rhs = tokens[i + 3];\n      } else {\n        x.lhs = tokens[i + 3];\n        x.rhs = tokens[i + 1];\n      }\n      if (gettok(i, 1) == \"/\" && tokens[i + 4] && gettok(i + 4, 0) == \"mod\") {\n        x.op = \"op%\";\n        i += 5;\n      } else {\n        x.op = (\"op\" + gettok(i, 1)) as \"op+\";\n        i += 4;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"not\") {\n      asc.push({ op: \"not\", value: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"name\") {\n      typeassert(i + 1, [\"iden\"]);\n      var x: ASCNode = { op: \"name\", names: [gettok(i + 1, 1)], pos };\n      i += 2;\n      while (tokens[i] && gettok(i, 0) == \"assgn\") {\n        x.names.push(gettok(i + 1, 1));\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"call\" && gettok(i, 1) == \"r\") {\n      var x: ASCNode = { op: \"call\", fun: tokens[i + 1], args: [], pos };\n      i += 2;\n      while (tokens[i] && gettok(i, 0) == \"opord\" && gettok(i, 1) == \"r\") {\n        typeassert(i + 1, [\"data\", \"num\", \"lit\", \"iden\", \"bool\", \"ans\"]);\n        x.args.push(tokens[i + 1]);\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"call\" && gettok(i, 1) == \"l\") {\n      asc.push({ op: \"call\", pop: true, fun: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"ctnr\" && gettok(i, 1) == \"push\") {\n      typeassert(i + 2, [\"opord\"]);\n      assert(`<${cmd}> Only opord l allowed`, pos, gettok(i + 2, 1) == \"l\");\n      var x: ASCNode = {\n        op: \"push\",\n        container: tokens[i + 1],\n        values: [tokens[i + 3]],\n        pos\n      };\n      i += 4;\n      while (tokens[i] && gettok(i, 0) == \"opord\" && gettok(i, 1) == \"l\") {\n        x.values.push(tokens[i + 1]);\n        i += 2;\n      }\n      asc.push(x);\n    } else if (\n      gettok(i, 0) == \"expr\" &&\n      tokens[i + 2] &&\n      gettok(i + 2, 0) == \"ctnr\" &&\n      gettok(i + 2, 1) == \"subs\"\n    ) {\n      typeassert(i + 1, [\"iden\", \"lit\", \"ans\"]);\n      var x: ASCNode = {\n        op: \"subscript\",\n        container: tokens[i + 1],\n        value: tokens[i + 3],\n        pos\n      };\n      asc.push(x);\n      i += 4;\n    } else if (\n      gettok(i, 0) == \"expr\" &&\n      tokens[i + 2] &&\n      gettok(i + 2, 0) == \"ctnr\" &&\n      gettok(i + 2, 1) == \"len\"\n    ) {\n      typeassert(i + 1, [\"iden\", \"lit\", \"subs\"]);\n      var x: ASCNode = { op: \"length\", container: tokens[i + 1], pos };\n      asc.push(x);\n      i += 3;\n    } else if (\n      gettok(i, 0) == \"expr\" &&\n      tokens[i + 3] &&\n      gettok(i + 3, 0) == \"lop\"\n    ) {\n      var x: ASCNode = {\n        op: (\"op\" + gettok(i + 3, 1)) as \"op+\",\n        lhs: tokens[i + 1],\n        rhs: tokens[i + 2],\n        pos\n      };\n      asc.push(x);\n      i += 4;\n    } else if (gettok(i, 0) == \"expr\") {\n      asc.push({ op: \"temp\", iden: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"ctnr\" && gettok(i, 1) == \"cat\") {\n      var x: ASCNode = { op: \"cat\", containers: [tokens[i + 1]], pos };\n      i += 2;\n      while (gettok(i, 0) == \"opord\" && gettok(i, 1) == \"l\") {\n        x.containers.push(tokens[i + 1]);\n        i += 2;\n      }\n      asc.push(x);\n    } else if (\n      gettok(i, 0) == \"ctrl\" &&\n      gettok(i, 1) == \"for\" &&\n      gettok(i + 2, 0) == \"ctrl\" &&\n      gettok(i + 2, 1) == \"forin\"\n    ) {\n      var x: ASCNode = {\n        op: \"for\",\n        container: tokens[i + 1],\n        iterator: gettok(i + 3, 1),\n        pos\n      };\n      i += 4;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"whiletrue\") {\n      asc.push({ op: \"whiletrue\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"whilen0\") {\n      assert(\n        `<${cmd}> Incorrect loop start`,\n        pos,\n        gettok(i + 2, 1) == \"whilen1\"\n      );\n      asc.push({ op: \"whilen\", value: tokens[i + 1], pos });\n      i += 3;\n    } else if (gettok(i, 0) == \"rassgn\" && gettok(i, 1) == \"a\") {\n      var x: ASCNode = { op: \"reassign\", lhs: tokens[i + 1], pos };\n      if (gettok(i + 2, 0) == \"ctnr\" && gettok(i + 2, 1) == \"subs\") {\n        x.lhssubs = tokens[i + 3];\n        if (gettok(i + 6, 0) == \"rassgn\" && gettok(i + 6, 1) == \"delete\") {\n          x.rhs = undefined;\n          x.del = true;\n          i += 7;\n        } else {\n          x.rhs = tokens[i + 6];\n          if (\n            tokens[i + 7] &&\n            gettok(i + 7, 0) == \"ctnr\" &&\n            gettok(i + 7, 1) == \"subs\"\n          ) {\n            x.rhssubs = tokens[i + 8];\n            i += 10;\n          } else {\n            i += 8;\n          }\n        }\n      } else {\n        assert(\n          `<${cmd}> Missing conj`,\n          pos,\n          gettok(i + 2, 0) == \"ctrl\" && gettok(i + 2, 1) == \"conj\"\n        );\n        x.rhs = tokens[i + 4];\n        if (\n          tokens[i + 5] &&\n          gettok(i + 5, 0) == \"ctnr\" &&\n          gettok(i + 5, 1) == \"subs\"\n        ) {\n          x.rhssubs = tokens[i + 6];\n          i += 8;\n        } else {\n          i += 6;\n        }\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"discard\") {\n      asc.push({ op: \"discard\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"take\") {\n      typeassert(i + 1, [\"num\"], \"argument count\");\n      const cnt = Number(gettok(i + 1, 1));\n      assert(\n        `Invalid argument count ${cnt}`,\n        pos,\n        Number.isSafeInteger(cnt) && cnt > 0\n      );\n      asc.push({ op: \"take\", count: cnt, pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"import\" && gettok(i, 1) == \"file\") {\n      var x: ASCNode = { op: \"import\", file: gettok(i + 1, 1), iden: [], pos };\n      i += 2;\n      while (gettok(i, 0) == \"import\" && gettok(i, 1) == \"in\") {\n        x.file += \"/\" + gettok(i + 1, 1);\n        i += 2;\n      }\n      i += 1;\n      if (tokens[i] && gettok(i, 0) == \"import\" && gettok(i, 1) == \"iden\") {\n        i++;\n        while (!(gettok(i, 0) == \"import\" && gettok(i, 1) == \"idenend\")) {\n          typeassert(i, [\"iden\"]);\n          x.iden.push(gettok(i, 1));\n          i++;\n        }\n        i++;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"try\") {\n      asc.push({ op: \"try\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"catch\") {\n      asc.push({ op: \"catch\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"catcherr0\") {\n      typeassert(i + 2, [\"try\"]);\n      if (tokens[i + 3] && gettok(i + 3, 0) == \"name\") {\n        asc.push({\n          op: \"catcherr\",\n          error: tokens[i + 1],\n          name: gettok(i + 4, 1),\n          pos\n        });\n        i += 5;\n      } else {\n        asc.push({\n          op: \"catcherr\",\n          error: tokens[i + 1],\n          name: undefined,\n          pos\n        });\n        i += 3;\n      }\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"catchall\") {\n      if (tokens[i + 1] && gettok(i + 1, 0) == \"name\") {\n        asc.push({\n          op: \"catcherr\",\n          error: undefined,\n          name: gettok(i + 2, 1),\n          pos\n        });\n        i += 3;\n      } else {\n        asc.push({ op: \"catcherr\", error: undefined, name: undefined, pos });\n        i++;\n      }\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"end\") {\n      asc.push({ op: \"tryend\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"throw\" && gettok(i, 1) == \"a\") {\n      typeassert(i + 2, [\"throw\"]);\n      if (tokens[i + 3] && gettok(i + 3, 0) == \"assgn\") {\n        asc.push({\n          op: \"throw\",\n          error: tokens[i + 1],\n          message: tokens[i + 4],\n          pos\n        });\n        i += 5;\n      } else {\n        asc.push({ op: \"throw\", error: tokens[i + 1], pos });\n        i += 3;\n      }\n    } else if (gettok(i, 0) == \"comment\") {\n      asc.push({ op: \"comment\", value: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"macro\") {\n      i += 2;\n    } else {\n      //console.log(\"Unrecognized\",tokens[i])\n      i++;\n    }\n  }\n\n  return asc;\n}\n\nfunction compile(txt: string, options: Partial<CompileOptions> = {}): string {\n  const {\n    lang = \"js\",\n    romanizeIdentifiers = \"none\",\n    resetVarCnt = true,\n    logCallback = defaultLogCallback,\n    errorCallback = defaultErrorCallback,\n    lib = STDLIB,\n    strict = false,\n\n    // import options\n    entryFilepath = undefined,\n    importPaths = [],\n    importCache = {},\n    importContext = {},\n    allowHttp = false,\n    trustedHosts = [],\n    requestTimeout = 2000\n  } = options;\n\n  trustedHosts.push(...defaultTrustedHosts);\n\n  const importOptions = {\n    entryFilepath,\n    importPaths,\n    importCache,\n    importContext,\n    allowHttp,\n    trustedHosts,\n    requestTimeout\n  };\n\n  if (resetVarCnt) idenMap = {};\n  txt = (txt || \"\").replace(/\\r\\n/g, \"\\n\");\n\n  var txtlines = txt.split(\"\\n\");\n\n  function assert(msg: string, pos: number, b: any) {\n    var errmsg = \"\";\n    if (!b) {\n      errmsg += `[Syntax Error] ${msg}\\n`;\n      var l = 0;\n      for (var i = 0; i < txtlines.length; i++) {\n        l += txtlines[i].length + 1;\n        if (l > pos) {\n          errmsg += `Line ${1 + i}, Character ${1 +\n            pos -\n            (l - txtlines[i].length)}:${txtlines[i]}`;\n          break;\n        }\n      }\n      logCallback(errmsg);\n    }\n    if (errmsg.length) {\n      if (errorCallback) {\n        errorCallback(errmsg);\n      }\n      return errmsg;\n    }\n    return 0;\n  }\n\n  var macros = extractMacros(txt, {\n    lib,\n    lang,\n    importOptions\n  });\n  txt = expandMacros(txt, macros);\n\n  logCallback(\"\\n\\n=== [PASS 0] EXPAND-MACROS ===\");\n  logCallback(macros);\n  // logCallback(txt);\n\n  var tokens = wy2tokens(txt, assert);\n\n  logCallback(\"\\n\\n=== [PASS 1] TOKENIZER ===\");\n  logCallback(tokens);\n\n  if (romanizeIdentifiers != \"none\") {\n    tokenRomanize(tokens, romanizeIdentifiers);\n  }\n\n  var asc = tokens2asc(tokens, assert);\n\n  logCallback(\"\\n\\n=== [PASS 2] ABSTRACT SYNTAX CHAIN ===\");\n  logCallback(asc);\n\n  if (strict) {\n    logCallback(\"\\n\\n=== [PASS 2.5] TYPECHECK ===\");\n    logCallback(printSignature(typecheck(asc, assert)));\n  }\n\n  logCallback(\"\\n\\n=== [PASS 3] COMPILER ===\");\n  if (!transpilers[lang]) {\n    new Error(\"Target language not supported.\");\n  }\n  var transpiler = new transpilers[lang](asc);\n  var { imports, result } = transpiler.transpile({ imports });\n  var targ = result;\n  logCallback(targ);\n  imports = imports || [];\n  imports = Array.from(new Set(imports));\n  logCallback(\"Loading imports \" + imports.join(\", \"));\n\n  bundleImports(imports, { lib, lang }, importOptions).forEach(\n    ({ src, moduleName, entry }) => {\n      const compiledModule = compile(src, {\n        ...options,\n        entryFilepath: entry,\n        resetVarCnt: false,\n        strict: false\n      });\n\n      targ = transpiler.wrapModule(moduleName, compiledModule) + targ;\n    }\n  );\n\n  return targ;\n}\n\nfunction execute(\n  source: string,\n  options: Partial<ExecuteOptions & CompileOptions> = {}\n) {\n  const { lang = \"js\" } = options;\n  isLangSupportedForEval(lang);\n  const compiled = compile(source, options);\n  evalCompiled(compiled, options);\n}\n\nexport {\n  compile,\n  evalCompiled,\n  execute,\n  version,\n  wy2tokens,\n  tokens2asc,\n  hanzi2num,\n  hanzi2numstr,\n  num2hanzi,\n  bool2hanzi,\n  hanzi2pinyin,\n  KEYWORDS,\n  NUMBER_KEYWORDS,\n  STDLIB\n};\n","export enum NumberTokenType {\n  SIGN, // 負\n  DIGIT, // 一二三...\n  DECIMAL, // ·\n  INT_MULT, // 十百千萬億...\n  FRAC_MULT, // 分釐毫...\n  DELIM, // 又\n  ZERO, // 零\n\n  // pseudo tokens\n  BEGIN, // <BEGIN>\n  END // <END>\n}\nexport type Digit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n\nexport type NumberToken =\n  | {\n      type: NumberTokenType.ZERO | NumberTokenType.DIGIT;\n      digit: Digit;\n    }\n  | {\n      type: NumberTokenType.SIGN;\n      sign: number;\n    }\n  | {\n      type:\n        | NumberTokenType.DECIMAL\n        | NumberTokenType.INT_MULT\n        | NumberTokenType.FRAC_MULT;\n      exp: number;\n    }\n  | {\n      type: NumberTokenType.DELIM | NumberTokenType.BEGIN | NumberTokenType.END;\n    };\n\nexport interface ParseResult {\n  sign: number;\n  exp: number;\n  digits: Digit[];\n}\n\nconst NUM_TOKENS = {\n  負: { type: NumberTokenType.SIGN, sign: -1 },\n  \"·\": { type: NumberTokenType.DECIMAL, exp: 0 }, // U+00B7 Middle Dot\n  又: { type: NumberTokenType.DELIM },\n  有: { type: NumberTokenType.DELIM },\n  零: { type: NumberTokenType.ZERO, digit: \"0\" },\n  一: { type: NumberTokenType.DIGIT, digit: \"1\" },\n  二: { type: NumberTokenType.DIGIT, digit: \"2\" },\n  三: { type: NumberTokenType.DIGIT, digit: \"3\" },\n  四: { type: NumberTokenType.DIGIT, digit: \"4\" },\n  五: { type: NumberTokenType.DIGIT, digit: \"5\" },\n  六: { type: NumberTokenType.DIGIT, digit: \"6\" },\n  七: { type: NumberTokenType.DIGIT, digit: \"7\" },\n  八: { type: NumberTokenType.DIGIT, digit: \"8\" },\n  九: { type: NumberTokenType.DIGIT, digit: \"9\" },\n  十: { type: NumberTokenType.INT_MULT, exp: 1 },\n  百: { type: NumberTokenType.INT_MULT, exp: 2 },\n  千: { type: NumberTokenType.INT_MULT, exp: 3 },\n  萬: { type: NumberTokenType.INT_MULT, exp: 4 },\n  億: { type: NumberTokenType.INT_MULT, exp: 8 },\n  兆: { type: NumberTokenType.INT_MULT, exp: 12 },\n  京: { type: NumberTokenType.INT_MULT, exp: 16 },\n  垓: { type: NumberTokenType.INT_MULT, exp: 20 },\n  秭: { type: NumberTokenType.INT_MULT, exp: 24 },\n  穰: { type: NumberTokenType.INT_MULT, exp: 28 },\n  溝: { type: NumberTokenType.INT_MULT, exp: 32 },\n  澗: { type: NumberTokenType.INT_MULT, exp: 36 },\n  正: { type: NumberTokenType.INT_MULT, exp: 40 },\n  載: { type: NumberTokenType.INT_MULT, exp: 44 },\n  極: { type: NumberTokenType.INT_MULT, exp: 48 },\n  分: { type: NumberTokenType.FRAC_MULT, exp: -1 },\n  釐: { type: NumberTokenType.FRAC_MULT, exp: -2 },\n  毫: { type: NumberTokenType.FRAC_MULT, exp: -3 },\n  絲: { type: NumberTokenType.FRAC_MULT, exp: -4 },\n  忽: { type: NumberTokenType.FRAC_MULT, exp: -5 },\n  微: { type: NumberTokenType.FRAC_MULT, exp: -6 },\n  纖: { type: NumberTokenType.FRAC_MULT, exp: -7 },\n  沙: { type: NumberTokenType.FRAC_MULT, exp: -8 },\n  塵: { type: NumberTokenType.FRAC_MULT, exp: -9 },\n  埃: { type: NumberTokenType.FRAC_MULT, exp: -10 },\n  渺: { type: NumberTokenType.FRAC_MULT, exp: -11 },\n  漠: { type: NumberTokenType.FRAC_MULT, exp: -12 },\n  // eslint-disable-next-line no-useless-computed-key\n  [\"〇\"]: { type: NumberTokenType.DIGIT, digit: \"0\" } // U+3007 Ideographic Number Zero\n} as Record<string, NumberToken>;\n\nconst NEG_WORD = \"負\";\nconst INF_WORD = \"無限大數\";\nconst NAN_WORD = \"不可算數\";\n\nconst DECIMAL_WORD = {\n  readout: \"又\"\n};\n\nconst DIGIT_WORDS = {\n  readout: {\n    0: \"零\",\n    1: \"一\",\n    2: \"二\",\n    3: \"三\",\n    4: \"四\",\n    5: \"五\",\n    6: \"六\",\n    7: \"七\",\n    8: \"八\",\n    9: \"九\"\n  }\n};\n\nconst MULT_WORDS = {\n  readout: [\n    { str: \"極\", exp: 48 },\n    { str: \"載\", exp: 44 },\n    { str: \"正\", exp: 40 },\n    { str: \"澗\", exp: 36 },\n    { str: \"溝\", exp: 32 },\n    { str: \"穰\", exp: 28 },\n    { str: \"秭\", exp: 24 },\n    { str: \"垓\", exp: 20 },\n    { str: \"京\", exp: 16 },\n    { str: \"兆\", exp: 12 },\n    { str: \"億\", exp: 8 },\n    { str: \"萬\", exp: 4 },\n    { str: \"千\", exp: 3 },\n    { str: \"百\", exp: 2 },\n    { str: \"十\", exp: 1 },\n    { str: \"\", exp: 0 },\n    { str: \"分\", exp: -1 },\n    { str: \"釐\", exp: -2 },\n    { str: \"毫\", exp: -3 },\n    { str: \"絲\", exp: -4 },\n    { str: \"忽\", exp: -5 },\n    { str: \"微\", exp: -6 },\n    { str: \"纖\", exp: -7 },\n    { str: \"沙\", exp: -8 },\n    { str: \"塵\", exp: -9 },\n    { str: \"埃\", exp: -10 },\n    { str: \"渺\", exp: -11 },\n    { str: \"漠\", exp: -12 }\n  ]\n};\n\nconst eMultState = {\n  NONE: \"NONE\", // <END>, 一 (ambiguous: 一萬一 or 一十一 or 一·一 or 一絲一)\n  FRAC: \"FRAC\", // ...微\n  INT: \"INT\", // ...萬, ...·,\n  DONE: \"DONE\", // 負一,\n  SIGN: \"SIGN\"\n};\n\nconst eDigitState = {\n  NONE: \"NONE\", // <END>, ·\n  MULT: \"MULT\", // 微\n  MULT_AMBIG: \"MULT_AMBIG\", // 十 (ambiguous: ...十 or 一十)\n  DIGIT: \"DIGIT\", // 一\n  DIGIT_WITH_ZERO: \"DIGIT_WITH_ZERO\", // 一...零, 零零， 零一...零,\n  DELIM: \"DELIM\", // 又\n  ZERO: \"ZERO\", // 零<END>, 零·, 零又, 零微, 零一\n  SIGN: \"SIGN\", // 負\n  ZERO_MULT_AMBIG: \"ZERO_MULT_AMBIG\" // 零十 (ambiguous: 零一十 or 零十 or 〇十)\n};\n\nconst RESULT_2_TO_63 = {\n  sign: 1,\n  exp: 0,\n  digits: \"9223372036854775808\".split(\"\").reverse() as Digit[]\n};\n\nexport function hanzi2numstr(s: string): string | null {\n  // returns array of tokens on success, null on invalid string\n  function tokenize(s: string) {\n    const result: NumberToken[] = [{ type: NumberTokenType.BEGIN }];\n    for (let i = 0; i < s.length; ++i) {\n      const tokenStr = s.charAt(i);\n      if (!NUM_TOKENS[tokenStr]) {\n        return null;\n      }\n\n      result.push(NUM_TOKENS[tokenStr]);\n    }\n    result.push({ type: NumberTokenType.END });\n    return result;\n  }\n\n  // returns:\n  //   on success: {\n  //     sign:   +1/-1/+Infinity/-Infinity/NaN,\n  //     exp:    power of 10,\n  //     digits: array of digit chars from lowest to highest, with leading and trailing zeros\n  //   }\n  //   on invalid string: null\n  // result = sign * {digits[length-1..0]} * 10^exp\n  // e.g. 負零又五毫零絲 = { sign: -1, exp: -4, digits: [\"0\", \"5\", \"0\", \"0, \"0\"] } = -00050e-4 = -0.005\n  function parse(tokens: NumberToken[]): ParseResult | null {\n    // parses the number string backwards, from lowest to highest digit\n    // parser state\n    let digitState = eDigitState.NONE;\n\n    // multiplier stack, keep track of all active multiplier exponents\n    const multStack = {\n      isEmpty() {\n        return this._exps.length === 0;\n      },\n      total() {\n        return this._expAdd;\n      },\n      top() {\n        return this._exps[this._exps.length - 1];\n      },\n      state() {\n        if (this.isEmpty()) {\n          return eMultState.NONE;\n        } else if (this._exps[0] < 0) {\n          return eMultState.FRAC;\n        } else if (this._exps[0] < Infinity) {\n          return eMultState.INT;\n        } else {\n          return eMultState.DONE;\n        }\n      },\n\n      push(exp: number) {\n        this._expAdd += exp;\n        this._exps.push(exp);\n      },\n      pop() {\n        this._expAdd -= this.top();\n        this._exps.pop();\n      },\n      clear() {\n        this._expAdd = 0;\n        this._exps = [];\n      },\n      markDone() {\n        this.clear();\n        this.push(Infinity);\n      },\n\n      _exps: [] as number[],\n      _expAdd: 0\n    };\n\n    // result, with different convension of exp for internal use\n    const result = {\n      sign() {\n        return this._sign;\n      },\n      exp() {\n        return this._exp;\n      },\n      digits() {\n        return this._digits;\n      },\n\n      applySign(newSign: number) {\n        this._sign *= newSign;\n      },\n      // digit: number or array of numbers\n      push(digit: Digit[] | Digit) {\n        if (Array.isArray(digit)) {\n          this._digits = this._digits.concat(digit);\n          this._exp += digit.length;\n        } else {\n          this._digits.push(digit);\n          ++this._exp;\n        }\n      },\n      fillZeros(newExp: number) {\n        this.push(Array(newExp - this._exp).fill(\"0\"));\n      },\n      resetExp(newExp: number) {\n        this._exp = newExp;\n      },\n\n      // the result is sign * 0.{digits[length-1..0]} * 10^exp\n      _sign: 1, // +1/-1\n      _exp: 0, // one plus exponent of the highest digit\n      _digits: [] as Digit[] // lowest to highest\n    };\n\n    // parses the number string backwards, discarding <END>\n    for (let i = tokens.length - 1; i > 0; --i) {\n      const token = tokens[i - 1];\n\n      // sign should be the first char\n      if (\n        multStack.state() === eMultState.SIGN &&\n        token.type !== NumberTokenType.BEGIN\n      ) {\n        return null;\n      }\n\n      // disambiguate omitted 一\n      switch (digitState) {\n        case eDigitState.MULT_AMBIG:\n          switch (token.type) {\n            // <BEGIN>(一?)十 -> <BEGIN>一十\n            // 負(一?)十 -> 負一十\n            // 又(一?)十 -> 又一十\n            // ·(一?)十 -> ·一十\n            // 分(一?)十絲 -> 分一十絲\n            case NumberTokenType.BEGIN:\n            case NumberTokenType.SIGN:\n            case NumberTokenType.DELIM:\n            case NumberTokenType.DECIMAL:\n            case NumberTokenType.FRAC_MULT:\n              result.push(\"1\");\n              digitState = eDigitState.DIGIT;\n              break;\n\n            // 一(一?)十 -> 一十\n            case NumberTokenType.DIGIT:\n              digitState = eDigitState.MULT;\n              break;\n\n            // 百(一?)十 -> 百一十\n            // 千(一?)十 -> 千一十\n            // 百(一?)萬 -> 百萬\n            case NumberTokenType.INT_MULT:\n              if (multStack.top() < (token.exp || 1)) {\n                result.push(\"1\");\n                digitState = eDigitState.DIGIT;\n              } else {\n                digitState = eDigitState.MULT;\n              }\n              break;\n\n            // 零(一?)十 -> 零(一?)十\n            case NumberTokenType.ZERO:\n              digitState = eDigitState.MULT_AMBIG;\n              break;\n\n            default:\n              break;\n          }\n          break;\n\n        case eDigitState.ZERO_MULT_AMBIG:\n          switch (token.type) {\n            // <BEGIN>(零一|零|〇)十 -> <BEGIN>〇十\n            // 負(零一|零|〇)十 -> 負〇十\n            // 一(零一|零|〇)十 -> 一〇十\n            // 又(零一|零|〇)十 -> 又〇十\n            // 零(零一|零|〇)十 -> 〇〇十\n            case NumberTokenType.BEGIN:\n            case NumberTokenType.SIGN:\n            case NumberTokenType.DIGIT:\n            case NumberTokenType.DELIM:\n            case NumberTokenType.ZERO:\n              result.push(\"0\");\n              digitState = eDigitState.DIGIT_WITH_ZERO;\n              break;\n\n            // ·(零一|零|〇)十絲 -> ·零一十絲\n            // ·(零一|零|〇)十釐 -> ·〇十釐\n            // ·(零一|零|〇)十分 -> error\n            // ·(零一|零|〇)百分 -> error\n            // 分(零一|零|〇)十絲 -> 分零一十絲\n            // 分(零一|零|〇)十毫 -> 分〇十絲\n            // 分(零一|零|〇)十釐 -> error\n            // 分(零一|零|〇)十分 -> error\n            case NumberTokenType.DECIMAL:\n            case NumberTokenType.FRAC_MULT:\n              if (multStack.total() + 1 < token.exp) {\n                result.push(\"1\");\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              } else if (multStack.total() + 1 === token.exp) {\n                result.push(\"0\");\n                digitState = eDigitState.DIGIT_WITH_ZERO;\n              } else {\n                return null;\n              }\n              break;\n\n            // 千(零一|零|〇)十 -> 千零一十\n            // 百(零一|零|〇)十 -> 百〇十\n            // 萬(零一|零|〇)萬 -> 萬零萬\n            // 百(零一|零|〇)萬 -> 百零萬\n            case NumberTokenType.INT_MULT:\n              if (token.exp == null) {\n                return null;\n              }\n\n              if (multStack.top() + 1 < token.exp) {\n                result.push(\"1\");\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              } else if (multStack.top() + 1 === token.exp) {\n                result.push(\"0\");\n                digitState = eDigitState.DIGIT_WITH_ZERO;\n              } else {\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              }\n              break;\n\n            default:\n              break;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      // determine the exponent of tail digits\n      if (multStack.state() === eMultState.NONE) {\n        switch (token.type) {\n          case NumberTokenType.INT_MULT:\n            // exponent is correct\n            break;\n\n          case NumberTokenType.DECIMAL:\n          case NumberTokenType.FRAC_MULT:\n            if (token.exp != null) {\n              result.resetExp(token.exp);\n            }\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      // determine the current exponent and update exponent stack\n      const currExp = (function() {\n        switch (token.type) {\n          case NumberTokenType.BEGIN:\n          case NumberTokenType.SIGN:\n            switch (digitState) {\n              // <BEGIN>微 -> error\n              // 負微 -> error\n              case eDigitState.MULT:\n                return null;\n\n              default:\n                multStack.markDone();\n                return multStack.total();\n            }\n\n          case NumberTokenType.DIGIT:\n          case NumberTokenType.ZERO:\n            switch (digitState) {\n              // 一又 -> 一·\n              // 零又 -> 零·\n              case eDigitState.DELIM:\n                multStack.clear();\n                multStack.push(0);\n                return multStack.total();\n\n              default:\n                return result.exp();\n            }\n\n          case NumberTokenType.DELIM:\n            switch (digitState) {\n              // 又又 -> error\n              case eDigitState.DELIM:\n                return null;\n\n              default:\n                return result.exp();\n            }\n\n          // ·...絲 -> ·\n          // 釐...絲 -> 釐\n          // ·絲 -> error\n          // 釐絲 -> error\n          case NumberTokenType.DECIMAL:\n          case NumberTokenType.FRAC_MULT:\n            if (digitState === eDigitState.MULT) {\n              return null;\n            } else {\n              multStack.clear();\n              multStack.push(token.exp);\n              return multStack.total();\n            }\n\n          case NumberTokenType.INT_MULT:\n            switch (digitState) {\n              // 百又...絲 -> 百\n              // 萬又...百萬億 -> 萬萬億\n              case eDigitState.DELIM:\n                if (multStack.state() === eMultState.FRAC) {\n                  multStack.clear();\n                  multStack.push(token.exp);\n                } else {\n                  while (!multStack.isEmpty() && multStack.top() < token.exp) {\n                    multStack.pop();\n                  }\n\n                  multStack.push(token.exp);\n                }\n                break;\n\n              // 萬...百萬億 -> 萬萬億\n              // 萬零...百萬億 -> 萬萬億\n              // 百...十絲 -> 百絲\n              // 千零...十絲 -> 千絲\n              case eDigitState.NONE:\n              case eDigitState.MULT:\n              case eDigitState.MULT_AMBIG:\n              case eDigitState.DIGIT:\n              case eDigitState.DIGIT_WITH_ZERO:\n              case eDigitState.ZERO:\n              case eDigitState.ZERO_MULT_AMBIG:\n                while (\n                  !multStack.isEmpty() &&\n                  multStack.top() < token.exp &&\n                  multStack.top() >= 0\n                ) {\n                  multStack.pop();\n                }\n\n                multStack.push(token.exp);\n                break;\n            }\n            return multStack.total();\n        }\n      })();\n      if (currExp == null) {\n        return null;\n      }\n\n      // check for overlapping decimal places\n      if (currExp < result.exp()) {\n        return null;\n      }\n\n      // check for disallowed missing decimal places\n      if (currExp > result.exp()) {\n        const check = function() {\n          if (\n            token.type === NumberTokenType.BEGIN ||\n            token.type === NumberTokenType.SIGN\n          ) {\n            return true;\n          }\n\n          if (\n            digitState === eDigitState.DELIM ||\n            digitState === eDigitState.ZERO\n          ) {\n            return true;\n          }\n\n          if (token.type === NumberTokenType.INT_MULT) {\n            return true;\n          }\n\n          if (\n            token.type === NumberTokenType.FRAC_MULT ||\n            token.type === NumberTokenType.DECIMAL\n          ) {\n            return true;\n          }\n\n          return false;\n        };\n\n        if (!check()) {\n          return null;\n        }\n\n        if (multStack.state() !== eMultState.DONE) {\n          result.fillZeros(currExp);\n        }\n      }\n\n      // push the digit, update parser state\n      switch (token.type) {\n        case NumberTokenType.BEGIN:\n          break;\n\n        case NumberTokenType.SIGN:\n          result.applySign(token.sign);\n          digitState = eDigitState.SIGN;\n          break;\n\n        case NumberTokenType.DIGIT:\n          result.push(token.digit);\n          if (\n            digitState === eDigitState.ZERO ||\n            digitState === eDigitState.DIGIT_WITH_ZERO\n          ) {\n            digitState = eDigitState.DIGIT_WITH_ZERO;\n          } else {\n            digitState = eDigitState.DIGIT;\n          }\n\n          break;\n\n        case NumberTokenType.DECIMAL:\n          digitState = eDigitState.NONE;\n          break;\n\n        case NumberTokenType.INT_MULT:\n          digitState = eDigitState.MULT_AMBIG;\n          break;\n\n        case NumberTokenType.FRAC_MULT:\n          digitState = eDigitState.MULT;\n          break;\n\n        case NumberTokenType.DELIM:\n          digitState = eDigitState.DELIM;\n          break;\n\n        case NumberTokenType.ZERO:\n          switch (digitState) {\n            case eDigitState.NONE:\n            case eDigitState.MULT:\n            case eDigitState.DIGIT:\n            case eDigitState.DELIM:\n              result.push(token.digit);\n              digitState = eDigitState.ZERO;\n              break;\n\n            case eDigitState.DIGIT_WITH_ZERO:\n            case eDigitState.ZERO:\n              result.push(token.digit);\n              digitState = eDigitState.ZERO;\n              break;\n\n            case eDigitState.MULT_AMBIG:\n              digitState = eDigitState.ZERO_MULT_AMBIG;\n              break;\n          }\n          break;\n      }\n    }\n\n    if (result.digits().length === 0) {\n      return null;\n    }\n\n    return {\n      sign: result.sign(),\n      exp: result.exp() - result.digits().length,\n      digits: result.digits()\n    };\n  }\n\n  function getDigit(result: any, exp: number) {\n    const idx = exp - result.exp;\n    if (idx >= 0 && idx < result.digits.length) {\n      return result.digits[idx];\n    } else {\n      return \"0\";\n    }\n  }\n\n  function compareMagnitude(resultA: ParseResult, resultB: ParseResult) {\n    const getMaxExp = (result: ParseResult) =>\n      result.exp + (result.digits.length - 1);\n\n    const maxExp = Math.max(getMaxExp(resultA), getMaxExp(resultB));\n    for (let i = maxExp; i >= resultA.exp || i >= resultB.exp; --i) {\n      const digitA = Number(getDigit(resultA, i));\n      const digitB = Number(getDigit(resultB, i));\n      if (digitA > digitB) {\n        return 1;\n      } else if (digitA < digitB) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  // parse\n  const tokens = tokenize(s);\n  if (tokens == null) {\n    return null;\n  }\n\n  const result = parse(tokens);\n  if (result == null) {\n    return null;\n  }\n\n  // build decimal string\n  if (!Number.isFinite(result.sign)) {\n    // infinity/NaN\n    return result.sign.toString();\n  }\n  let str = result.sign < 0 ? \"-\" : \"\";\n\n  // no fractional digits (including zero) and fits in int64?\n  const printAsInt = (function() {\n    if (result.exp < 0) {\n      return false;\n    }\n\n    const c = compareMagnitude(result, RESULT_2_TO_63);\n    return result.sign < 0 ? c <= 0 : c < 0;\n  })();\n\n  // digit range, leading and trailing zeros trimmed\n  const rend = result.digits.findIndex(x => x !== \"0\");\n  if (rend < 0) {\n    str += \"0\";\n    return str;\n  }\n  const rendExp = result.exp + rend;\n\n  let rbegin = result.digits.length;\n  while (result.digits[rbegin - 1] === \"0\") {\n    --rbegin;\n  }\n\n  const rbeginExp = result.exp + rbegin;\n\n  // compute length of fixed and scientific format\n  let expStr = \"\";\n  let printAsScientific = false;\n  if (!printAsInt) {\n    const scientificExp = result.exp + (rbegin - 1);\n    expStr =\n      (scientificExp < 0 ? \"e-\" : \"e+\") + Math.abs(scientificExp).toString();\n    const fixedLen =\n      rendExp < 0 ? Math.max(rbeginExp, 1) - rendExp + 1 : rbeginExp;\n    const scientificMagLen = rbegin - rend > 1 ? rbegin - rend + 1 : 1;\n    if (scientificMagLen + expStr.length < fixedLen) {\n      printAsScientific = true;\n    }\n  }\n\n  if (printAsScientific) {\n    str += result.digits[rbegin - 1];\n    if (rbegin - 1 > rend) {\n      str += \".\";\n      for (let i = rbegin - 1; i > rend; --i) {\n        str += result.digits[i - 1];\n      }\n    }\n    str += expStr;\n    return str;\n  } else {\n    for (let i = Math.max(rbeginExp, 1); i > 0; --i) {\n      str += getDigit(result, i - 1);\n    }\n\n    if (rendExp < 0) {\n      str += \".\";\n      for (let i = 0; i > rendExp; --i) {\n        str += getDigit(result, i - 1);\n      }\n    }\n    return str;\n  }\n}\n\nexport function hanzi2num(s: string): number {\n  const str = hanzi2numstr(s);\n  if (str == null) {\n    return NaN;\n  } else {\n    return Number(str);\n  }\n}\n\nexport function num2hanzi(\n  n: number,\n  format = \"\",\n  precision = undefined\n): string {\n  if (!Number.isFinite(n)) {\n    if (n === Infinity) {\n      return INF_WORD;\n    } else if (n === -Infinity) {\n      return NEG_WORD + INF_WORD;\n    } else {\n      return NAN_WORD;\n    }\n  }\n\n  // the same format as hanzi2numstr.parse\n  function parseNumStr(str: string): ParseResult {\n    function myIndexOf(str: string, val: string) {\n      const idx = str.indexOf(val);\n      return idx < 0 ? str.length : idx;\n    }\n    const sign = str.charAt(0) === \"-\" ? -1 : 1;\n    const digitIndex = \"+-\".includes(str.charAt(0)) ? 1 : 0;\n    const expIndex = myIndexOf(str, \"e\");\n    const scientificExp =\n      expIndex === str.length ? 0 : Number(str.substring(expIndex + 1));\n    const decimalIndex = myIndexOf(str.substring(0, expIndex), \".\");\n    const intStr = str.substring(digitIndex, decimalIndex);\n    const intDigits = intStr.split(\"\").reverse() as Digit[];\n    const fracStr = str.substring(\n      Math.min(decimalIndex + 1, expIndex),\n      expIndex\n    );\n    const fracDigits = fracStr.split(\"\").reverse() as Digit[];\n    return {\n      sign,\n      exp: scientificExp - fracDigits.length,\n      digits: fracDigits.concat(intDigits)\n    };\n  }\n\n  // reserved for future extension\n  const chineseFormat = \"readout\";\n  const multWords = MULT_WORDS[chineseFormat];\n  const digitWords = DIGIT_WORDS[chineseFormat];\n  const decimalWord = DECIMAL_WORD[chineseFormat];\n\n  let numStr = precision === undefined ? n.toString() : n.toFixed(precision);\n  let result = parseNumStr(numStr);\n  let signStr = result.sign < 0 ? NEG_WORD : \"\";\n  let rend = result.digits.findIndex(x => x !== \"0\");\n  if (rend < 0) {\n    return signStr + digitWords[\"0\"];\n  }\n\n  let rbegin = result.digits.length;\n  while (result.digits[rbegin - 1] === \"0\") {\n    --rbegin;\n  }\n\n  // is this beyond the lowest fractional unit we can represent?\n  const minMultExp = multWords[multWords.length - 1].exp;\n  if (result.exp + rend < minMultExp) {\n    // cap to lowest fractional unit and retry\n    numStr = n.toFixed(-minMultExp);\n    result = parseNumStr(numStr);\n    signStr = result.sign < 0 ? NEG_WORD : \"\";\n    rend = result.digits.findIndex(x => x !== \"0\");\n    if (rend < 0) {\n      return signStr + digitWords[\"0\"];\n    }\n\n    rbegin = result.digits.length;\n    while (result.digits[rbegin - 1] === \"0\") {\n      --rbegin;\n    }\n  }\n\n  // convert digits to readout format\n  let str = signStr;\n  let pendingZero = false;\n  let i = rbegin;\n  const intToReadout = function(expBias = 0) {\n    let hasOutput = false;\n    while (i !== rend) {\n      const mult = multWords.find(x => x.exp + expBias <= result.exp + (i - 1));\n      if (mult === undefined || mult.exp < 0) {\n        // done with int part\n        break;\n      } else if (mult.exp > 0) {\n        // needs higher multiplier\n        if (intToReadout(expBias + mult.exp)) {\n          // 零 is omitted here (100 0000 -> 一百萬)\n          pendingZero = false;\n          // write the multiplier\n          str += mult.str;\n          hasOutput = true;\n        }\n      } else if (mult.exp === 0) {\n        if (result.digits[i - 1] !== \"0\") {\n          // insert 零 if necessary\n          if (pendingZero) {\n            str += digitWords[\"0\"];\n            pendingZero = false;\n          }\n          // write the digit\n          str += digitWords[result.digits[i - 1]];\n          hasOutput = true;\n        } else {\n          // mark that there are zero(s) not written yet\n          // 零 will be added later if necessary\n          pendingZero = true;\n        }\n        --i;\n        break;\n      }\n    }\n    return hasOutput;\n  };\n  const fracToReadout = function() {\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (i !== rend) {\n      const mult = multWords.find(x => x.exp <= result.exp + (i - 1));\n      if (mult === undefined) {\n        break;\n      }\n\n      if (intToReadout(mult.exp)) {\n        str += mult.str;\n        pendingZero = false;\n      }\n    }\n  };\n\n  const hasInt = intToReadout();\n  pendingZero = false;\n  if (i !== rend) {\n    if (hasInt) {\n      str += decimalWord;\n    }\n\n    // avoid 又零\n    while (i !== rend && result.digits[i - 1] === \"0\") {\n      --i;\n    }\n\n    fracToReadout();\n  }\n  return str;\n}\n\nexport function bool2hanzi(b: boolean): string {\n  return b ? \"陽\" : \"陰\";\n}\n","/**\n * To check match of a part of string\n */\nexport function match(src: string, startAt: number, target: string) {\n  let length = target.length;\n  for (let i = 0; i < length; i++) {\n    if (src[startAt + i] !== target[i]) return false;\n  }\n  return true;\n}\n\nexport const defaultAssertLogger: (...messages: any[]) => void = console.log;\n\nexport const defaultAssert = (logger = defaultAssertLogger) => (\n  msg: string,\n  pos: number,\n  b: any\n) => {\n  if (!b) logger(`ERROR@${pos}: ${msg}`);\n};\n\nexport function isRoman(x: string) {\n  return x.replace(/[ -~]/g, \"\").length == 0;\n}\n","import { ASCNode, TranspilerOptions } from \"../types\";\n\nexport interface ModuleWrapperOptions {\n  src: string;\n  moduleName: string;\n  scopeName: string;\n  markerStart: string;\n  markerEnd: string;\n}\n\nexport class BaseTranspiler {\n  asc: ASCNode[];\n  tmpVarCnt = 0;\n  randVarCnt = 0;\n  lib = \"\";\n\n  constructor(asc: ASCNode[]) {\n    this.asc = asc;\n  }\n\n  randVar() {\n    return `_rand${++this.randVarCnt}`;\n  }\n\n  currTmpVar() {\n    return `_ans${this.tmpVarCnt}`;\n  }\n\n  nextTmpVar() {\n    return `_ans${++this.tmpVarCnt}`;\n  }\n\n  transpile(\n    options: Partial<TranspilerOptions> = {}\n  ): { result: string; imports: string[] } {\n    throw Error(\"No Implementation\");\n  }\n\n  wrapModule(name: string, src: string): string {\n    const moduleName = name.replace(/\\//g, \"_\");\n    const scopeName = name.split(\"/\").slice(-1)[0];\n    const markerStart = `/*___wenyan_module_${moduleName}_start___*/`;\n    const markerEnd = `/*___wenyan_module_${moduleName}_end___*/`;\n    return this.moduleWrapper({\n      src,\n      moduleName,\n      scopeName,\n      markerStart,\n      markerEnd\n    });\n  }\n\n  protected moduleWrapper({ src }: ModuleWrapperOptions) {\n    return src;\n  }\n}\n","const { version }: { version: string } = require(\"../package.json\");\n\nexport { version };\n","import {\n  ImportOptions,\n  CacheObject,\n  CompileOptions,\n  ImportedModule\n} from \"./types\";\n\nconst INDEX_FILENAME = \"序\";\n\nfunction isHostTrusted(url: string, trustedHosts: string[]) {\n  for (const host of trustedHosts) {\n    // FIXME: it can be bypassed by relative path resolving,\n    // for examples: https://trusted.com/a/../../hijack.com/a/\n    if (url.startsWith(host)) return true;\n  }\n  return false;\n}\n\nfunction isHttpURL(uri: string) {\n  return !!uri.match(/^https?\\:\\/\\//);\n}\n\nfunction fetchTextSync(url: string, timeout: number) {\n  let XHR;\n  if (typeof window !== \"undefined\" && \"XMLHttpRequest\" in window)\n    XHR = window.XMLHttpRequest;\n  else XHR = eval(\"require\")(\"xmlhttprequest\").XMLHttpRequest;\n\n  var xmlHttp = new XHR();\n  // xmlHttp.timeout = timeout;\n  xmlHttp.open(\"GET\", url, false); // false for synchronous request\n  xmlHttp.send(null);\n\n  if (xmlHttp.status >= 200 && xmlHttp.status < 300)\n    return xmlHttp.responseText;\n\n  throw new URIError(xmlHttp.responseText);\n}\n\nfunction fetchSync(uri: string, cache: CacheObject, requestTimeout: number) {\n  if (cache[uri]) return cache[uri];\n\n  const data = isHttpURL(uri)\n    ? fetchTextSync(uri, requestTimeout)\n    : eval(\"require\")(\"fs\").readFileSync(uri, \"utf-8\");\n\n  cache[uri] = data;\n\n  return data;\n}\n\nexport function importReader(\n  moduleName: string,\n  importOptions: Partial<ImportOptions> = {}\n): ImportedModule {\n  const {\n    allowHttp = false,\n    entryFilepath,\n    importPaths = [],\n    importCache = {},\n    importContext = {},\n    trustedHosts = [],\n    requestTimeout = 2000\n  } = importOptions;\n\n  const context = importContext[moduleName];\n  if (context) {\n    if (typeof context === \"string\") {\n      return {\n        src: context,\n        moduleName\n      };\n    }\n\n    if (context.entry) {\n      return {\n        moduleName,\n        entry: context.entry,\n        src: context.src\n          ? context.src\n          : fetchSync(context.entry, importCache, requestTimeout)\n      };\n    }\n\n    throw new SyntaxError(\"Failed to parse context: \" + context);\n  }\n\n  const pathes: string[] = [];\n\n  if (typeof importPaths === \"string\") {\n    pathes.push(importPaths);\n  } else {\n    pathes.push(...importPaths);\n  }\n\n  if (entryFilepath)\n    pathes.push(\n      entryFilepath\n        .replace(/\\\\/g, \"/\")\n        .split(\"/\")\n        .slice(0, -1)\n        .join(\"/\")\n    );\n\n  for (const dir of pathes) {\n    let uri = dir;\n    let entries = [];\n    let src;\n\n    if (uri.endsWith(\"/\")) uri = uri.slice(0, -1);\n\n    if (isHttpURL(uri)) {\n      if (!allowHttp && !isHostTrusted(uri, trustedHosts)) {\n        throw new URIError(\n          `URL request \"${uri}\" is blocked by default for security purpose. ` +\n            `You can turn it on by specify the \"allowHttp\" option.`\n        );\n      }\n      entries = [\n        `${uri}/${encodeURIComponent(moduleName)}.wy`,\n        `${uri}/${encodeURIComponent(moduleName)}/${encodeURIComponent(\n          INDEX_FILENAME\n        )}.wy`\n      ];\n    } else {\n      entries = [\n        `${uri}/${moduleName}.wy`,\n        `${uri}/${moduleName}/${INDEX_FILENAME}.wy`\n      ];\n    }\n\n    for (const entry of entries) {\n      try {\n        src = fetchSync(entry, importCache, requestTimeout);\n        return { src, entry, moduleName };\n      } catch (e) {}\n    }\n  }\n\n  throw new ReferenceError(\n    `Module \"${moduleName}\" is not found. Searched in ${importPaths}`\n  );\n}\n\nexport function bundleImports(\n  imports: string[],\n  options: { lib: CompileOptions[\"lib\"]; lang: CompileOptions[\"lang\"] },\n  importOptions: ImportOptions\n): ImportedModule[] {\n  const { lib, lang } = options;\n\n  return imports.map(moduleName => {\n    if (lib[lang][moduleName]) {\n      return {\n        moduleName,\n        src: lib[lang][moduleName]\n      };\n    }\n\n    if (lib[moduleName]) {\n      return {\n        moduleName,\n        src: lib[moduleName]\n      };\n    }\n\n    return importReader(moduleName, importOptions);\n  });\n}\n","import { TokenType } from \"./types\";\n\nexport const NUMBER_KEYWORDS = Array.from(\n  \"負·又零〇一二三四五六七八九十百千萬億兆京垓秭穰溝澗正載極分釐毫絲忽微纖沙塵埃渺漠\"\n);\n\nexport const KEYWORDS_DEFINE: Record<\n  string,\n  [TokenType, string | undefined]\n> = {\n  吾有: [\"decl\", \"uninit\"],\n  今有: [\"decl\", \"public\"],\n  物之: [\"decl\", \"prop\"],\n  有: [\"decl\", \"init\"],\n  數: [\"type\", \"num\"],\n  列: [\"type\", \"arr\"],\n  言: [\"type\", \"str\"],\n  術: [\"type\", \"fun\"],\n  爻: [\"type\", \"bol\"],\n  物: [\"type\", \"obj\"],\n  元: [\"type\", \"any\"],\n  書之: [\"print\", undefined],\n  名之曰: [\"name\", undefined],\n  施: [\"call\", \"r\"],\n  以施: [\"call\", \"l\"],\n  曰: [\"assgn\", undefined],\n  噫: [\"discard\", undefined],\n  取: [\"take\", undefined],\n\n  昔之: [\"rassgn\", \"a\"],\n  今: [\"rassgn\", \"b\"],\n  是矣: [\"rassgn\", \"c\"],\n  不復存矣: [\"rassgn\", \"delete\"],\n  其: [\"ans\", undefined],\n\n  乃得: [\"ctrl\", \"ret\"],\n  乃得矣: [\"ctrl\", \"retprev\"],\n  乃歸空無: [\"ctrl\", \"retvoid\"],\n  是謂: [\"ctrl\", \"bigend\"],\n  之術也: [\"ctrl\", \"funend\"],\n  必先得: [\"ctrl\", \"funarg\"],\n  是術曰: [\"ctrl\", \"funbody\"],\n  乃行是術曰: [\"ctrl\", \"funbody\"],\n  欲行是術: [\"ctrl\", \"funstart\"],\n  也: [\"ctrl\", \"end\"],\n  云云: [\"ctrl\", \"end\"],\n  凡: [\"ctrl\", \"for\"],\n  中之: [\"ctrl\", \"forin\"],\n  恆為是: [\"ctrl\", \"whiletrue\"],\n  為是: [\"ctrl\", \"whilen0\"],\n  遍: [\"ctrl\", \"whilen1\"],\n  乃止: [\"ctrl\", \"break\"],\n  乃止是遍: [\"ctrl\", \"continue\"],\n\n  若非: [\"ctrl\", \"else\"],\n  若: [\"ctrl\", \"if\"],\n  者: [\"ctrl\", \"conj\"],\n  若其然者: [\"ctrl\", \"iftrue\"],\n  若其不然者: [\"ctrl\", \"iffalse\"],\n  或若: [\"ctrl\", \"elseif\"],\n\n  其物如是: [\"ctrl\", \"objbody\"],\n  之物也: [\"ctrl\", \"objend\"],\n\n  夫: [\"expr\", undefined],\n\n  等於: [\"cmp\", \"==\"],\n  不等於: [\"cmp\", \"!=\"],\n  不大於: [\"cmp\", \"<=\"],\n  不小於: [\"cmp\", \">=\"],\n  大於: [\"cmp\", \">\"],\n  小於: [\"cmp\", \"<\"],\n\n  加: [\"op\", \"+\"],\n  減: [\"op\", \"-\"],\n  乘: [\"op\", \"*\"],\n  除: [\"op\", \"/\"],\n  中有陽乎: [\"lop\", \"||\"],\n  中無陰乎: [\"lop\", \"&&\"],\n  變: [\"not\", undefined],\n  所餘幾何: [\"mod\", undefined],\n\n  以: [\"opord\", \"l\"],\n  於: [\"opord\", \"r\"],\n\n  之長: [\"ctnr\", \"len\"],\n  之: [\"ctnr\", \"subs\"],\n  充: [\"ctnr\", \"push\"],\n  銜: [\"ctnr\", \"cat\"],\n  其餘: [\"ctnr\", \"rest\"],\n\n  陰: [\"bool\", \"false\"],\n  陽: [\"bool\", \"true\"],\n\n  吾嘗觀: [\"import\", \"file\"],\n  中: [\"import\", \"in\"],\n  之書: [\"import\", \"fileend\"],\n  方悟: [\"import\", \"iden\"],\n  之義: [\"import\", \"idenend\"],\n\n  嗚呼: [\"throw\", \"a\"],\n  之禍: [\"throw\", \"b\"],\n  姑妄行此: [\"try\", \"try\"],\n  如事不諧: [\"try\", \"catch\"],\n  豈: [\"try\", \"catcherr0\"],\n  之禍歟: [\"try\", \"catcherr1\"],\n  不知何禍歟: [\"try\", \"catchall\"],\n  乃作罷: [\"try\", \"end\"],\n\n  或云: [\"macro\", \"from\"],\n  蓋謂: [\"macro\", \"to\"],\n\n  注曰: [\"comment\", undefined],\n  疏曰: [\"comment\", undefined],\n  批曰: [\"comment\", undefined]\n};\n\nvar ke = Object.entries(KEYWORDS_DEFINE);\nke.sort((a, b) => b[0].length - a[0].length);\nif (!Object.fromEntries) {\n  Object.fromEntries = l => {\n    var o = {};\n    l.map(x => (o[x[0]] = x[1]));\n    return o;\n  };\n}\n\nexport const KEYWORDS = Object.fromEntries(ke);\n","import { TargetLanguages, LogCallback, ExecuteOptions } from \"./types\";\nimport { num2hanzi, bool2hanzi } from \"./parser\";\n\nexport function isLangSupportedForEval(lang: TargetLanguages) {\n  if (lang !== \"js\")\n    throw new Error(\n      `Executing for target language \"${lang}\" is not supported in current environment`\n    );\n  return true;\n}\n\nfunction hanzinizeOuput(value: string) {\n  if (typeof value == \"number\") {\n    return num2hanzi(value);\n  } else if (typeof value == \"boolean\") {\n    return bool2hanzi(value);\n  } else if (Array.isArray(value)) {\n    return value.map(i => hanzinizeOuput(i)).join(\"。\");\n  } else {\n    return value;\n  }\n}\n\nexport function outputHanziWrapper(log: LogCallback, outputHanzi: boolean) {\n  return function output(...args) {\n    log(...args.map(i => (outputHanzi ? hanzinizeOuput(i) : i)));\n  };\n}\n\nexport function evalCompiled(\n  compiledCode: string,\n  options: Partial<ExecuteOptions> = {}\n) {\n  const {\n    outputHanzi = true,\n    scoped = false,\n    lang = \"js\",\n    output = console.log\n  } = options;\n\n  isLangSupportedForEval(lang);\n\n  let code = compiledCode;\n\n  (() => {\n    const _console_log = console.log;\n    console.log = outputHanziWrapper(output, outputHanzi);\n    try {\n      if (!scoped && \"window\" in this) {\n        window.eval(code);\n      } else {\n        eval(code);\n      }\n    } catch (e) {\n      throw e;\n    } finally {\n      console.log = _console_log;\n    }\n  })();\n}\n","import fs from \"fs\";\nimport path from \"path\";\nimport commander from \"commander\";\nimport findUp from \"find-up\";\nimport { version } from \"./version\";\nimport { compile, evalCompiled } from \"./parser\";\nimport { render, unrender } from \"./render\";\nimport { outputHanziWrapper } from \"./execute\";\n\nvar readline;\nvar rl;\nvar inpHistory = [];\nvar inpHistoryPtr = -1;\n\nvar Logo = ` ,_ ,_\\n \\\\/ ==\\n /\\\\ []\\n`;\nconst MODULE_LIBRARY_NAME = \"藏書樓\";\n\nconst program = new commander.Command();\nprogram\n  .version(version, \"-v, --version\", \"Output the version\")\n  .name(\"wenyan\")\n  .arguments(\"[files...]\")\n  .action(files => {\n    if (!files) {\n      program.files = [];\n    } else if (!Array.isArray(files)) {\n      program.files = [files];\n    } else {\n      program.files = files;\n    }\n  })\n  .option(\n    \"-l, --lang <lang>\",\n    'Target language, can be \"js\", \"py\" or \"rb\"',\n    \"js\"\n  )\n  .option(\"-c, --compile\", \"Output the compiled code instead of executing it\")\n  .option(\"-e, --eval <code>\", \"Evaluate script\")\n  .option(\"-i, --interactive\", \"Interactive REPL\")\n  .option(\n    \"-o, --output [file]\",\n    \"Output compiled code or executing result to file\"\n  )\n  .option(\"-r, --render\", \"Outputs renderings\")\n  .option(\n    \"--roman [method]\",\n    'Romanize identifiers. The method can be \"pinyin\", \"baxter\" or \"unicode\"'\n  )\n  .option(\"--strict\", \"Enable static typechecking\", false)\n  .option(\"--allowHttp\", \"Allow to import from http\", false)\n  .option(\"--dir <path>\", \"Directory to importing from, seprates with comma(,)\")\n  .option(\"--no-outputHanzi\", \"Don't convert output to hanzi\", false)\n  .option(\"--log <file>\", \"Save log to file\")\n  .option(\"--title <title>\", \"Override title in rendering\")\n  .helpOption(\"-h, --help\", \"Display help\");\n\nconst emptyCall = process.argv.length <= 2;\nconst showHelp = process.argv.includes(\"-h\") || process.argv.includes(\"--help\");\n\nif (emptyCall || showHelp) {\n  program.outputHelp(help => {\n    if (!help) return \"\";\n    let text = \"\\n\";\n    text += Logo;\n    text += `\\nWENYAN LANG 文言 Compiler v${version}\\n\\n`;\n    text += help;\n    text += \"\\n\";\n    return text;\n  });\n  process.exit();\n}\n\nprogram.parse(process.argv);\n\n(async () => {\n  preprocess();\n\n  if (program.compile) {\n    output(getCompiled());\n  } else if (program.render) {\n    doRender();\n  } else if (program.interactive) {\n    await interactive();\n  } else {\n    await exec();\n  }\n})().catch(e => {\n  console.error(e);\n});\n\n// ====== Utils ======\n\nfunction preprocess() {\n  if (!program.output && program.render) {\n    // render always outputs\n    program.output = true;\n  }\n\n  if (program.output == true) {\n    // only set --option but not the path\n    if (!program.files.length) {\n      console.error(\"Can not write to undefined path\");\n      process.exit(1);\n    }\n    let base = program.files[0]\n      .split(\".\")\n      .slice(0, -1)\n      .join(\".\");\n    if (program.compile) program.output = `${base}.${program.lang}`;\n    else if (program.render) program.output = `${base}.svg`;\n    else program.output = `${base}.log`;\n  }\n\n  if (program.roman == true) {\n    program.roman = \"pinyin\";\n  }\n}\n\nfunction getCompiled() {\n  const source = getSource();\n\n  return compile(source, {\n    ...getCompileOptions()\n  });\n}\n\nfunction getImportPaths() {\n  const pathes = [];\n  if (program.dir) {\n    pathes.push(...program.dir.split(\",\"));\n  }\n\n  const moduleLib = findModuleLibrary();\n  if (moduleLib) pathes.push(moduleLib);\n\n  pathes.push(...program.files.map(file => path.resolve(path.dirname(file))));\n  pathes.push(path.resolve(\".\"));\n  return Array.from(new Set(pathes));\n}\n\nfunction findModuleLibrary() {\n  return findUp.sync(MODULE_LIBRARY_NAME, { type: \"directory\" });\n}\n\nfunction getCompileOptions() {\n  return {\n    lang: program.lang,\n    romanizeIdentifiers: program.roman,\n    strict: !!program.strict,\n    allowHttp: !!program.allowHttp,\n    importPaths: getImportPaths(),\n    logCallback: logHandler(program.log, \"a\"),\n    errorCallback: function(x) {\n      console.error(x);\n      process.exit();\n    }\n  };\n}\n\nfunction resolvePath(x) {\n  return path.resolve(x);\n}\n\nfunction getSource() {\n  let scripts = program.files\n    .map(x =>\n      x.endsWith(\".svg\")\n        ? unrender([fs.readFileSync(resolvePath(x)).toString()])\n        : fs.readFileSync(resolvePath(x)).toString()\n    )\n    .join(\"\\n\");\n\n  if (program.eval) scripts += `\\n${program.eval}`;\n\n  return scripts;\n}\n\nfunction output(data) {\n  if (program.output == undefined) return console.log(data);\n  else fs.writeFileSync(resolvePath(program.output), data, \"utf-8\");\n}\n\nfunction getTitle() {\n  var title = program.title;\n  if (!title && typeof program.output === \"string\")\n    title = program.output\n      .split(\".\")\n      .slice(0, -1)\n      .join(\".\");\n  if (!title && program.files.length)\n    title = program.files[0]\n      .split(\".\")\n      .slice(0, -1)\n      .join(\".\");\n  return title;\n}\n\nfunction doRender() {\n  var svgs = render(getTitle(), getSource(), { plotResult: false });\n\n  var outputEndsWithSvg = program.output.toLowerCase().endsWith(\".svg\");\n\n  // only one page rendered\n  if (svgs.length === 1) {\n    if (!outputEndsWithSvg) program.output += \".svg\";\n    var filepath = resolvePath(program.output);\n    fs.writeFileSync(filepath, svgs[0]);\n    console.log(filepath); // Outputs generated filename\n  }\n  // multiple pages rendered, output file as `filename.001.svg` etc\n  else {\n    if (outputEndsWithSvg) program.output = program.output.slice(0, -4); // remove .svg suffix\n\n    for (var i = 0; i < svgs.length; i++) {\n      var filepath = resolvePath(\n        `${program.output}.${i.toString().padStart(3, \"0\")}.svg`\n      );\n      fs.writeFileSync(filepath, svgs[i]);\n      console.log(filepath); // Outputs generated filename\n    }\n  }\n}\n\nfunction interactive() {\n  if (program.lang !== \"js\") {\n    console.error(\n      `Target language \"${program.lang}\" is not supported for interactive mode.`\n    );\n    process.exit(1);\n  }\n  replscope();\n  repl(getCompiled());\n}\n\nfunction exec() {\n  if (program.lang !== \"js\") {\n    console.error(\n      `Target language \"${program.lang}\" is not supported for direct executing. Please use --compile option instead.`\n    );\n    process.exit(1);\n  }\n  evalCompiled(getCompiled(), {\n    outputHanzi: program[\"outputHanzi\"],\n    lang: program.lang\n  });\n}\n\nfunction replscope() {\n  function generate(depth) {\n    var s0 = \"global.__scope=new function(){\\n\";\n    var s1 = \"\\n}\";\n    for (var i = 0; i < depth; i++) {\n      var istr = \"__\" + (\"\" + i).padStart(8, \"0\");\n      s0 += `this.evil=function(${istr}){global.__scope=this;var __r=eval(${istr});\\n`;\n      s1 = `;return __r}` + s1;\n    }\n    return eval(s0 + s1);\n  }\n  var stackCallSize = 1000;\n  for (var i = stackCallSize; i > 0; i -= 200) {\n    try {\n      generate(i);\n      stackCallSize = i;\n      break;\n    } catch (e) {\n      //console.log(i+ \" exceeds max stack size\");\n    }\n  }\n  // console.log(\"final stack size \"+stackCallSize);\n}\n\nfunction repl(prescript?: string) {\n  if (!readline) {\n    readline = require(\"readline\");\n    process.stdin.setMaxListeners(100000000000000);\n    process.stdin.on(\"data\", function(e) {\n      var esc = JSON.stringify(e.toString());\n      if (esc == `\"\\\\u001b[A\"`) {\n        if (inpHistoryPtr == -1) {\n          inpHistoryPtr = inpHistory.length;\n        }\n        if (inpHistory.length) {\n          inpHistoryPtr =\n            (inpHistoryPtr - 1 + inpHistory.length) % inpHistory.length;\n        }\n        rl.write(null, { ctrl: true, name: \"u\" });\n        rl.write(inpHistory[inpHistoryPtr]);\n      } else if (esc == `\"\\\\u001b[B\"`) {\n        if (inpHistoryPtr == -1) {\n          inpHistoryPtr = inpHistory.length;\n        }\n        if (inpHistory.length) {\n          inpHistoryPtr = (inpHistoryPtr + 1) % inpHistory.length;\n        }\n        rl.write(null, { ctrl: true, name: \"u\" });\n        rl.write(inpHistory[inpHistoryPtr]);\n      }\n    });\n  }\n  // console.log(JSON.stringify(inpHistory))\n  rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  if (prescript) {\n    var old_log = console.log;\n    try {\n      console.log = outputHanziWrapper(console.log, program.outputHanzi);\n      // @ts-ignore\n      global.__scope.evil(prescript);\n      console.log = old_log;\n    } catch (e) {\n      console.log = old_log;\n      console.log(e);\n    }\n  }\n\n  // @ts-ignore\n  global.haserr = false;\n  rl.question(\"> \", inp => {\n    // console.log(JSON.stringify(inp))\n    var out = compile(inp, {\n      lang: \"js\",\n      romanizeIdentifiers: program.roman,\n      logCallback: logHandler(null, \"a\"),\n      errorCallback: function(x) {\n        console.error(x);\n        // @ts-ignore\n        global.haserr = true;\n      }\n    });\n    // @ts-ignore\n    if (global.haserr) {\n    }\n    if (inp.length) {\n      inpHistory.push(inp);\n    }\n    rl.close();\n    repl(out);\n    inpHistoryPtr = -1;\n  });\n}\n\nfunction logHandler(f, mode) {\n  if (!f) {\n    return () => 0;\n  }\n\n  if (f == \"/dev/stdout\") {\n    return x =>\n      typeof x == \"string\"\n        ? console.log(x)\n        : console.dir(x, { depth: null, maxArrayLength: null });\n  }\n\n  if (f == \"/dev/stderr\") {\n    return console.error;\n  }\n\n  if (mode == \"a\") {\n    return x => {\n      fs.appendFileSync(\n        resolvePath(f),\n        (typeof x == \"object\" ? JSON.stringify(x) : x.toString()) + \"\\n\"\n      );\n    };\n  }\n\n  if (mode == \"w\") {\n    return x => {\n      fs.writeFileSync(\n        resolvePath(f),\n        (typeof x == \"object\" ? JSON.stringify(x) : x.toString()) + \"\\n\"\n      );\n    };\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar fs = require('fs');\n\n/**\n * Inherit `Command` from `EventEmitter.prototype`.\n */\n\nrequire('util').inherits(Command, EventEmitter);\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\n\n/**\n * Expose `Command`.\n */\n\nexports.Command = Command;\n\n/**\n * Expose `Option`.\n */\n\nexports.Option = Option;\n\n/**\n * Initialize a new `Option` with the given `flags` and `description`.\n *\n * @param {String} flags\n * @param {String} description\n * @api public\n */\n\nfunction Option(flags, description) {\n  this.flags = flags;\n  this.required = flags.indexOf('<') >= 0; // A value must be supplied when the option is specified.\n  this.optional = flags.indexOf('[') >= 0; // A value is optional when the option is specified.\n  this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n  this.negate = flags.indexOf('-no-') !== -1;\n  flags = flags.split(/[ ,|]+/);\n  if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();\n  this.long = flags.shift();\n  this.description = description || '';\n}\n\n/**\n * Return option name.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.name = function() {\n  return this.long.replace(/^--/, '');\n};\n\n/**\n * Return option name, in a camelcase format that can be used\n * as a object attribute key.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.attributeName = function() {\n  return camelcase(this.name().replace(/^no-/, ''));\n};\n\n/**\n * Check if `arg` matches the short or long flag.\n *\n * @param {String} arg\n * @return {Boolean}\n * @api private\n */\n\nOption.prototype.is = function(arg) {\n  return this.short === arg || this.long === arg;\n};\n\n/**\n * CommanderError class\n * @class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {Number} exitCode suggested exit code which could be used with process.exit\n   * @param {String} code an id string representing the error\n   * @param {String} message human-readable description of the error\n   * @constructor\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n  }\n}\n\nexports.CommanderError = CommanderError;\n\n/**\n * Initialize a new `Command`.\n *\n * @param {String} name\n * @api public\n */\n\nfunction Command(name) {\n  this.commands = [];\n  this.options = [];\n  this._execs = new Set();\n  this._allowUnknownOption = false;\n  this._args = [];\n  this._name = name || '';\n\n  this._helpFlags = '-h, --help';\n  this._helpDescription = 'output usage information';\n  this._helpShortFlag = '-h';\n  this._helpLongFlag = '--help';\n}\n\n/**\n * Define a command.\n *\n * There are two styles of command: pay attention to where to put the description.\n *\n * Examples:\n *\n *      // Command implemented using action handler (description is supplied separately to `.command`)\n *      program\n *        .command('clone <source> [destination]')\n *        .description('clone a repository into a newly created directory')\n *        .action((source, destination) => {\n *          console.log('clone command called');\n *        });\n *\n *      // Command implemented using separate executable file (description is second parameter to `.command`)\n *      program\n *        .command('start <service>', 'start named service')\n *        .command('stop [service]', 'stop named serice, or all if no name supplied');\n *\n * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n * @param {Object|string} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n * @param {Object} [execOpts] - configuration options (for executable)\n * @return {Command} returns new command for action handler, or top-level command for executable command\n * @api public\n */\n\nCommand.prototype.command = function(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n  var desc = actionOptsOrExecDesc;\n  var opts = execOpts;\n  if (typeof desc === 'object' && desc !== null) {\n    opts = desc;\n    desc = null;\n  }\n  opts = opts || {};\n  var args = nameAndArgs.split(/ +/);\n  var cmd = new Command(args.shift());\n\n  if (desc) {\n    cmd.description(desc);\n    this.executables = true;\n    this._execs.add(cmd._name);\n    if (opts.isDefault) this.defaultExecutable = cmd._name;\n  }\n  cmd._noHelp = !!opts.noHelp;\n  cmd._helpFlags = this._helpFlags;\n  cmd._helpDescription = this._helpDescription;\n  cmd._helpShortFlag = this._helpShortFlag;\n  cmd._helpLongFlag = this._helpLongFlag;\n  cmd._exitCallback = this._exitCallback;\n\n  cmd._executableFile = opts.executableFile; // Custom name for executable file\n  this.commands.push(cmd);\n  cmd.parseExpectedArgs(args);\n  cmd.parent = this;\n\n  if (desc) return this;\n  return cmd;\n};\n\n/**\n * Define argument syntax for the top-level command.\n *\n * @api public\n */\n\nCommand.prototype.arguments = function(desc) {\n  return this.parseExpectedArgs(desc.split(/ +/));\n};\n\n/**\n * Add an implicit `help [cmd]` subcommand\n * which invokes `--help` for the given command.\n *\n * @api private\n */\n\nCommand.prototype.addImplicitHelpCommand = function() {\n  this.command('help [cmd]', 'display help for [cmd]');\n};\n\n/**\n * Parse expected `args`.\n *\n * For example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parseExpectedArgs = function(args) {\n  if (!args.length) return;\n  var self = this;\n  args.forEach(function(arg) {\n    var argDetails = {\n      required: false,\n      name: '',\n      variadic: false\n    };\n\n    switch (arg[0]) {\n      case '<':\n        argDetails.required = true;\n        argDetails.name = arg.slice(1, -1);\n        break;\n      case '[':\n        argDetails.name = arg.slice(1, -1);\n        break;\n    }\n\n    if (argDetails.name.length > 3 && argDetails.name.slice(-3) === '...') {\n      argDetails.variadic = true;\n      argDetails.name = argDetails.name.slice(0, -3);\n    }\n    if (argDetails.name) {\n      self._args.push(argDetails);\n    }\n  });\n  return this;\n};\n\n/**\n * Register callback to use as replacement for calling process.exit.\n *\n * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.exitOverride = function(fn) {\n  if (fn) {\n    this._exitCallback = fn;\n  } else {\n    this._exitCallback = function(err) {\n      if (err.code !== 'commander.executeSubCommandAsync') {\n        throw err;\n      } else {\n        // Async callback from spawn events, not useful to throw.\n      }\n    };\n  }\n  return this;\n};\n\n/**\n * Call process.exit, and _exitCallback if defined.\n *\n * @param {Number} exitCode exit code for using with process.exit\n * @param {String} code an id string representing the error\n * @param {String} message human-readable description of the error\n * @return never\n * @api private\n */\n\nCommand.prototype._exit = function(exitCode, code, message) {\n  if (this._exitCallback) {\n    this._exitCallback(new CommanderError(exitCode, code, message));\n    // Expecting this line is not reached.\n  }\n  process.exit(exitCode);\n};\n\n/**\n * Register callback `fn` for the command.\n *\n * Examples:\n *\n *      program\n *        .command('help')\n *        .description('display verbose help')\n *        .action(function() {\n *           // output help here\n *        });\n *\n * @param {Function} fn\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.action = function(fn) {\n  var self = this;\n  var listener = function(args, unknown) {\n    // Parse any so-far unknown options\n    args = args || [];\n    unknown = unknown || [];\n\n    var parsed = self.parseOptions(unknown);\n\n    // Output help if necessary\n    outputHelpIfNecessary(self, parsed.unknown);\n    self._checkForMissingMandatoryOptions();\n\n    // If there are still any unknown options, then we simply\n    // die, unless someone asked for help, in which case we give it\n    // to them, and then we die.\n    if (parsed.unknown.length > 0) {\n      self.unknownOption(parsed.unknown[0]);\n    }\n\n    // Leftover arguments need to be pushed back. Fixes issue #56\n    if (parsed.args.length) args = parsed.args.concat(args);\n\n    self._args.forEach(function(arg, i) {\n      if (arg.required && args[i] == null) {\n        self.missingArgument(arg.name);\n      } else if (arg.variadic) {\n        if (i !== self._args.length - 1) {\n          self.variadicArgNotLast(arg.name);\n        }\n\n        args[i] = args.splice(i);\n      }\n    });\n\n    // The .action callback takes an extra parameter which is the command itself.\n    var expectedArgsCount = self._args.length;\n    var actionArgs = args.slice(0, expectedArgsCount);\n    actionArgs[expectedArgsCount] = self;\n    // Add the extra arguments so available too.\n    if (args.length > expectedArgsCount) {\n      actionArgs.push(args.slice(expectedArgsCount));\n    }\n\n    fn.apply(self, actionArgs);\n  };\n  var parent = this.parent || this;\n  var name = parent === this ? '*' : this._name;\n  parent.on('command:' + name, listener);\n  if (this._alias) parent.on('command:' + this._alias, listener);\n  return this;\n};\n\n/**\n * Internal implementation shared by .option() and .requiredOption()\n *\n * @param {Object} config\n * @param {String} flags\n * @param {String} description\n * @param {Function|*} [fn] - custom option processing function or default vaue\n * @param {*} [defaultValue]\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype._optionEx = function(config, flags, description, fn, defaultValue) {\n  var self = this,\n    option = new Option(flags, description),\n    oname = option.name(),\n    name = option.attributeName();\n  option.mandatory = !!config.mandatory;\n\n  // default as 3rd arg\n  if (typeof fn !== 'function') {\n    if (fn instanceof RegExp) {\n      // This is a bit simplistic (especially no error messages), and probably better handled by caller using custom option processing.\n      // No longer documented in README, but still present for backwards compatibility.\n      var regex = fn;\n      fn = function(val, def) {\n        var m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n    } else {\n      defaultValue = fn;\n      fn = null;\n    }\n  }\n\n  // preassign default value for --no-*, [optional], <required>, or plain flag if boolean value\n  if (option.negate || option.optional || option.required || typeof defaultValue === 'boolean') {\n    // when --no-foo we make sure default is true, unless a --foo option is already defined\n    if (option.negate) {\n      var opts = self.opts();\n      defaultValue = Object.prototype.hasOwnProperty.call(opts, name) ? opts[name] : true;\n    }\n    // preassign only if we have a default\n    if (defaultValue !== undefined) {\n      self[name] = defaultValue;\n      option.defaultValue = defaultValue;\n    }\n  }\n\n  // register the option\n  this.options.push(option);\n\n  // when it's passed assign the value\n  // and conditionally invoke the callback\n  this.on('option:' + oname, function(val) {\n    // coercion\n    if (val !== null && fn) {\n      val = fn(val, self[name] === undefined ? defaultValue : self[name]);\n    }\n\n    // unassigned or boolean value\n    if (typeof self[name] === 'boolean' || typeof self[name] === 'undefined') {\n      // if no value, negate false, and we have a default, then use it!\n      if (val == null) {\n        self[name] = option.negate\n          ? false\n          : defaultValue || true;\n      } else {\n        self[name] = val;\n      }\n    } else if (val !== null) {\n      // reassign\n      self[name] = option.negate ? false : val;\n    }\n  });\n\n  return this;\n};\n\n/**\n * Define option with `flags`, `description` and optional\n * coercion `fn`.\n *\n * The `flags` string should contain both the short and long flags,\n * separated by comma, a pipe or space. The following are all valid\n * all will output this way when `--help` is used.\n *\n *    \"-p, --pepper\"\n *    \"-p|--pepper\"\n *    \"-p --pepper\"\n *\n * Examples:\n *\n *     // simple boolean defaulting to undefined\n *     program.option('-p, --pepper', 'add pepper');\n *\n *     program.pepper\n *     // => undefined\n *\n *     --pepper\n *     program.pepper\n *     // => true\n *\n *     // simple boolean defaulting to true (unless non-negated option is also defined)\n *     program.option('-C, --no-cheese', 'remove cheese');\n *\n *     program.cheese\n *     // => true\n *\n *     --no-cheese\n *     program.cheese\n *     // => false\n *\n *     // required argument\n *     program.option('-C, --chdir <path>', 'change the working directory');\n *\n *     --chdir /tmp\n *     program.chdir\n *     // => \"/tmp\"\n *\n *     // optional argument\n *     program.option('-c, --cheese [type]', 'add cheese [marble]');\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|*} [fn] - custom option processing function or default vaue\n * @param {*} [defaultValue]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.option = function(flags, description, fn, defaultValue) {\n  return this._optionEx({}, flags, description, fn, defaultValue);\n};\n\n/*\n * Add a required option which must have a value after parsing. This usually means\n * the option must be specified on the command line. (Otherwise the same as .option().)\n *\n * The `flags` string should contain both the short and long flags, separated by comma, a pipe or space.\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|*} [fn] - custom option processing function or default vaue\n * @param {*} [defaultValue]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.requiredOption = function(flags, description, fn, defaultValue) {\n  return this._optionEx({ mandatory: true }, flags, description, fn, defaultValue);\n};\n\n/**\n * Allow unknown options on the command line.\n *\n * @param {Boolean} arg if `true` or omitted, no error will be thrown\n * for unknown options.\n * @api public\n */\nCommand.prototype.allowUnknownOption = function(arg) {\n  this._allowUnknownOption = arguments.length === 0 || arg;\n  return this;\n};\n\n/**\n * Parse `argv`, settings options and invoking commands when defined.\n *\n * @param {Array} argv\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parse = function(argv) {\n  // implicit help\n  if (this.executables) this.addImplicitHelpCommand();\n\n  // store raw args\n  this.rawArgs = argv;\n\n  // guess name\n  this._name = this._name || basename(argv[1], '.js');\n\n  // github-style sub-commands with no sub-command\n  if (this.executables && argv.length < 3 && !this.defaultExecutable) {\n    // this user needs help\n    argv.push(this._helpLongFlag);\n  }\n\n  // process argv\n  var normalized = this.normalize(argv.slice(2));\n  var parsed = this.parseOptions(normalized);\n  var args = this.args = parsed.args;\n\n  var result = this.parseArgs(this.args, parsed.unknown);\n\n  if (args[0] === 'help' && args.length === 1) this.help();\n\n  // Note for future: we could return early if we found an action handler in parseArgs, as none of following code needed?\n\n  // <cmd> --help\n  if (args[0] === 'help') {\n    args[0] = args[1];\n    args[1] = this._helpLongFlag;\n  } else {\n    // If calling through to executable subcommand we could check for help flags before failing,\n    // but a somewhat unlikely case since program options not passed to executable subcommands.\n    // Wait for reports to see if check needed and what usage pattern is.\n    this._checkForMissingMandatoryOptions();\n  }\n\n  // executable sub-commands\n  // (Debugging note for future: args[0] is not right if an action has been called)\n  var name = result.args[0];\n  var subCommand = null;\n\n  // Look for subcommand\n  if (name) {\n    subCommand = this.commands.find(function(command) {\n      return command._name === name;\n    });\n  }\n\n  // Look for alias\n  if (!subCommand && name) {\n    subCommand = this.commands.find(function(command) {\n      return command.alias() === name;\n    });\n    if (subCommand) {\n      name = subCommand._name;\n      args[0] = name;\n    }\n  }\n\n  // Look for default subcommand\n  if (!subCommand && this.defaultExecutable) {\n    name = this.defaultExecutable;\n    args.unshift(name);\n    subCommand = this.commands.find(function(command) {\n      return command._name === name;\n    });\n  }\n\n  if (this._execs.has(name)) {\n    return this.executeSubCommand(argv, args, parsed.unknown, subCommand ? subCommand._executableFile : undefined);\n  }\n\n  return result;\n};\n\n/**\n * Execute a sub-command executable.\n *\n * @param {Array} argv\n * @param {Array} args\n * @param {Array} unknown\n * @param {String} specifySubcommand\n * @api private\n */\n\nCommand.prototype.executeSubCommand = function(argv, args, unknown, executableFile) {\n  args = args.concat(unknown);\n\n  if (!args.length) this.help();\n\n  var isExplicitJS = false; // Whether to use node to launch \"executable\"\n\n  // executable\n  var pm = argv[1];\n  // name of the subcommand, like `pm-install`\n  var bin = basename(pm, path.extname(pm)) + '-' + args[0];\n  if (executableFile != null) {\n    bin = executableFile;\n    // Check for same extensions as we scan for below so get consistent launch behaviour.\n    var executableExt = path.extname(executableFile);\n    isExplicitJS = executableExt === '.js' || executableExt === '.ts' || executableExt === '.mjs';\n  }\n\n  // In case of globally installed, get the base dir where executable\n  //  subcommand file should be located at\n  var baseDir;\n\n  var resolvedLink = fs.realpathSync(pm);\n\n  baseDir = dirname(resolvedLink);\n\n  // prefer local `./<bin>` to bin in the $PATH\n  var localBin = path.join(baseDir, bin);\n\n  // whether bin file is a js script with explicit `.js` or `.ts` extension\n  if (exists(localBin + '.js')) {\n    bin = localBin + '.js';\n    isExplicitJS = true;\n  } else if (exists(localBin + '.ts')) {\n    bin = localBin + '.ts';\n    isExplicitJS = true;\n  } else if (exists(localBin + '.mjs')) {\n    bin = localBin + '.mjs';\n    isExplicitJS = true;\n  } else if (exists(localBin)) {\n    bin = localBin;\n  }\n\n  args = args.slice(1);\n\n  var proc;\n  if (process.platform !== 'win32') {\n    if (isExplicitJS) {\n      args.unshift(bin);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n      proc = spawn(process.argv[0], args, { stdio: 'inherit' });\n    } else {\n      proc = spawn(bin, args, { stdio: 'inherit' });\n    }\n  } else {\n    args.unshift(bin);\n    // add executable arguments to spawn\n    args = incrementNodeInspectorPort(process.execArgv).concat(args);\n    proc = spawn(process.execPath, args, { stdio: 'inherit' });\n  }\n\n  var signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n  signals.forEach(function(signal) {\n    process.on(signal, function() {\n      if (proc.killed === false && proc.exitCode === null) {\n        proc.kill(signal);\n      }\n    });\n  });\n\n  // By default terminate process when spawned process terminates.\n  // Suppressing the exit if exitCallback defined is a bit messy and of limited use, but does allow process to stay running!\n  const exitCallback = this._exitCallback;\n  if (!exitCallback) {\n    proc.on('close', process.exit.bind(process));\n  } else {\n    proc.on('close', () => {\n      exitCallback(new CommanderError(process.exitCode || 0, 'commander.executeSubCommandAsync', '(close)'));\n    });\n  }\n  proc.on('error', function(err) {\n    if (err.code === 'ENOENT') {\n      console.error('error: %s(1) does not exist, try --help', bin);\n    } else if (err.code === 'EACCES') {\n      console.error('error: %s(1) not executable. try chmod or run with root', bin);\n    }\n    if (!exitCallback) {\n      process.exit(1);\n    } else {\n      const wrappedError = new CommanderError(1, 'commander.executeSubCommandAsync', '(error)');\n      wrappedError.nestedError = err;\n      exitCallback(wrappedError);\n    }\n  });\n\n  // Store the reference to the child process\n  this.runningCommand = proc;\n};\n\n/**\n * Normalize `args`, splitting joined short flags. For example\n * the arg \"-abc\" is equivalent to \"-a -b -c\".\n * This also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".\n *\n * @param {Array} args\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.normalize = function(args) {\n  var ret = [],\n    arg,\n    lastOpt,\n    index,\n    short,\n    opt;\n\n  for (var i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    if (i > 0) {\n      lastOpt = this.optionFor(args[i - 1]);\n    }\n\n    if (arg === '--') {\n      // Honor option terminator\n      ret = ret.concat(args.slice(i));\n      break;\n    } else if (lastOpt && lastOpt.required) {\n      ret.push(arg);\n    } else if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n      short = arg.slice(0, 2);\n      opt = this.optionFor(short);\n      if (opt && (opt.required || opt.optional)) {\n        ret.push(short);\n        ret.push(arg.slice(2));\n      } else {\n        arg.slice(1).split('').forEach(function(c) {\n          ret.push('-' + c);\n        });\n      }\n    } else if (/^--/.test(arg) && ~(index = arg.indexOf('='))) {\n      ret.push(arg.slice(0, index), arg.slice(index + 1));\n    } else {\n      ret.push(arg);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parse command `args`.\n *\n * When listener(s) are available those\n * callbacks are invoked, otherwise the \"*\"\n * event is emitted and those actions are invoked.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype.parseArgs = function(args, unknown) {\n  var name;\n\n  if (args.length) {\n    name = args[0];\n    if (this.listeners('command:' + name).length) {\n      this.emit('command:' + args.shift(), args, unknown);\n    } else {\n      this.emit('command:*', args, unknown);\n    }\n  } else {\n    outputHelpIfNecessary(this, unknown);\n\n    // If there were no args and we have unknown options,\n    // then they are extraneous and we need to error.\n    if (unknown.length > 0 && !this.defaultExecutable) {\n      this.unknownOption(unknown[0]);\n    }\n    if (this.commands.length === 0 &&\n        this._args.filter(function(a) { return a.required; }).length === 0) {\n      this.emit('command:*');\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an option matching `arg` if any.\n *\n * @param {String} arg\n * @return {Option}\n * @api private\n */\n\nCommand.prototype.optionFor = function(arg) {\n  for (var i = 0, len = this.options.length; i < len; ++i) {\n    if (this.options[i].is(arg)) {\n      return this.options[i];\n    }\n  }\n};\n\n/**\n * Display an error message if a mandatory option does not have a value.\n *\n * @api private\n */\n\nCommand.prototype._checkForMissingMandatoryOptions = function() {\n  // Walk up hierarchy so can call from action handler after checking for displaying help.\n  for (var cmd = this; cmd; cmd = cmd.parent) {\n    cmd.options.forEach((anOption) => {\n      if (anOption.mandatory && (cmd[anOption.attributeName()] === undefined)) {\n        cmd.missingMandatoryOptionValue(anOption);\n      }\n    });\n  }\n};\n\n/**\n * Parse options from `argv` returning `argv`\n * void of these options.\n *\n * @param {Array} argv\n * @return {Array}\n * @api public\n */\n\nCommand.prototype.parseOptions = function(argv) {\n  var args = [],\n    len = argv.length,\n    literal,\n    option,\n    arg;\n\n  var unknownOptions = [];\n\n  // parse options\n  for (var i = 0; i < len; ++i) {\n    arg = argv[i];\n\n    // literal args after --\n    if (literal) {\n      args.push(arg);\n      continue;\n    }\n\n    if (arg === '--') {\n      literal = true;\n      continue;\n    }\n\n    // find matching Option\n    option = this.optionFor(arg);\n\n    // option is defined\n    if (option) {\n      // requires arg\n      if (option.required) {\n        arg = argv[++i];\n        if (arg == null) return this.optionMissingArgument(option);\n        this.emit('option:' + option.name(), arg);\n      // optional arg\n      } else if (option.optional) {\n        arg = argv[i + 1];\n        if (arg == null || (arg[0] === '-' && arg !== '-')) {\n          arg = null;\n        } else {\n          ++i;\n        }\n        this.emit('option:' + option.name(), arg);\n      // flag\n      } else {\n        this.emit('option:' + option.name());\n      }\n      continue;\n    }\n\n    // looks like an option\n    if (arg.length > 1 && arg[0] === '-') {\n      unknownOptions.push(arg);\n\n      // If the next argument looks like it might be\n      // an argument for this option, we pass it on.\n      // If it isn't, then it'll simply be ignored\n      if ((i + 1) < argv.length && (argv[i + 1][0] !== '-' || argv[i + 1] === '-')) {\n        unknownOptions.push(argv[++i]);\n      }\n      continue;\n    }\n\n    // arg\n    args.push(arg);\n  }\n\n  return { args: args, unknown: unknownOptions };\n};\n\n/**\n * Return an object containing options as key-value pairs\n *\n * @return {Object}\n * @api public\n */\nCommand.prototype.opts = function() {\n  var result = {},\n    len = this.options.length;\n\n  for (var i = 0; i < len; i++) {\n    var key = this.options[i].attributeName();\n    result[key] = key === this._versionOptionName ? this._version : this[key];\n  }\n  return result;\n};\n\n/**\n * Argument `name` is missing.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.missingArgument = function(name) {\n  const message = `error: missing required argument '${name}'`;\n  console.error(message);\n  this._exit(1, 'commander.missingArgument', message);\n};\n\n/**\n * `Option` is missing an argument, but received `flag` or nothing.\n *\n * @param {String} option\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.optionMissingArgument = function(option, flag) {\n  let message;\n  if (flag) {\n    message = `error: option '${option.flags}' argument missing, got '${flag}'`;\n  } else {\n    message = `error: option '${option.flags}' argument missing`;\n  }\n  console.error(message);\n  this._exit(1, 'commander.optionMissingArgument', message);\n};\n\n/**\n * `Option` does not have a value, and is a mandatory option.\n *\n * @param {String} option\n * @api private\n */\n\nCommand.prototype.missingMandatoryOptionValue = function(option) {\n  const message = `error: required option '${option.flags}' not specified`;\n  console.error(message);\n  this._exit(1, 'commander.missingMandatoryOptionValue', message);\n};\n\n/**\n * Unknown option `flag`.\n *\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.unknownOption = function(flag) {\n  if (this._allowUnknownOption) return;\n  const message = `error: unknown option '${flag}'`;\n  console.error(message);\n  this._exit(1, 'commander.unknownOption', message);\n};\n\n/**\n * Variadic argument with `name` is not the last argument as required.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.variadicArgNotLast = function(name) {\n  const message = `error: variadic arguments must be last '${name}'`;\n  console.error(message);\n  this._exit(1, 'commander.variadicArgNotLast', message);\n};\n\n/**\n * Set the program version to `str`.\n *\n * This method auto-registers the \"-V, --version\" flag\n * which will print the version number when passed.\n *\n * You can optionally supply the  flags and description to override the defaults.\n *\n * @param {String} str\n * @param {String} [flags]\n * @param {String} [description]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.version = function(str, flags, description) {\n  if (arguments.length === 0) return this._version;\n  this._version = str;\n  flags = flags || '-V, --version';\n  description = description || 'output the version number';\n  var versionOption = new Option(flags, description);\n  this._versionOptionName = versionOption.long.substr(2) || 'version';\n  this.options.push(versionOption);\n  this.on('option:' + this._versionOptionName, function() {\n    process.stdout.write(str + '\\n');\n    this._exit(0, 'commander.version', str);\n  });\n  return this;\n};\n\n/**\n * Set the description to `str`.\n *\n * @param {String} str\n * @param {Object} argsDescription\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.description = function(str, argsDescription) {\n  if (arguments.length === 0) return this._description;\n  this._description = str;\n  this._argsDescription = argsDescription;\n  return this;\n};\n\n/**\n * Set an alias for the command\n *\n * @param {String} alias\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.alias = function(alias) {\n  var command = this;\n  if (this.commands.length !== 0) {\n    command = this.commands[this.commands.length - 1];\n  }\n\n  if (arguments.length === 0) return command._alias;\n\n  if (alias === command._name) throw new Error('Command alias can\\'t be the same as its name');\n\n  command._alias = alias;\n  return this;\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.usage = function(str) {\n  var args = this._args.map(function(arg) {\n    return humanReadableArgName(arg);\n  });\n\n  var usage = '[options]' +\n    (this.commands.length ? ' [command]' : '') +\n    (this._args.length ? ' ' + args.join(' ') : '');\n\n  if (arguments.length === 0) return this._usage || usage;\n  this._usage = str;\n\n  return this;\n};\n\n/**\n * Get or set the name of the command\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.name = function(str) {\n  if (arguments.length === 0) return this._name;\n  this._name = str;\n  return this;\n};\n\n/**\n * Return prepared commands.\n *\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.prepareCommands = function() {\n  return this.commands.filter(function(cmd) {\n    return !cmd._noHelp;\n  }).map(function(cmd) {\n    var args = cmd._args.map(function(arg) {\n      return humanReadableArgName(arg);\n    }).join(' ');\n\n    return [\n      cmd._name +\n        (cmd._alias ? '|' + cmd._alias : '') +\n        (cmd.options.length ? ' [options]' : '') +\n        (args ? ' ' + args : ''),\n      cmd._description\n    ];\n  });\n};\n\n/**\n * Return the largest command length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestCommandLength = function() {\n  var commands = this.prepareCommands();\n  return commands.reduce(function(max, command) {\n    return Math.max(max, command[0].length);\n  }, 0);\n};\n\n/**\n * Return the largest option length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestOptionLength = function() {\n  var options = [].slice.call(this.options);\n  options.push({\n    flags: this._helpFlags\n  });\n\n  return options.reduce(function(max, option) {\n    return Math.max(max, option.flags.length);\n  }, 0);\n};\n\n/**\n * Return the largest arg length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestArgLength = function() {\n  return this._args.reduce(function(max, arg) {\n    return Math.max(max, arg.name.length);\n  }, 0);\n};\n\n/**\n * Return the pad width.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.padWidth = function() {\n  var width = this.largestOptionLength();\n  if (this._argsDescription && this._args.length) {\n    if (this.largestArgLength() > width) {\n      width = this.largestArgLength();\n    }\n  }\n\n  if (this.commands && this.commands.length) {\n    if (this.largestCommandLength() > width) {\n      width = this.largestCommandLength();\n    }\n  }\n\n  return width;\n};\n\n/**\n * Return help for options.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.optionHelp = function() {\n  var width = this.padWidth();\n\n  var columns = process.stdout.columns || 80;\n  var descriptionWidth = columns - width - 4;\n\n  // Append the help information\n  return this.options.map(function(option) {\n    const fullDesc = option.description +\n      ((!option.negate && option.defaultValue !== undefined) ? ' (default: ' + JSON.stringify(option.defaultValue) + ')' : '');\n    return pad(option.flags, width) + '  ' + optionalWrap(fullDesc, descriptionWidth, width + 2);\n  }).concat([pad(this._helpFlags, width) + '  ' + optionalWrap(this._helpDescription, descriptionWidth, width + 2)])\n    .join('\\n');\n};\n\n/**\n * Return command help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.commandHelp = function() {\n  if (!this.commands.length) return '';\n\n  var commands = this.prepareCommands();\n  var width = this.padWidth();\n\n  var columns = process.stdout.columns || 80;\n  var descriptionWidth = columns - width - 4;\n\n  return [\n    'Commands:',\n    commands.map(function(cmd) {\n      var desc = cmd[1] ? '  ' + cmd[1] : '';\n      return (desc ? pad(cmd[0], width) : cmd[0]) + optionalWrap(desc, descriptionWidth, width + 2);\n    }).join('\\n').replace(/^/gm, '  '),\n    ''\n  ].join('\\n');\n};\n\n/**\n * Return program help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.helpInformation = function() {\n  var desc = [];\n  if (this._description) {\n    desc = [\n      this._description,\n      ''\n    ];\n\n    var argsDescription = this._argsDescription;\n    if (argsDescription && this._args.length) {\n      var width = this.padWidth();\n      var columns = process.stdout.columns || 80;\n      var descriptionWidth = columns - width - 5;\n      desc.push('Arguments:');\n      desc.push('');\n      this._args.forEach(function(arg) {\n        desc.push('  ' + pad(arg.name, width) + '  ' + wrap(argsDescription[arg.name], descriptionWidth, width + 4));\n      });\n      desc.push('');\n    }\n  }\n\n  var cmdName = this._name;\n  if (this._alias) {\n    cmdName = cmdName + '|' + this._alias;\n  }\n  var parentCmdNames = '';\n  for (var parentCmd = this.parent; parentCmd; parentCmd = parentCmd.parent) {\n    parentCmdNames = parentCmd.name() + ' ' + parentCmdNames;\n  }\n  var usage = [\n    'Usage: ' + parentCmdNames + cmdName + ' ' + this.usage(),\n    ''\n  ];\n\n  var cmds = [];\n  var commandHelp = this.commandHelp();\n  if (commandHelp) cmds = [commandHelp];\n\n  var options = [\n    'Options:',\n    '' + this.optionHelp().replace(/^/gm, '  '),\n    ''\n  ];\n\n  return usage\n    .concat(desc)\n    .concat(options)\n    .concat(cmds)\n    .join('\\n');\n};\n\n/**\n * Output help information for this command.\n *\n * When listener(s) are available for the helpLongFlag\n * those callbacks are invoked.\n *\n * @api public\n */\n\nCommand.prototype.outputHelp = function(cb) {\n  if (!cb) {\n    cb = function(passthru) {\n      return passthru;\n    };\n  }\n  const cbOutput = cb(this.helpInformation());\n  if (typeof cbOutput !== 'string' && !Buffer.isBuffer(cbOutput)) {\n    throw new Error('outputHelp callback must return a string or a Buffer');\n  }\n  process.stdout.write(cbOutput);\n  this.emit(this._helpLongFlag);\n};\n\n/**\n * You can pass in flags and a description to override the help\n * flags and help description for your command.\n *\n * @param {String} [flags]\n * @param {String} [description]\n * @return {Command}\n * @api public\n */\n\nCommand.prototype.helpOption = function(flags, description) {\n  this._helpFlags = flags || this._helpFlags;\n  this._helpDescription = description || this._helpDescription;\n\n  var splitFlags = this._helpFlags.split(/[ ,|]+/);\n\n  if (splitFlags.length > 1) this._helpShortFlag = splitFlags.shift();\n\n  this._helpLongFlag = splitFlags.shift();\n\n  return this;\n};\n\n/**\n * Output help information and exit.\n *\n * @param {Function} [cb]\n * @api public\n */\n\nCommand.prototype.help = function(cb) {\n  this.outputHelp(cb);\n  // exitCode: preserving original behaviour which was calling process.exit()\n  // message: do not have all displayed text available so only passing placeholder.\n  this._exit(process.exitCode || 0, 'commander.help', '(outputHelp)');\n};\n\n/**\n * Camel-case the given `flag`\n *\n * @param {String} flag\n * @return {String}\n * @api private\n */\n\nfunction camelcase(flag) {\n  return flag.split('-').reduce(function(str, word) {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Pad `str` to `width`.\n *\n * @param {String} str\n * @param {Number} width\n * @return {String}\n * @api private\n */\n\nfunction pad(str, width) {\n  var len = Math.max(0, width - str.length);\n  return str + Array(len + 1).join(' ');\n}\n\n/**\n * Wraps the given string with line breaks at the specified width while breaking\n * words and indenting every but the first line on the left.\n *\n * @param {String} str\n * @param {Number} width\n * @param {Number} indent\n * @return {String}\n * @api private\n */\nfunction wrap(str, width, indent) {\n  var regex = new RegExp('.{1,' + (width - 1) + '}([\\\\s\\u200B]|$)|[^\\\\s\\u200B]+?([\\\\s\\u200B]|$)', 'g');\n  var lines = str.match(regex) || [];\n  return lines.map(function(line, i) {\n    if (line.slice(-1) === '\\n') {\n      line = line.slice(0, line.length - 1);\n    }\n    return ((i > 0 && indent) ? Array(indent + 1).join(' ') : '') + line;\n  }).join('\\n');\n}\n\n/**\n * Optionally wrap the given str to a max width of width characters per line\n * while indenting with indent spaces. Do not wrap if insufficient width or\n * string is manually formatted.\n *\n * @param {String} str\n * @param {Number} width\n * @param {Number} indent\n * @return {String}\n * @api private\n */\nfunction optionalWrap(str, width, indent) {\n  // Detect manually wrapped and indented strings by searching for line breaks\n  // followed by multiple spaces/tabs.\n  if (str.match(/[\\n]\\s+/)) return str;\n  // Do not wrap to narrow columns (or can end up with a word per line).\n  const minWidth = 40;\n  if (width < minWidth) return str;\n\n  return wrap(str, width, indent);\n}\n\n/**\n * Output help information if necessary\n *\n * @param {Command} command to output help for\n * @param {Array} array of options to search for -h or --help\n * @api private\n */\n\nfunction outputHelpIfNecessary(cmd, options) {\n  options = options || [];\n\n  for (var i = 0; i < options.length; i++) {\n    if (options[i] === cmd._helpLongFlag || options[i] === cmd._helpShortFlag) {\n      cmd.outputHelp();\n      // (Do not have all displayed text available so only passing placeholder.)\n      cmd._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n    }\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Object} arg\n * @return {String}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  var nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\n// for versions before node v0.8 when there weren't `fs.existsSync`\nfunction exists(file) {\n  try {\n    if (fs.statSync(file).isFile()) {\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @api private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    var result = arg;\n    if (arg.indexOf('--inspect') === 0) {\n      var debugOption;\n      var debugHost = '127.0.0.1';\n      var debugPort = '9229';\n      var match;\n      if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n        // e.g. --inspect\n        debugOption = match[1];\n      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {\n        debugOption = match[1];\n        if (/^\\d+$/.test(match[3])) {\n          // e.g. --inspect=1234\n          debugPort = match[3];\n        } else {\n          // e.g. --inspect=localhost\n          debugHost = match[3];\n        }\n      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null) {\n        // e.g. --inspect=localhost:1234\n        debugOption = match[1];\n        debugHost = match[3];\n        debugPort = match[4];\n      }\n\n      if (debugOption && debugPort !== '0') {\n        result = `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n      }\n    }\n    return result;\n  });\n}\n","module.exports = require(\"events\");","module.exports = require(\"child_process\");","'use strict';\nconst path = require('path');\nconst locatePath = require('locate-path');\nconst pathExists = require('path-exists');\n\nconst stop = Symbol('findUp.stop');\n\nmodule.exports = async (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = async locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = await name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst foundPath = await runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.sync = (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath.sync(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath.sync([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst foundPath = runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.exists = pathExists;\n\nmodule.exports.sync.exists = pathExists.sync;\n\nmodule.exports.stop = stop;\n","'use strict';\nconst path = require('path');\nconst fs = require('fs');\nconst {promisify} = require('util');\nconst pLocate = require('p-locate');\n\nconst fsStat = promisify(fs.stat);\nconst fsLStat = promisify(fs.lstat);\n\nconst typeMappings = {\n\tdirectory: 'isDirectory',\n\tfile: 'isFile'\n};\n\nfunction checkType({type}) {\n\tif (type in typeMappings) {\n\t\treturn;\n\t}\n\n\tthrow new Error(`Invalid type specified: ${type}`);\n}\n\nconst matchType = (type, stat) => type === undefined || stat[typeMappings[type]]();\n\nmodule.exports = async (paths, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\ttype: 'file',\n\t\tallowSymlinks: true,\n\t\t...options\n\t};\n\tcheckType(options);\n\tconst statFn = options.allowSymlinks ? fsStat : fsLStat;\n\n\treturn pLocate(paths, async path_ => {\n\t\ttry {\n\t\t\tconst stat = await statFn(path.resolve(options.cwd, path_));\n\t\t\treturn matchType(options.type, stat);\n\t\t} catch (_) {\n\t\t\treturn false;\n\t\t}\n\t}, options);\n};\n\nmodule.exports.sync = (paths, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\tallowSymlinks: true,\n\t\ttype: 'file',\n\t\t...options\n\t};\n\tcheckType(options);\n\tconst statFn = options.allowSymlinks ? fs.statSync : fs.lstatSync;\n\n\tfor (const path_ of paths) {\n\t\ttry {\n\t\t\tconst stat = statFn(path.resolve(options.cwd, path_));\n\n\t\t\tif (matchType(options.type, stat)) {\n\t\t\t\treturn path_;\n\t\t\t}\n\t\t} catch (_) {\n\t\t}\n\t}\n};\n","'use strict';\nconst pLimit = require('p-limit');\n\nclass EndError extends Error {\n\tconstructor(value) {\n\t\tsuper();\n\t\tthis.value = value;\n\t}\n}\n\n// The input can also be a promise, so we await it\nconst testElement = async (element, tester) => tester(await element);\n\n// The input can also be a promise, so we `Promise.all()` them both\nconst finder = async element => {\n\tconst values = await Promise.all(element);\n\tif (values[1] === true) {\n\t\tthrow new EndError(values[0]);\n\t}\n\n\treturn false;\n};\n\nconst pLocate = async (iterable, tester, options) => {\n\toptions = {\n\t\tconcurrency: Infinity,\n\t\tpreserveOrder: true,\n\t\t...options\n\t};\n\n\tconst limit = pLimit(options.concurrency);\n\n\t// Start all the promises concurrently with optional limit\n\tconst items = [...iterable].map(element => [element, limit(testElement, element, tester)]);\n\n\t// Check the promises either serially or concurrently\n\tconst checkLimit = pLimit(options.preserveOrder ? 1 : Infinity);\n\n\ttry {\n\t\tawait Promise.all(items.map(element => checkLimit(finder, element)));\n\t} catch (error) {\n\t\tif (error instanceof EndError) {\n\t\t\treturn error.value;\n\t\t}\n\n\t\tthrow error;\n\t}\n};\n\nmodule.exports = pLocate;\n// TODO: Remove this for the next major release\nmodule.exports.default = pLocate;\n","'use strict';\nconst pTry = require('p-try');\n\nconst pLimit = concurrency => {\n\tif (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {\n\t\treturn Promise.reject(new TypeError('Expected `concurrency` to be a number from 1 and up'));\n\t}\n\n\tconst queue = [];\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.length > 0) {\n\t\t\tqueue.shift()();\n\t\t}\n\t};\n\n\tconst run = (fn, resolve, ...args) => {\n\t\tactiveCount++;\n\n\t\tconst result = pTry(fn, ...args);\n\n\t\tresolve(result);\n\n\t\tresult.then(next, next);\n\t};\n\n\tconst enqueue = (fn, resolve, ...args) => {\n\t\tif (activeCount < concurrency) {\n\t\t\trun(fn, resolve, ...args);\n\t\t} else {\n\t\t\tqueue.push(run.bind(null, fn, resolve, ...args));\n\t\t}\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => enqueue(fn, resolve, ...args));\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.length\n\t\t}\n\t});\n\n\treturn generator;\n};\n\nmodule.exports = pLimit;\nmodule.exports.default = pLimit;\n","'use strict';\n\nconst pTry = (fn, ...arguments_) => new Promise(resolve => {\n\tresolve(fn(...arguments_));\n});\n\nmodule.exports = pTry;\n// TODO: remove this in the next major version\nmodule.exports.default = pTry;\n","'use strict';\nconst fs = require('fs');\nconst {promisify} = require('util');\n\nconst pAccess = promisify(fs.access);\n\nmodule.exports = async path => {\n\ttry {\n\t\tawait pAccess(path);\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n\nmodule.exports.sync = path => {\n\ttry {\n\t\tfs.accessSync(path);\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n","import { RomanizeSystem } from \"../types\";\nimport pinyin from \"./hanzi2roman-map-pinyin.json\";\nimport baxter from \"./hanzi2roman-map-baxter.json\";\n\nexport function hanzi2unicodeEntry(s: string) {\n  var y = \"\";\n  for (var c of s) {\n    y += \"U\";\n    y += c\n      .charCodeAt(0)\n      .toString(16)\n      .toUpperCase();\n  }\n  return y;\n}\n\nexport function hanzi2pinyin(a: string, system: RomanizeSystem = \"pinyin\") {\n  if (system === \"unicode\") return hanzi2unicodeEntry(a);\n\n  var tab = { pinyin, baxter }[system];\n  var s = \"\";\n  for (const x of a) {\n    var key = x\n      .charCodeAt(0)\n      .toString(16)\n      .toUpperCase();\n    var r = tab[key];\n    if (r == undefined) {\n      r = \"_\";\n    }\n    s += r.split(\" \")[0];\n  }\n  return s;\n}\n","import { MarcoOptions, MacroDefinition } from \"./types\";\nimport { bundleImports } from \"./reader\";\nimport { match } from \"./utils\";\n\nexport function extractMacros(src: string, options: MarcoOptions) {\n  const { lib, lang, importOptions } = options;\n\n  function getImports(): string[] {\n    var imports = [];\n    var qlvl = 0;\n    for (var i = 0; i < src.length; i++) {\n      if (src[i] == \"「\") {\n        qlvl++;\n      } else if (src[i] == \"」\") {\n        qlvl--;\n      } else if (src[i] == \"『\") {\n        qlvl += 2;\n      } else if (src[i] == \"』\") {\n        qlvl -= 2;\n      }\n      if (qlvl != 0) {\n        continue;\n      }\n      if (match(src, i, \"吾嘗觀\")) {\n        var imp = src\n          .slice(i + 3)\n          .split(\"之書\")[0]\n          .split(\"中\")\n          .map(x => x.replace(/[「」『』]/g, \"\"))\n          .join(\"/\");\n        imports.push(imp);\n      }\n    }\n    return imports;\n  }\n  function getMacros() {\n    var macros: MacroDefinition[] = [];\n    var qlvl = 0;\n    for (var i = 0; i < src.length; i++) {\n      if (src[i] == \"「\") {\n        qlvl++;\n      } else if (src[i] == \"」\") {\n        qlvl--;\n      } else if (src[i] == \"『\") {\n        qlvl += 2;\n      } else if (src[i] == \"』\") {\n        qlvl -= 2;\n      }\n      if (qlvl != 0) {\n        continue;\n      }\n      if (src[i] == \"或\" && src[i + 1] == \"云\") {\n        const grabLit = () => {\n          var lvl = 0;\n          var s = \"\";\n          while (true) {\n            if (src[j] == \"「\") {\n              lvl++;\n            } else if (src[j] == \"」\") {\n              lvl--;\n            } else if (src[j] == \"『\") {\n              lvl += 2;\n            } else if (src[j] == \"』\") {\n              lvl -= 2;\n            }\n            s += src[j];\n            j++;\n            if (lvl == 0) {\n              break;\n            }\n            if (j >= src.length) {\n              return s;\n            }\n          }\n          return s;\n        };\n        var j = i + 2;\n        var s0 = grabLit();\n        while (!(src[j] == \"蓋\" && src[j + 1] == \"謂\")) {\n          j++;\n          if (j >= src.length) {\n            return macros;\n          }\n        }\n        j += 2;\n        var s1 = grabLit();\n\n        const stripQuotes = s => {\n          if (s[0] == \"「\") {\n            s = s.slice(2);\n          } else {\n            s = s.slice(1);\n          }\n          if (s[s.length - 1] == \"」\") {\n            s = s.slice(0, -2);\n          } else {\n            s = s.slice(0, -1);\n          }\n          return s;\n        };\n        s0 = stripQuotes(s0);\n        s1 = stripQuotes(s1);\n        var ins = s0.match(/「[甲乙丙丁戊己庚辛壬癸]」/g);\n        var ous = s1.match(/「[甲乙丙丁戊己庚辛壬癸]」/g);\n\n        if (ins !== null && ous !== null) {\n          for (var k = 0; k < ous.length; k++) {\n            var ii = ins.indexOf(ous[k]);\n            if (ii >= 0) {\n              s1 = s1.replace(new RegExp(ous[k], \"g\"), `\\$${ii + 1}`);\n            }\n          }\n        }\n        s0 = s0.replace(/「[甲乙丙丁戊己庚辛壬癸]」/g, \"(.+?)\");\n        macros.push([s0, s1]);\n        i = j;\n      }\n    }\n    return macros;\n  }\n  const imports = getImports();\n  const macros = getMacros();\n\n  bundleImports(imports, { lib, lang }, importOptions).forEach(\n    ({ src, entry }) => {\n      const moduleMacros = extractMacros(src, {\n        ...options,\n        importOptions: {\n          ...importOptions,\n          entryFilepath: entry\n        }\n      });\n      macros.push(...moduleMacros);\n    }\n  );\n\n  return macros;\n}\n\nfunction calcBracketStarts(src: string) {\n  const starts: number[] = [];\n  let level = 0;\n  for (var i = 0; i < src.length; i++) {\n    let c = src[i];\n    if (c == \"「\") {\n      level++;\n    } else if (c == \"」\") {\n      level--;\n    } else if (c == \"『\") {\n      level += 2;\n    } else if (c == \"』\") {\n      level -= 2;\n    }\n    if (level > 0) starts.push(i);\n  }\n  return starts;\n}\n\nexport function expandMacros(src: string, macros: MacroDefinition[]) {\n  for (const [from, to] of macros) {\n    let re = new RegExp(from);\n    const expand = ntxt => {\n      let starts = calcBracketStarts(ntxt);\n      let idx = ntxt.search(re);\n      if (idx == -1) {\n        return ntxt;\n      }\n      if (starts.includes(idx)) {\n        // console.log(\"refused to expand macro inside string\")\n        let nxtend = idx + 1;\n        while (starts.includes(nxtend) && nxtend < starts.length) {\n          nxtend++;\n        }\n        nxtend++;\n        ntxt = ntxt.slice(0, nxtend) + expand(ntxt.slice(nxtend));\n      } else {\n        ntxt = expand(ntxt.replace(re, to));\n      }\n      return ntxt;\n    };\n    src = expand(src);\n  }\n  return src;\n}\n","import { StandardLibraryObject } from \"./types\";\n\nfunction loadStdlib() {\n  const STDLIB = {};\n\n  try {\n    const raw = require.context(\"../lib\", true, /.*\\.wy$/);\n\n    raw.keys().forEach(key => {\n      const parts = key.slice(2, -3).split(\"/\");\n      const data = raw(key).default;\n      let sublib = STDLIB;\n      for (const part of parts.slice(0, -1)) {\n        if (!sublib[part]) sublib[part] = {};\n        sublib = sublib[part];\n      }\n      sublib[parts[parts.length - 1]] = data;\n    });\n  } catch (e) {} // ignore \"require.context\" error for testing\n\n  return STDLIB as StandardLibraryObject;\n}\n\nexport const STDLIB = loadStdlib();\n","var map = {\n\t\"./js/位經.wy\": 28,\n\t\"./js/天地經.wy\": 29,\n\t\"./js/格物.wy\": 30,\n\t\"./js/畫譜.wy\": 31,\n\t\"./js/西曆法.wy\": 32,\n\t\"./py/位經.wy\": 33,\n\t\"./py/天地經.wy\": 34,\n\t\"./py/西曆法.wy\": 35,\n\t\"./rb/天地經.wy\": 36,\n\t\"./列經.wy\": 37,\n\t\"./易經.wy\": 38,\n\t\"./曆法.wy\": 39,\n\t\"./曆表.wy\": 40,\n\t\"./渾沌經.wy\": 41,\n\t\"./算經.wy\": 42,\n\t\"./籌經.wy\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 27;","export default \"疏曰「「左移。同犀之x<<y也。」」\\n今有一術。名之曰「左移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x<<y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「左移」之術也。\\n\\n疏曰「「右移。同犀之x>>y也。」」\\n今有一術。名之曰「右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x>>y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「右移」之術也。\\n\\n疏曰「「補零右移。同犀之x>>>y也。」」\\n今有一術。名之曰「補零右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x>>>y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「補零右移」之術也。\\n\\n疏曰「「位與。同犀之x&y也。」」\\n今有一術。名之曰「位與」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x&y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位与」之術也。\\n\\n疏曰「「位或。同犀之x|y也。」」\\n今有一術。名之曰「位或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x|y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位或」之術也。\\n\\n疏曰「「異或。同犀之x^y也。」」\\n今有一術。名之曰「異或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x^y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「异或」之術也。\\n\\n疏曰「「與非。同犀之~(x&y)也。」」\\n今有一術。名之曰「與非」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(~(x&y)))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「与非」之術也。\\n\\n疏曰「「位變。同犀之~x也。」」\\n今有一術。名之曰「位變」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「(x=>(~x))」於「甲」。名之曰「乙」。乃得「乙」。\\n是謂「位變」之術也。\\n\";","export default \"今有一言。曰「「犀」」。名之曰「境」。\\n\\n注曰「「鑒。同Javascript之eval也。」」\\n今有一術。名之曰「鑒」。欲行是術。必先得一言。曰「言」。乃行是術曰。\\n\\t施「eval」於「言」。乃得矣。\\n是謂「鑒」之術也。\";","export default \"\\n今有一術。名之曰「取物」。欲行是術。必先得一物曰「物」。一言曰「端」。乃行是術曰。\\n\\t施「(obj=>x=>obj[x])」於「物」於「端」。乃得矣。\\n是謂「取物」之術也。\\n\\n今有一術。名之曰「置物」。欲行是術。必先得一物曰「物」。一言曰「端」。一元曰「實」。乃行是術曰。\\n\\t施「(obj=>x=>v=>{obj[x]=v})」於「物」於「端」於「實」。\\n是謂「置物」之術也。\\n\\n今有一術。名之曰「列物之端」。欲行是術。必先得一物曰「物」。乃行是術曰。\\n\\t施「Object.keys」於「物」乃得矣。\\n是謂「列物之端」之術也。\\n\\n今有一術。名之曰「識類」。欲行是術。必先得一元曰「元」。乃行是術曰。\\n\\t施「(x=>((x instanceof Array)?\\\"列\\\":({\\\"number\\\":\\\"數\\\",\\\"boolean\\\":\\\"爻\\\",\\\"string\\\":\\\"言\\\",\\\"function\\\":\\\"術\\\",\\\"object\\\":\\\"物\\\"}[(typeof x)])))」於「元」乃得矣。\\n是謂「識類」之術也。\\n\";","export default \"吾有一列。名之曰「色表」。充「色表」\\n以「「黑」」。\\t以「「#000000」」。\\n以「「鈦白」」。\\t以「「#ffffff」」。\\n以「「藤黃」」。\\t以「「#faea56」」。\\n以「「硃磦」」。\\t以「「#d44906」」。\\n以「「硃砂」」。\\t以「「#c0927b」」。\\n以「「胭脂」」。\\t以「「#491817」」。\\n以「「曙紅」」。\\t以「「#c72c35」」。\\n以「「赭石」」。\\t以「「#522d14」」。\\n以「「大紅」」。\\t以「「#b91c1b」」。\\n以「「花青」」。\\t以「「#141931」」。\\n以「「三綠」」。\\t以「「#afceb5」」。\\n以「「酞青藍」」。\\t以「「#1e2867」」。\\n以「「三青」」。\\t以「「#acc8d4」」。\\n\\n\\n今有一術。名之曰「備紙」。欲行是術。必先得二數。曰「寬」。曰「高」。乃行是術曰。\\n\\t施「document.createElement」於「「canvas」」。名之曰「canv」。\\n\\t施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t昔之「canv」之「「width」」者。今「寬」是矣。\\n\\t昔之「canv」之「「height」」者。今「高」是矣。\\n\\t昔之「ctx.lineJoin」者。今「「round」」是矣。\\n\\t昔之「ctx.lineCap」者。今「「round」」是矣。\\n\\t乃得「canv」。\\n是謂「備紙」之術也。\\n\\n今有一術。名之曰「裱畫」。欲行是術。必先得一物。曰「紙」。一言。曰「壁」。乃行是術曰。\\n\\t施「document.getElementById」於「壁」。名之曰「div」。\\n\\t施「div.appendChild」於「紙」。\\n是謂「裱畫」之術也。\\n\\n\\n今有一術。名之曰「落筆」。欲行是術。必先得一物。曰「紙」。二數。曰「東」曰「南」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「ctx.beginPath」。\\n\\t施「(x=>y=>ctx.moveTo(x,y))」於「東」於「南」。\\n是謂「落筆」之術也。\\n\\n今有一術。名之曰「運筆」。欲行是術。必先得一物。曰「紙」。二數。曰「東」曰「南」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「(x=>y=>ctx.lineTo(x,y))」於「東」於「南」。\\n是謂「運筆」之術也。\\n\\n吾有一術。名之曰「取十六進制色」。欲行是術。必先得一言。曰「色」。乃行是術曰。\\n\\t有數一。名之曰「戊」。恆為是。若「戊」大於「色表」之長者乃止也。\\n\\t\\t若「色表」之「戊」等於「色」者。\\n\\t\\t\\t加「戊」以一。名之曰「色數」。\\n\\t\\t\\t夫「色表」之「色數」。乃得矣。\\n\\t\\t\\t乃止。\\n\\t\\t云云。\\n\\t加二以「戊」。昔之「戊」者。今其是矣。云云。\\n是謂「取十六進制色」之術也。\\n\\n今有一術。名之曰「蘸色」。欲行是術。必先得一物。曰「紙」。一言。曰「色」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t昔之「ctx.globalAlpha」者。今一是矣。\\n\\t\\n\\t施「取十六進制色」於「色」。名之曰「十六進制色」。\\n\\t昔之「ctx.strokeStyle」者。今「十六進制色」是矣。\\n\\t昔之「ctx.fillStyle」者。今「十六進制色」是矣。\\n是謂「蘸色」之術也。\\n\\n今有一術。名之曰「調色」。欲行是術。必先得一物曰「紙」。一言曰「色」。一數曰「分」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t昔之「ctx.globalAlpha」者。今一是矣。\\n\\t\\n\\t施「取十六進制色」於「色」。名之曰「col」。\\n\\t夫「分」。名之曰「t」。\\n\\t\\n\\t夫「parseInt(ctx.fillStyle.slice(1),16)」。名之曰「rgb0」。\\n\\t夫「parseInt(col.slice(1),16)」。名之曰「rgb1」\\n\\t夫「Math.floor((rgb0>>>16)*(1-t)+(rgb1>>>16)*t)」名之曰「r」\\n\\t夫「Math.floor(((rgb0>>8)&0xff)*(1-t)+((rgb1>>8)&0xff)*t)」名之曰「g」\\n\\t夫「Math.floor((rgb0&0xff)*(1-t)+(rgb1&0xff)*t)」名之曰「b」\\n\\t夫「r.toString(16).padStart(2,'0')」名之曰「R」。\\n\\t夫「g.toString(16).padStart(2,'0')」名之曰「G」。\\n\\t夫「b.toString(16).padStart(2,'0')」名之曰「B」。\\n\\t夫「\\\"#\\\"+R+G+B」。名之曰「十六進制色」。\\n\\t昔之「ctx.strokeStyle」者。今「十六進制色」是矣。\\n\\t昔之「ctx.fillStyle」者。今「十六進制色」是矣。\\n\\n是謂「調色」之術也。\\n\\n今有一術。名之曰「蘸水」。欲行是術。必先得一物曰「紙」。一數曰「分」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t減「分」於一。昔之「ctx.globalAlpha」者。今其是矣。\\n是謂「蘸水」之術也。\\n\\n今有一術。名之曰「擇筆」。欲行是術。必先得一物。曰「紙」。一數。曰「號」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t昔之「ctx.lineWidth」者。今「號」是矣。\\n是謂「擇筆」之術也。\\n\\n今有一術。名之曰「提筆」。欲行是術。必先得一物。曰「紙」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「ctx.stroke」。\\n是謂「提筆」之術也。\\n\\n今有一術。名之曰「設色」。欲行是術。必先得一物。曰「紙」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「ctx.fill」。\\n是謂「設色」之術也。\";","export default \"今有一術。名之曰「紀元時」。是術曰。\\n\\t施「(()=>new Date().getTime()/1000)」。乃得矣。\\n是謂「紀元時」之術也。\\n\\n今有一術。名之曰「時差」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「(x => 0 - new Date(x * 1000).getTimezoneOffset() * 60)」於「時」。乃得矣。\\n是謂「時差」之術也。\\n\";","export default \"今有一術。名之曰「左移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t吾有一術。名之曰\\n\\t施「(lambda x: lambda y : x<<y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「左移」之術也。\\n\\n今有一術。名之曰「右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x>>y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「右移」之術也。\\n\\n今有一術。名之曰「補零右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : return (x % 0x100000000) >> y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「補零右移」之術也。\\n\\n今有一術。名之曰「位与」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x&y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位与」之術也。\\n\\n今有一術。名之曰「位或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x|y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位或」之術也。\\n\\n今有一術。名之曰「异或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x^y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「异或」之術也。\\n\\n今有一術。名之曰「与非」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : ~(x&y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「与非」之術也。\\n\\n今有一術。名之曰「位變」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「(lambda x: ~x」於「甲」。名之曰「乙」。乃得「乙」。\\n是謂「位變」之術也。\\n\";","export default \"今有一言。曰「「蟒」」。名之曰「境」。\\n\\n今有一術。名之曰「鑒」。欲行是術。必先得一言。曰「言」。乃行是術曰。\\n\\t施「eval」於「言」。乃得矣。\\n是謂「鑒」之術也。\";","export default \"\\n今有一術。名之曰「紀元時」。是術曰。\\n\\t施「__import__」於「「time」」。名之曰「time」。\\n\\t施「time.time」。乃得矣。\\n是謂「紀元時」之術也。\\n\\n今有一術。名之曰「時差」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「__import__」於「「time」」。名之曰「time」。\\n\\t施「(lambda x: time.localtime(x).tm_gmtoff)」於「時」。乃得矣。\\n是謂「時差」之術也。\\n\";","export default \"今有一言。曰「「鑽」」。名之曰「境」。\\n\\n今有一術。名之曰「鑒」。欲行是術。必先得一言。曰「言」。乃行是術曰。\\n\\t施「eval」於「言」。乃得矣。\\n是謂「鑒」之術也。\";","export default \"或云「「凡「甲」皆「乙」其上者」」。\\n蓋謂「「施「遍施」於「乙」於「甲」」」\\n\\n或云「「唯「甲」中得「乙」者」」\\n蓋謂「「施「篩剔」於「乙」於「甲」」」\\n\\n或云「「併「甲」於「乙」以「丙」者」」\\n蓋謂「「施「左併」於「丙」於「乙」於「甲」」」\\n\\n注曰「「遍施。同Javascript之Array.forEach也。」」\\n今有一術。名之曰「遍施」。欲行是術。必先得一術。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\t吾有一列。名之曰「丙」。\\n\\t凡「乙」中之「丁」。\\n\\t\\t施「甲」於「丁」。充「丙」以其也。\\n\\t乃得「丙」。\\n是謂「遍施」之術也。\\n\\n注曰「「篩剔。同Javascript之Array.filter也。」」\\n今有一術。名之曰「篩剔」。欲行是術。必先得一術。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\t吾有一列。名之曰「丙」。\\n\\t凡「乙」中之「丁」。\\n\\t\\t施「甲」於「丁」。\\n\\t\\t若其者。充「丙」以「丁」也。\\n\\t云云。\\n\\t乃得「丙」。\\n是謂「篩剔」之術也。\\n\\n今有一術。名之曰「左併」。欲行是術。必先得一術。曰「甲」。一元。曰「乙」。一列。曰「丙」。乃行是術曰。\\n\\t吾有一元曰「乙」。名之曰「丁」。\\n\\t凡「丙」中之「戊」。\\n\\t\\t施「甲」於「丁」於「戊」。\\n\\t\\t昔之「丁」者。今其是矣。\\n\\t云云。\\n\\t乃得「丁」。\\n是謂「左併」之術也。\\n\\n\\n今有一術。名之曰「右併」。欲行是術。必先得一術。曰「甲」。一元。曰「乙」。一列。曰「丙」。乃行是術曰。\\n\\t吾有一元曰「乙」。名之曰「丁」。\\n\\t夫「丙」之長。名之曰「戊」。\\n\\t恆為是。若「戊」小於一者乃止也。\\n\\t\\t夫「丙」之「戊」。夫「丁」。取二以施「甲」。\\n\\t\\t昔之「丁」者。今其是矣。\\n\\t減「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「丁」。\\n是謂「右併」之術也。\\n\\n注曰「「排序。同Javascript之Array.sort也。」」\\n今有一術。名之曰「排序」。欲行是術。必先得一術。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\n\\t若「乙」之長不大於一者。乃得「乙」也。\\n\\t吾有三列。名之曰「首」。曰「頷」。曰「尾」。\\n\\n\\t夫「乙」之一。名之曰「乙一」。\\n\\t充「頷」以「乙一」。\\n\\t夫「乙」之其餘。名之曰「乙餘」。\\n\\n\\t凡「乙餘」中之「丁」。\\n\\t\\t施「甲」於「丁」於「乙一」。\\n\\t\\t若其小於零者。\\n\\t\\t\\t充「首」以「丁」。\\n\\t\\t若非。\\n\\t\\t\\t充「尾」以「丁」\\n\\t\\t也。\\n\\t云云。\\n\\t施「排序」於「甲」於「首」。昔之「首」者。今其是矣。\\n\\t施「排序」於「甲」於「尾」。昔之「尾」者。今其是矣。\\n\\n\\t銜「首」以「頷」以「尾」。名之曰「丙」。\\n\\t乃得「丙」。\\n\\n是謂「排序」之術也。\\n\\n注曰「「倒序。同Javascript之Array.reverse也。」」\\n今有一術。名之曰「倒序」。欲行是術。必先得一列。曰「甲」。乃行是術曰。\\n\\t吾有一列。名之曰「乙」。\\n\\t夫「甲」之長。名之曰「戊」。\\n\\t恆為是。若「戊」小於一者乃止也。\\n\\t\\t夫「甲」之「戊」。充「乙」以其。\\n\\t減「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「乙」。\\n是謂「倒序」之術也。\\n\\n注曰「「擷取。同Javascript之Array.slice也。」」\\n今有一術。名之曰「擷取」。欲行是術。必先得一列。曰「甲」。二數。曰「乙」曰「丙」。乃行是術曰。\\n\\t吾有一列。名之曰「丁」。\\n\\t吾有一數。曰「乙」。名之曰「戊」。\\n\\t若「丙」小於零者。夫「甲」之長。加其以「丙」。昔之「丙」者。今其是矣。云云。\\n\\n\\t恆為是。若「戊」大於「丙」者乃止也。\\n\\t\\t夫「甲」之「戊」。充「丁」以其。\\n\\t加「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「丁」。\\n是謂「擷取」之術也。\\n\\n\\n今有一術。名之曰「製列」。欲行是術。必先得一數。曰「甲」。一術。曰「乙」。一列。曰「丙」。乃行是術曰。\\n\\t吾有一列。名之曰「丁」。\\n\\t吾有一數曰一。名之曰「戊」。\\n\\n\\t恆為是。若「戊」大於「甲」者乃止也。\\n\\t\\t施「乙」於「戊」。充「丁」以其。\\n\\t加「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「丁」。\\n是謂「製列」之術也。\\n\\n\\n今有一術。名之曰「索一」。欲行是術。必先得一列。曰「甲」。一元。曰「乙」。乃行是術曰。\\n\\t吾有一數曰一。名之曰「戊」。\\n\\t恆為是。若「戊」大於「甲」之長者乃止也。\\n\\t\\t若「乙」等於「甲」之「戊」者。乃得「戊」也。\\n\\t加「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得負一。\\n是謂「索一」之術也。\\n\\n\\n\\n\";","export default \"吾有一數。曰四十二。名之曰「運數」。\\n\\n今有一術。名之曰「運」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「運者。隨機種子也」」\\n\\t昔之「運數」者。今「甲」是矣。\\n是謂「運」之術也。\\n\\n今有一術。名之曰「占」。是術曰。\\n\\t注曰「「線性同餘方法所得隨機數也」」\\n\\t有數四十二億九千四百九十六萬七千二百九十六。名之曰「模」。\\n\\t注曰「「有數二千二百六十九萬五千四百七十七。名之曰「倍」。」」\\n\\t有數二千二百六十七萬五千四百五十六。名之曰「上倍」。有數二萬零二十一。名之曰「下倍」。\\n\\t有數一。名之曰「增」。\\n\\t乘「上倍」於「運數」。除其以「模」。所餘幾何。名之曰「上餘」。\\n\\t乘「下倍」於「運數」。加其於「上餘」。加其以「增」。除其以「模」。所餘幾何。昔之「運數」者。今其是矣。\\n\\t除「運數」以「模」。名之曰「卦」。\\n\\t乃得「卦」。\\n是謂「占」之術也。\\n\";","export default \"吾嘗觀「「西曆法」」之書。方悟「紀元時」「時差」之義。\\n吾嘗觀「「曆表」」之書。方悟「始曆月」「曆月表」「始閏月」「閏月表」之義。\\n吾嘗觀「「算經」」之書。方悟「取底除」「取整除」「取底」「取頂」「取整」之義。\\n\\n注曰「「今之年月日時刻者。當以紀元時(Unix timestamp)推算之。」」\\n疏曰「「格林威治平時西曆一九七〇年一月一日木曜日〇時即西元一九六九年己酉年十一月二十四日辛巳日子正起所積秒數也。」」\\n疏曰「「日八萬六千四百秒。」」\\n\\n注曰「「今何紀元時。同Javascript之Date.now() / 1000也。」」\\n今有一術。名之曰「今何紀元時」。是術曰。\\n\\t施「紀元時」。乃得矣。\\n是謂「今何紀元時」之術也。\\n\\n注曰「「言今之日時。同Javascript之new Date().toString(), in Chinese calendar也。」」\\n今有一術。名之曰「言今之日時」。是術曰。\\n\\t施「紀元時」。取一以施「言彼之日時」。乃得矣。\\n是謂「言今之日時」之術也。\\n\\n注曰「「言今之年月日。同Javascript之new Date().toDateString(), in Chinese calendar也。」」\\n今有一術。名之曰「言今之年月日」。是術曰。\\n\\t施「紀元時」。取一以施「言彼之年月日」。乃得矣。\\n是謂「言今之年月日」之術也。\\n\\n注曰「「言今之時刻。同Javascript之new Date().toTimeString(), in Chinese calendar也。」」\\n今有一術。名之曰「言今之時刻」。是術曰。\\n\\t施「紀元時」。取一以施「言彼之時刻」。乃得矣。\\n是謂「言今之時刻」之術也。\\n\\n注曰「「今年何年號。同Javascript之\\\"西元\\\" for modern dates也。」」\\n今有一術。名之曰「今年何年號」。是術曰。\\n\\t施「紀元時」。取一以施「彼年何年號」。乃得矣。\\n是謂「今年何年號」之術也。\\n\\n注曰「「今年何年。同Javascript之new Date().getFullYear() for modern dates, in Chinese calendar也。」」\\n今有一術。名之曰「今年何年」。是術曰。\\n\\t注曰「「年者。或以西元。或以帝王年號紀之。」」\\n\\t施「紀元時」。取一以施「彼年何年」。乃得矣。\\n是謂「今年何年」之術也。\\n\\n注曰「「今年何干支。同Javascript之Get index (1 to 60) of this year in the 60-year cycle也。」」\\n今有一術。名之曰「今年何干支」。是術曰。\\n\\t注曰「「甲子得一。乙丑得二。乃至癸亥得六十也。」」\\n\\t施「紀元時」。取一以施「彼年何干支」。乃得矣。\\n是謂「今年何干支」之術也。\\n\\n注曰「「今年積何年。同Javascript之new Date().getFullYear() + 2697, in Chinese calendar也。」」\\n今有一術。名之曰「今年積何年」。是術曰。\\n\\t注曰「「米制公約訂立年積四千五百七十二年。」」\\n\\t注曰「「紀元年積四千六百六十六年。」」\\n\\t施「紀元時」。取一以施「彼年積何年」。乃得矣。\\n是謂「今年積何年」之術也。\\n\\n注曰「「今月何月。同Javascript之new Date().getMonth() + 1, N + 0.5 for leap months, in Chinese calendar也。」」\\n今有一術。名之曰「今月何月」。是術曰。\\n\\t注曰「「月者。正月至臘月也。」」\\n\\t注曰「「正月得一。二月得二。乃至十二月得十二也。閏月者。加半於前月數。」」\\n\\t施「紀元時」。取一以施「彼月何月」。乃得矣。\\n是謂「今月何月」之術也。\\n\\n注曰「「今月積何月。同Javascript之Get continuously counting month number of this month也。」」\\n今有一術。名之曰「今月積何月」。是術曰。\\n\\t注曰「「米制公約訂立月積五萬六千五百五十一月。」」\\n\\t注曰「「紀元月積五萬七千七百二十一月。」」\\n\\t施「紀元時」。取一以施「彼月積何月」。乃得矣。\\n是謂「今月積何月」之術也。\\n\\n注曰「「今日何日。同Javascript之new Date().getDate(), in Chinese calendar也。」」\\n今有一術。名之曰「今日何日」。是術曰。\\n\\t批曰「「古有越人歌。曰。今日何日兮，得與王子同舟。」」\\n\\t注曰「「初一日得一。初二日得二。乃至三十日得三十也。」」\\n\\t施「紀元時」。取一以施「彼日何日」。乃得矣。\\n是謂「今日何日」之術也。\\n\\n注曰「「今日何干支。同Javascript之Get index (1 to 60) of today in the 60-day cycle也。」」\\n今有一術。名之曰「今日何干支」。是術曰。\\n\\t注曰「「甲子得一。乙丑得二。乃至癸亥得六十也。」」\\n\\t施「紀元時」。取一以施「彼日何干支」。乃得矣。\\n是謂「今日何干支」之術也。\\n\\n注曰「「今日積何日。同Javascript之Get continuously counting day number of today也。」」\\n今有一術。名之曰「今日積何日」。是術曰。\\n\\t注曰「「米制公約訂立日積一百六十六萬九千九百九十九日。」」\\n\\t注曰「「紀元日積一百七十〇萬四千五百五十八日。」」\\n\\t施「紀元時」。取一以施「彼日積何日」。乃得矣。\\n是謂「今日積何日」之術也。\\n\\n注曰「「今時何時。同Javascript之Get index (1 to 12) of current time in the 12 divisions of day也。」」\\n今有一術。名之曰「今時何時」。是術曰。\\n\\t注曰「「時者。子丑寅卯辰巳午未申酉戌亥。」」\\n\\t注曰「「子時得一。丑時得二。乃至亥時得十二也。」」\\n\\t施「紀元時」。取一以施「彼時何時」。乃得矣。\\n是謂「今時何時」之術也。\\n\\n注曰「「今時何小時。同Javascript之new Date().getHours()也。」」\\n今有一術。名之曰「今時何小時」。是術曰。\\n\\t注曰「「小時者。子丑寅卯辰巳午未申酉戌亥。各分初正。」」\\n\\t注曰「「子正得〇。丑初得一。乃至子初得二十三也。」」\\n\\t施「紀元時」。取一以施「彼時何小時」。乃得矣。\\n是謂「今時何小時」之術也。\\n\\n注曰「「今刻何刻。同Javascript之Math.floor(new Date().getMinutes() / 15)也。」」\\n今有一術。名之曰「今刻何刻」。是術曰。\\n\\t注曰「「說文解字曰。晝夜百刻。後世改為九十六、百八、百二十刻。未知孰為可法。」」\\n\\t注曰「「初刻得〇。一刻得一。二刻得二。三刻得三。古法四刻得四。」」\\n\\t施「紀元時」。取一以施「彼刻何刻」。乃得矣。\\n是謂「今刻何刻」之術也。\\n\\n注曰「「今分何分。同Javascript之new Date().getMinutes() % 15也。」」\\n今有一術。名之曰「今分何分」。是術曰。\\n\\t施「紀元時」。取一以施「彼分何分」。乃得矣。\\n是謂「今分何分」之術也。\\n\\n注曰「「今秒何秒。同Javascript之new Date().getSeconds()也。」」\\n今有一術。名之曰「今秒何秒」。是術曰。\\n\\t施「紀元時」。取一以施「彼秒何秒」。乃得矣。\\n是謂「今秒何秒」之術也。\\n\\n注曰「「既知某一紀元時。乃得其年月日時刻。故謂之彼。」」\\n\\n吾有一列。名之曰「天干」。充「天干」。\\n\\t以「「甲」」以「「乙」」以「「丙」」以「「丁」」以「「戊」」。\\n\\t以「「己」」以「「庚」」以「「辛」」以「「壬」」以「「癸」」。\\n吾有一列。名之曰「地支」。充「地支」。\\n\\t以「「子」」以「「丑」」以「「寅」」以「「卯」」以「「辰」」以「「巳」」。\\n\\t以「「午」」以「「未」」以「「申」」以「「酉」」以「「戌」」以「「亥」」。\\n吾有一列。名之曰「數字」。充「數字」。\\n\\t以「「〇」」以「「一」」以「「二」」以「「三」」以「「四」」。\\n\\t以「「五」」以「「六」」以「「七」」以「「八」」以「「九」」。\\n\\n吾有一術。名之曰「言序數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t夫「甲」。夫十。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。名之曰「數」。\\n\\t恆為是。\\n\\t\\t夫「乙」之「「商」」。夫十。取二以施「取底除」。昔之「乙」者。今其是矣。\\n\\t\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。加其以「數」。昔之「數」者。今其是矣。\\n\\t\\t若「乙」之「「商」」等於零者。\\n\\t\\t\\t乃得「數」也。\\n\\t云云。\\n是謂「言序數」之術也。\\n\\n吾有一術。名之曰「言百內數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t夫「甲」。夫十。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。若其等於零者。\\n\\t\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。乃得矣。云云。\\n\\t吾有一言。名之曰「數」。\\n\\t夫「乙」之「「商」」。若其等於一者。\\n\\t\\t昔之「數」者。今「「十」」是矣。\\n\\t若非\\n\\t\\t夫「乙」之「「商」」。加其以一。夫「數字」之其。加其以「「十」」。昔之「數」者。今其是矣。云云。\\n\\t夫「乙」之「「餘」」。若其大於零者。\\n\\t\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。加「數」以其。昔之「數」者。今其是矣。云云。\\n\\t乃得「數」。\\n是謂「言百內數」之術也。\\n\\n吾有一術。名之曰「言年月日」。欲行是術。必先得一數。曰「積日」。乃行是術曰。\\n\\t夫「積日」。取一以施「日積何月」。名之曰「積月」。\\n\\t夫「積月」。取一以施「月積何閏月」。名之曰「積閏月」。\\n\\t減「積月」以「積閏月」。除其以十二。取一以施「取底」。名之曰「積年」。\\n\\t有言「「西元」」。名之曰「年號」。\\n\\t減「積年」以二六九七。名之曰「年」。\\n\\t減「積月」以「積閏月」。除其以十二。所餘幾何。加其於一。名之曰「月」。\\n\\t有爻陰。名之曰「閏」。\\n\\t夫「積閏月」。取一以施「閏月積何月」。若其等於「積月」者。\\n\\t\\t昔之「閏」者。今陽是矣。云云。\\n\\t夫「積月」。取一以施「月積何日」。減其於「積日」。加其以一。名之曰「日」。\\n\\n\\t有言「年號」。名之曰「年月日」。\\n\\t若「年」不大於零者。\\n\\t\\t加「年號」以「「前」」。昔之「年月日」者。今其是矣。\\n\\t\\t減「年」於一。昔之「年」者。今其是矣。\\n\\t云云。\\n\\t若「年」不大於一百者。\\n\\t\\t夫「年」。取一以施「言百內數」。加其以「「年」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t若非。\\n\\t\\t夫「年」。取一以施「言序數」。加其以「「年」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t云云。\\n\\t減一於「積年」。除其以十。所餘幾何。加其以一。夫「天干」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t減一於「積年」。除其以十二。所餘幾何。加其以一。夫「地支」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t加「年月日」以「「年」」。昔之「年月日」者。今其是矣。\\n\\n\\t若「閏」者。\\n\\t\\t加「年月日」以「「閏」」。昔之「年月日」者。今其是矣。云云。\\n\\t若「月」等於一者。\\n\\t\\t加「年月日」以「「正月」」。昔之「年月日」者。今其是矣。\\n\\t若非。\\n\\t\\t夫「月」。取一以施「言百內數」。加其以「「月」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t云云。\\n\\n\\t若「日」不大於十者。\\n\\t\\t加「年月日」以「「初」」。昔之「年月日」者。今其是矣。云云。\\n\\t夫「日」。取一以施「言百內數」。加其以「「日」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t減一於「積日」。除其以十。所餘幾何。加其以一。夫「天干」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t減一於「積日」。除其以十二。所餘幾何。加其以一。夫「地支」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t加「年月日」以「「日」」。昔之「年月日」者。今其是矣。\\n\\t乃得「年月日」。\\n是謂「言年月日」之術也。\\n\\n吾有一術。名之曰「言時刻」。欲行是術。必先得一數。曰「日內秒」。乃行是術曰。\\n\\t夫「日內秒」。夫三千六百。取二以施「取底除」。名之曰「甲」。\\n\\t夫「甲」之「「商」」。除其以二。取一以施「取頂」。加其以一。名之曰「乙」。\\n\\t若「乙」大於十二者。\\n\\t\\t減十二於「乙」。昔之「乙」者。今其是矣。云云。\\n\\t夫「地支」之「乙」。名之曰「時刻」。\\n\\n\\t夫「甲」之「「商」」。除其以二。所餘幾何。若其等於零者。\\n\\t\\t加「時刻」以「「正」」。昔之「時刻」者。今其是矣。\\n\\t若非。\\n\\t\\t加「時刻」以「「初」」。昔之「時刻」者。今其是矣。云云。\\n\\n\\t夫「甲」之「「餘」」。夫九百。取二以施「取底除」。名之曰「丙」。\\n\\t夫「丙」之「「商」」。若其等於零者。\\n\\t\\t加「時刻」以「「初刻」」。昔之「時刻」者。今其是矣。\\n\\t若非。\\n\\t\\t夫「丙」之「「商」」。取一以施「言百內數」。加其以「「刻」」。\\n\\t\\t加「時刻」以其。昔之「時刻」者。今其是矣。\\n\\t云云。\\n\\n\\t夫「丙」之「「餘」」。夫六十。取二以施「取底除」。名之曰「丁」。\\n\\t夫「丁」之「「商」」。若其等於零者。\\n\\t\\t夫「丁」之「「餘」」。若其大於零者。\\n\\t\\t\\t加「時刻」以「「零」」。昔之「時刻」者。今其是矣。云云。\\n\\t若非。\\n\\t\\t夫「丁」之「「商」」。取一以施「言百內數」。加其以「「分」」。\\n\\t\\t加「時刻」以其。昔之「時刻」者。今其是矣。\\n\\t云云。\\n\\n\\t夫「丁」之「「餘」」。若其大於零者。\\n\\t\\t夫「丁」之「「餘」」。取一以施「言百內數」。加其以「「秒」」。\\n\\t\\t加「時刻」以其。昔之「時刻」者。今其是矣。\\n\\t云云。\\n\\t乃得「時刻」。\\n是謂「言時刻」之術也。\\n\\n注曰「「言彼之日時。同Javascript之new Date(x * 1000).toString(), in Chinese calendar也。」」\\n今有一術。名之曰「言彼之日時」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。加其以一七〇四五五八。取一以施「言年月日」。名之曰「年月日」。\\n\\t夫「乙」之「「餘」」。取一以施「取底」。取一以施「言時刻」。名之曰「時刻」。\\n\\t加「年月日」以「時刻」。乃得矣。\\n是謂「言彼之日時」之術也。\\n\\n注曰「「言彼之年月日。同Javascript之new Date(x * 1000).toDateString(), in Chinese calendar也。」」\\n今有一術。名之曰「言彼之年月日」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。加其以一七〇四五五八。取一以施「言年月日」。乃得矣。\\n是謂「言彼之年月日」之術也。\\n\\n注曰「「言彼之時刻。同Javascript之new Date(x * 1000).toTimeString(), in Chinese calendar也。」」\\n今有一術。名之曰「言彼之時刻」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「餘」」。取一以施「取底」。取一以施「言時刻」。乃得矣。\\n是謂「言彼之時刻」之術也。\\n\\n注曰「「彼年何年號。同Javascript之\\\"西元\\\" for modern dates也。」」\\n今有一術。名之曰「彼年何年號」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t乃得「「西元」」。\\n是謂「彼年何年號」之術也。\\n\\n注曰「「彼年何年。同Javascript之new Date(x * 1000).getFullYear() for modern dates, in Chinese calendar也。」」\\n今有一術。名之曰「彼年何年」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼年積何年」於「時」。減其以二六九七。乃得矣。\\n是謂「彼年何年」之術也。\\n\\n注曰「「彼年何干支。同Javascript之Get index (1 to 60) in the 60-year cycle也。」」\\n今有一術。名之曰「彼年何干支」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼年積何年」於「時」。減其以一。夫六十。取二以施「取底除」。\\n\\t夫其之「「餘」」。加其以一。乃得矣。\\n是謂「彼年何干支」之術也。\\n\\n注曰「「彼年積何年。同Javascript之new Date(x * 1000).getFullYear() + 2697, in Chinese calendar也。」」\\n今有一術。名之曰「彼年積何年」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼月積何月」於「時」。名之曰「積月」。\\n\\t夫「積月」。取一以施「月積何閏月」。名之曰「積閏月」。\\n\\t減「積月」以「積閏月」。除其以十二。取一以施「取底」。乃得矣。\\n是謂「彼年積何年」之術也。\\n\\n注曰「「彼月何月。同Javascript之new Date(x * 1000).getMonth() + 1, N + 0.5 for leap months, in Chinese calendar也。」」\\n今有一術。名之曰「彼月何月」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼月積何月」於「時」。名之曰「積月」。\\n\\t夫「積月」。取一以施「月積何閏月」。名之曰「積閏月」。\\n\\t減「積月」以「積閏月」。除其以十二。所餘幾何。加其於一。名之曰「月」。\\n\\t夫「積閏月」。取一以施「閏月積何月」。若其等於「積月」者。\\n\\t\\t加五分於「月」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「月」也。\\n是謂「彼月何月」之術也。\\n\\n注曰「「彼月積何月。同Javascript之Get continuously counting month number也。」」\\n今有一術。名之曰「彼月積何月」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼日積何日」於「時」。取一以施「日積何月」。乃得矣。\\n是謂「彼月積何月」之術也。\\n\\n注曰「「彼日何日。同Javascript之new Date(x * 1000).getDate(), in Chinese calendar也。」」\\n今有一術。名之曰「彼日何日」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼日積何日」於「時」。名之曰「積日」。\\n\\t夫「積日」。取一以施「日積何月」。取一以施「月積何日」。減其於「積日」。加其以一。乃得矣。\\n是謂「彼日何日」之術也。\\n\\n注曰「「彼日何干支。同Javascript之Get index (1 to 60) in the 60-day cycle也。」」\\n今有一術。名之曰「彼日何干支」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼日積何日」於「時」。減其以一。夫六十。取二以施「取底除」。\\n\\t夫其之「「餘」」。加其以一。乃得矣。\\n是謂「彼日何干支」之術也。\\n\\n注曰「「彼日積何日。同Javascript之Get continuously counting day number也。」」\\n今有一術。名之曰「彼日積何日」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。\\n\\t夫其之「「商」」。加其以一七〇四五五八。乃得矣。\\n是謂「彼日積何日」之術也。\\n\\n注曰「「彼時何時。同Javascript之Get index (1 to 12) in the 12 divisions of day也。」」\\n今有一術。名之曰「彼時何時」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼時何小時」於「時」。除其以二。取一以施「取頂」。加其以一。名之曰「甲」。\\n\\t若「甲」大於十二者。\\n\\t\\t減十二於「甲」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「彼時何時」之術也。\\n\\n注曰「「彼時何小時。同Javascript之new Date(x * 1000).getHours()也。」」\\n今有一術。名之曰「彼時何小時」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。\\n\\t夫其之「「餘」」。夫三千六百。取二以施「取底除」。\\n\\t夫其之「「商」」。乃得矣。\\n是謂「彼時何小時」之術也。\\n\\n注曰「「彼刻何刻。同Javascript之Math.floor(new Date(x * 1000).getMinutes() / 15)也。」」\\n今有一術。名之曰「彼刻何刻」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫三千六百。取二以施「取底除」。\\n\\t夫其之「「餘」」。夫九百。取二以施「取底除」。\\n\\t夫其之「「商」」。乃得矣。\\n是謂「彼刻何刻」之術也。\\n\\n注曰「「彼分何分。同Javascript之new Date(x * 1000).getMinutes() % 15也。」」\\n今有一術。名之曰「彼分何分」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫九百。取二以施「取底除」。\\n\\t夫其之「「餘」」。夫六十。取二以施「取底除」。\\n\\t夫其之「「商」」。乃得矣。\\n是謂「彼分何分」之術也。\\n\\n注曰「「彼秒何秒。同Javascript之new Date(x * 1000).getSeconds()也。」」\\n今有一術。名之曰「彼秒何秒」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫六十。取二以施「取底除」。\\n\\t夫其之「「餘」」。取一以施「取底」。乃得矣。\\n是謂「彼秒何秒」之術也。\\n\\n吾有一術。名之曰「月積何日」。欲行是術。必先得一數。曰「積月」。乃行是術曰。\\n\\t減「積月」以「始曆月」。加其以一。名之曰「引」。\\n\\t若「引」小於一者。\\n\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t夫「曆月表」之長。若「引」大於其者。\\n\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t夫「曆月表」之「引」。名之曰「校」。\\n\\t乘「積月」以二五一〇一。除其以八五〇。減其以一。取一以施「取頂」。加其以「校」。乃得矣。\\n是謂「月積何日」之術也。\\n\\n吾有一術。名之曰「日積何月」。欲行是術。必先得一數。曰「積日」。乃行是術曰。\\n\\t加「積日」以一。乘其以八五〇。除其以二五一〇一。取一以施「取整」。名之曰「積月」。\\n\\t施「月積何日」於「積月」。名之曰「初日」。\\n\\t若「積日」小於「初日」者。\\n\\t\\t減一於「積月」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「積月」也。\\n是謂「日積何月」之術也。\\n\\n吾有一術。名之曰「閏月積何月」。欲行是術。必先得一數。曰「積閏月」。乃行是術曰。\\n\\t減「積閏月」以「始閏月」。加其以一。名之曰「引」。\\n\\t若「引」小於一者。\\n\\t\\t若「引」等於零者。\\n\\t\\t\\t乃得負一京。\\n\\t\\t若非。\\n\\t\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t云云。\\n\\t夫「閏月表」之長。若「引」大於其者。\\n\\t\\t夫「閏月表」之長。加其以一。若「引」等於其者。\\n\\t\\t\\t乃得一京。\\n\\t\\t若非。\\n\\t\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t云云。\\n\\t夫「閏月表」之「引」。名之曰「校」。\\n\\t乘「積閏月」以三一五七。除其以九四。減其以二七。取一以施「取頂」。加其以「校」。乃得矣。\\n是謂「閏月積何月」之術也。\\n\\n吾有一術。名之曰「月積何閏月」。欲行是術。必先得一數。曰「積月」。乃行是術曰。\\n\\t加「積月」以二七。乘其以九四。除其以三一五七。取一以施「取整」。名之曰「積閏月」。\\n\\t施「閏月積何月」於「積閏月」。名之曰「閏月」。\\n\\t若「積月」小於「閏月」者。\\n\\t\\t減一於「積閏月」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「積閏月」也。\\n是謂「月積何閏月」之術也。\\n\";","export default \"注曰「「此文程式之作文也。勿施以修訂。」」\\n注曰「「程式書於文 tools/make_calendar.js 」」\\n\\n今有一數。曰五七一〇五。名之曰「始曆月」。\\n今有一列。名之曰「曆月表」。\\n今有一數。曰一七〇一。名之曰「始閏月」。\\n今有一列。名之曰「閏月表」。\\n\\n充「曆月表」。\\n\\t以一以一以一以一以〇以一以〇以〇以〇以負一以〇以〇以一以一以一。\\n\\t以一以一以〇以一以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇。\\n\\t以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一。\\n\\t以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以負一以〇以〇以一以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一。\\n\\t以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以二以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇。\\n\\t以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以二以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇。\\n\\t以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以〇以〇以一。\\n\\t以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一。\\n\\t以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇。\\n\\t以一以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以〇以〇以一以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以一以〇以〇以一以〇以一以一以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以一以〇。\\n\\t以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以負一以〇以〇以〇以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以一以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一。\\n\\t以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以一以一以一以〇以一以〇以負一以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一。\\n\\t以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇。\\n\\t以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以〇以一。\\n\\t以一以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以一以一以〇以一以〇。\\n\\t以一以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以一以〇以〇。\\n\\t以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇。\\n\\t以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一。\\n\\t以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以一以〇。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以一以二以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一。\\n\\t以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一。\\n\\t以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以〇。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一。\\n\\t以一以一以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一。\\n\\t以一以〇以〇以〇以負一以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以一以〇以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以〇以〇以一以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇。\\n\\t以一以〇以一以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇。\\n\\t以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以〇以一以一以一。\\n\\t以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以一以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以一以〇以一以〇以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以一以一以一以一以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一。\\n\\t以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以一以〇以一以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以〇以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以〇。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇。\\n\\t以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以一以〇以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以〇以一以〇以一以〇以〇。\\n\\t以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以一。\\n\\t以一以一以〇以一以〇以一以〇以一以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇。\\n\\t以〇以一以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以一以〇以一以一以一以一。\\n\\t以一以〇以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以一。\\n\\t以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以〇以一以〇以一以〇以〇以〇以一以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇。\\n\\t以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一。\\n\\t以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以一以〇以一以一以一以一以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一。\\n\\t以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇。\\n\\t以一以〇以一以〇以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以一以一以一以〇以一以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以〇以一以〇以一以一以一。\\n\\t以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇。\\n\\t以一以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以〇以一以一。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以〇以〇以〇以一以〇以一以〇以一。\\n\\n充「閏月表」。\\n\\t以負三以負一以一以二以負二以〇以二以負三以〇以一以二以負一以〇以二以負二以負一以一以三以負一。\\n\\t以〇以三以負二以負一以一以負二以負二以〇以一以負二以負二以一以二以負一以〇以二以負一以負一以一以二。\\n\\t以負三以〇以一以一以負一以一以二以負二以〇以一以負二以負一以〇以三以負二以〇以二以負三以負一以〇。\\n\\t以三以負二以〇以二以負三以負一以〇以二以負二以負一以二以負二以負一以〇以三以負二。\\n\";","export default \"吾嘗觀「「格物」」之書。方悟「取物」「置物」「列物之端」「識類」之義。\\n\\n吾有一言。曰「「「」」」。名之曰「引號」。\\n夫「引號」之一。名之曰「引起」。\\n夫「引號」之二。名之曰「引迄」。\\n吾有一列。名之曰「位名」。充「位名」\\n以「「〇」」以「「一」」以「「二」」以「「三」」以「「四」」\\n以「「五」」以「「六」」以「「七」」以「「八」」以「「九」」。\\n\\n吾有一術。名之曰「斬渾沌」。欲行是術。必先得一言。曰「渾沌語」。乃行是術曰。\\n\\t吾有一列。名之曰「諸咒」。充「諸咒」以「「物」」以「「言」」以「「數」」以「「爻」」以「「列」」以「「之」」以「「也」」。\\n\\t吾有一列。名之曰「渾沌碎」。\\n\\t有數一。名之曰「讀」。\\n\\t有數零。名之曰「層」。\\n\\t吾有一言。名之曰「辭」。\\n\\n\\t恆為是。若「讀」大於「渾沌語」之長者乃止也。\\n\\t\\t若「渾沌語」之「讀」等於「引起」者。\\n\\t\\t\\t若「層」不等於零者。\\n\\t\\t\\t\\t夫「渾沌語」之「讀」。加其於「辭」。昔之「辭」者。今其是矣。\\n\\t\\t\\t云云。\\n\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t或若「渾沌語」之「讀」等於「引迄」者。\\n\\t\\t\\t減「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t若「層」等於零者。\\n\\t\\t\\t\\t充「渾沌碎」以「辭」。\\n\\t\\t\\t\\t昔之「辭」者。今「「」」是矣。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t夫「渾沌語」之「讀」。加其於「辭」。昔之「辭」者。今其是矣。\\n\\t\\t\\t云云。\\n\\t\\t或若「層」大於零者。\\n\\t\\t\\t夫「渾沌語」之「讀」。加其於「辭」。昔之「辭」者。今其是矣。\\n\\t\\t若非。\\n\\t\\t\\t凡「諸咒」中之「咒」。\\n\\t\\t\\t\\t若「渾沌語」之「讀」等於「咒」者\\n\\t\\t\\t\\t\\t充「渾沌碎」以「咒」。\\n\\t\\t\\t\\t乃止也。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t加一以「讀」。昔之「讀」者。今其是矣云云。\\n\\t乃得「渾沌碎」。\\n是謂「斬渾沌」之術也。\\n\\n吾有一術。名之曰「食數」。欲行是術。必先得一言。曰「數名」。乃行是術曰。\\n\\t吾有一數。曰一。名之曰「正負」。\\n\\t夫「數名」之一。若其等於「「負」」者。\\n\\t\\t夫「數名」之其餘。昔之「數名」者。今其是矣。\\n\\t\\t昔之「正負」者。今負一是矣。\\n\\t云云。\\n\\t吾有二數。名之曰「整」曰「小」。\\n\\t吾有二數。曰一曰一。名之曰「讀」曰「小長」。\\n\\t有爻陰。名之曰「小耶」。\\n\\t恆為是。若「讀」大於「數名」之長者乃止也。\\n\\t\\t若「讀」等於「「·」」者\\n\\t\\t\\t昔之「小耶」者。今陽是矣。\\n\\t\\t若非。\\n\\t\\t\\t有數一。名之曰「位」\\n\\t\\t\\t恆為是。若「位」大於「位名」之長者乃止也。\\n\\t\\t\\t\\t若「位名」之「位」等於「數名」之「讀」者乃止也。\\n\\t\\t\\t加一以「位」。昔之「位」者。今其是矣云云。\\n\\t\\t\\t減「位」以一。昔之「位」者。今其是矣。\\n\\n\\t\\t\\t若「小耶」者。\\n\\t\\t\\t\\t乘「小」以十。加其以「位」。昔之「小」者。今其是矣。\\n\\t\\t\\t\\t加「小長」以一。昔之「小長」者。今其是矣。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t乘「整」以十。加其以「位」。昔之「整」者。今其是矣。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t加一以「讀」。昔之「讀」者。今其是矣云云。\\n\\t為是「小長」遍。乘「小」以零又一分。昔之「小」者。今其是矣。云云。\\n\\t加「整」以「小」。乘其以「正負」。乃得矣。\\n是謂「食數」之術也。\\n\\n吾有一術名之曰「食列」。欲行是術。必先得一列。曰「渾沌碎」。乃行是術曰。\\n\\t吾有一列。名之曰「渾沌列」。\\n\\t有數一。名之曰「讀」。\\n\\t恆為是。若「讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t夫「渾沌碎」之「讀」。名之曰「類」\\n\\t\\t若「類」等於「「數」」者。\\n\\t\\t\\t加「讀」以一。夫「渾沌碎」之其。取一以施「食數」。充「渾沌列」以其。\\n\\t\\t\\t加「讀」以二。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「言」」者。\\n\\t\\t\\t加「讀」以一。夫「渾沌碎」之其。充「渾沌列」以其。\\n\\t\\t\\t加「讀」以二。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「爻」」者。\\n\\t\\t\\t加「讀」以一。夫「渾沌碎」之其。\\n\\t\\t\\t若其等於「「陰」」者。充「渾沌列」以陰。\\n\\t\\t\\t若非。充「渾沌列」以陽也。\\n\\t\\t\\t加「讀」以二。昔之「讀」者。今其是矣。\\n\\t\\t若非\\n\\t\\t\\t吾有一數。名之曰「層」。\\n\\t\\t\\t加「讀」以一。名之曰「次讀」。\\n\\t\\t\\t吾有一列。名之曰「句」。\\n\\t\\t\\t恆為是。若「次讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t\\t\\t若「渾沌碎」之「次讀」等於「「物」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「列」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「也」」者。\\n\\t\\t\\t\\t\\t若「層」等於零者。\\n\\t\\t\\t\\t\\t\\t若「類」等於「「物」」者。\\n\\t\\t\\t\\t\\t\\t\\t施「食物」於「句」。充「渾沌列」以其。\\n\\t\\t\\t\\t\\t\\t若非。\\n\\t\\t\\t\\t\\t\\t\\t施「食列」於「句」。充「渾沌列」以其。\\n\\t\\t\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t\\t乃止也。\\n\\t\\t\\t\\t\\t減「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t夫「渾沌碎」之「次讀」。充「句」以其。\\n\\t\\t\\t加「次讀」以一。昔之「次讀」者。今其是矣云云。\\n\\t\\t\\t加「次讀」以一。昔之「讀」者。今其是矣\\n\\t\\t云云。\\n\\t云云。\\n\\t乃得「渾沌列」。\\n是謂「食列」之術也。\\n\\n吾有一術名之曰「食物」。欲行是術。必先得一列。曰「渾沌碎」。乃行是術曰。\\n\\t吾有一物。名之曰「渾沌物」。\\n\\t有數二。名之曰「讀」。\\n\\t恆為是。若「讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t夫「渾沌碎」之「讀」。名之曰「端」。\\n\\t\\t加「讀」以一。夫「渾沌碎」之其。名之曰「類」。\\n\\n\\t\\t若「類」等於「「數」」者。\\n\\t\\t\\t加「讀」以二。夫「渾沌碎」之其。取一以施「食數」。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t加「讀」以四。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「言」」者。\\n\\t\\t\\t加「讀」以二。夫「渾沌碎」之其。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t加「讀」以四。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「爻」」者。\\n\\t\\t\\t加「讀」以二。夫「渾沌碎」之其。\\n\\t\\t\\t若其等於「「陰」」者。施「置物」於「渾沌物」於「端」於陰。\\n\\t\\t\\t若非。施「置物」於「渾沌物」於「端」於陽也。\\n\\t\\t\\t加「讀」以四。昔之「讀」者。今其是矣。\\n\\t\\t若非\\n\\t\\t\\t吾有一數。名之曰「層」。\\n\\t\\t\\t加「讀」以二。名之曰「次讀」。\\n\\t\\t\\t吾有一列。名之曰「句」。\\n\\t\\t\\t恆為是。若「次讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t\\t\\t若「渾沌碎」之「次讀」等於「「物」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「列」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「也」」者。\\n\\t\\t\\t\\t\\t若「層」等於零者。\\n\\t\\t\\t\\t\\t\\t若「類」等於「「物」」者。\\n\\t\\t\\t\\t\\t\\t\\t施「食物」於「句」。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t\\t\\t\\t若非。\\n\\t\\t\\t\\t\\t\\t\\t施「食列」於「句」。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t\\t乃止也。\\n\\t\\t\\t\\t\\t減「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t夫「渾沌碎」之「次讀」。充「句」以其。\\n\\t\\t\\t加「次讀」以一。昔之「次讀」者。今其是矣云云。\\n\\t\\t\\t加「次讀」以二。昔之「讀」者。今其是矣\\n\\t\\t云云。\\n\\t云云。\\n\\t乃得「渾沌物」。\\n是謂「食物」之術也。\\n\\n今有一術。名之曰「食渾沌」。欲行是術。必先得一言。曰「渾沌語」。乃行是術曰。\\n\\t施「斬渾沌」於「渾沌語」。名之曰「渾沌碎」。\\n\\t夫「渾沌碎」之其餘。取一以施「食物」。乃得矣。\\n是謂「食渾沌」之術也。\\n\\n今有一術。名之曰「食諸渾沌」。欲行是術。必先得一言。曰「渾沌語」。乃行是術曰。\\n\\t施「斬渾沌」於「渾沌語」。名之曰「渾沌碎」。\\n\\t夫「渾沌碎」之其餘。取一以施「食列」。乃得矣。\\n是謂「食諸渾沌」之術也。\\n\\n\\n吾有一言。曰「「　」」名之曰「挪符」。\\n吾有一言。曰「「\\\\n」」名之曰「抬符」。\\n吾有一術。名之曰「包數」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t吾有一言。名之曰「正負」。\\n\\t若「甲」小於零者。\\n\\t\\t乘「甲」以負一。昔之「甲」者。今其是矣。\\n\\t\\t昔之「正負」者。今「「負」」是矣。\\n\\t云云。\\n\\t除「甲」以一。所餘幾何。名之曰「小數」\\n\\t減「小數」於「甲」。名之曰「整數」。\\n\\t吾有二言。名之曰「小」曰「整」。\\n\\t恆為是。若「整數」不大於零者乃止也。\\n\\t\\t除「整數」以十。所餘幾何。名之曰「位」。\\n\\t\\t加「位」以一。夫「位名」之其。加其以「整」。昔之「整」者。今其是矣。\\n\\t\\t減「整數」以「位」。除其以十。昔之「整數」者。今其是矣。\\n\\t云云。\\n\\t恆為是。若「小數」不大於零者乃止也。\\n\\t\\t乘「小數」以十。昔之「小數」者。今其是矣。\\n\\t\\t除「小數」以一。所餘幾何。名之曰「位」。\\n\\t\\t加「位」以一。夫「位名」之其。加其於「小」。昔之「小」者。今其是矣。\\n\\t\\t減「小數」以「位」。昔之「小數」者。今其是矣。\\n\\t云云。\\n\\t加「正負」以「整」。昔之「整」者。今其是矣。\\n\\t夫「小」之長。若其然者。\\n\\t\\t加「整」以「「·」」。加其以「小」。乃得矣。\\n\\t云云。\\n\\t乃得「整」。\\n是謂「包數」之術也。\\n\\n吾有一術。名之曰「暗包渾沌」。欲行是術。必先得一言曰「類」。一元曰「實」。一數曰「挪抬」。乃行是術曰。\\n\\t吾有一言。名之曰「渾沌語」。\\n\\t若「類」等於「「物」」者。\\n\\t\\t加「渾沌語」以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t\\t夫「實」。加「挪抬」以一。取二以施「包物」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「「也」」加其以「抬符」。昔之「渾沌語」者。今其是矣。\\n\\n\\t或若「類」等於「「列」」者。\\n\\t\\t加「渾沌語」以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t\\t夫「實」。加「挪抬」以一。取二以施「包列」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「「也」」加其以「抬符」。昔之「渾沌語」者。今其是矣。\\n\\n\\t或若「類」等於「「言」」者。\\n\\t\\t加「渾沌語」以「引起」加其以「實」加其以「引迄」。加其以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t或若「類」等於「「爻」」者。\\n\\t\\t吾有一言。曰「「陽」」。名之曰「爻名」\\n\\t\\t夫「實」。若其不然者。昔之「爻名」者。今「「陰」」是矣也。\\n\\t\\t加「渾沌語」以「引起」加其以「爻名」加其以「引迄」。加其以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t或若「類」等於「「數」」者。\\n\\t\\t施「包數」於「實」。名之曰「數名」。\\n\\t\\t加「渾沌語」以「引起」加其以「數名」加其以「引迄」。加其以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t云云。\\n\\t乃得「渾沌語」\\n是謂「暗包渾沌」之術也。\\n\\n吾有一術。名之曰「包列」。欲行是術。必先得一列曰「渾沌列」。一數曰「挪抬」。乃行是術曰。\\n\\t吾有一言。名之曰「渾沌語」。\\n\\t凡「渾沌列」中之「實」\\n\\t\\t施「識類」於「實」。名之曰「類」。\\n\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「類」。\\n\\t\\t昔之「渾沌語」者。今其是矣。\\n\\n\\t\\t施「暗包渾沌」於「類」於「實」於「挪抬」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t云云。\\n\\t乃得「渾沌語」\\n是謂「包列」之術也。\\n\\n吾有一術。名之曰「包物」。欲行是術。必先得一物曰「渾沌物」。一數曰「挪抬」。乃行是術曰。\\n\\n\\t吾有一言。名之曰「渾沌語」。\\n\\n\\t施「列物之端」於「渾沌物」。名之曰「諸端」。\\n\\n\\t凡「諸端」中之「端」\\n\\t\\t施「取物」於「渾沌物」於「端」。名之曰「實」。\\n\\t\\t施「識類」於「實」。名之曰「類」。\\n\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「「之」」。加其以「引起」。加其以「端」。加其以「引迄」。加其以「類」。\\n\\t\\t昔之「渾沌語」者。今其是矣。\\n\\n\\t\\t施「暗包渾沌」於「類」於「實」於「挪抬」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t云云。\\n\\t乃得「渾沌語」\\n是謂「包物」之術也。\\n\\n\\n今有一術。名之曰「包渾沌」。欲行是術。必先得一物。曰「渾沌物」。乃行是術曰。\\n\\t施「包物」於「渾沌物」於一。名之曰「餛飩語」。\\n\\t加「抬符」以「餛飩語」。加其於「「物」」。加其以「「也」」。乃得矣。\\n是謂「包渾沌」之術也。\\n\\n\\n今有一術。名之曰「包諸渾沌」。欲行是術。必先得一列。曰「渾沌列」。乃行是術曰。\\n\\t施「包列」於「渾沌列」於一。名之曰「餛飩語」。\\n\\t加「抬符」以「餛飩語」。加其於「「列」」。加其以「「也」」。乃得矣。\\n是謂「包諸渾沌」之術也。\\n\\n\";","export default \"吾有二數。曰一。曰一。名之曰「進制」。曰「退制」。\\n吾有三數。曰零。曰一。曰一。名之曰「總算位」。曰「上位冪」。曰「下位冪」。\\n吾有三數。曰零。曰一。曰一。名之曰「至大指」。曰「巨位冪」。曰「至巨數」。\\n吾有三數。曰零。曰一。曰一。名之曰「至小指」。曰「微位冪」。曰「至微數」。\\n吾有一數。曰一。名之曰「位極差」。\\n吾有二數。曰零。曰一。名之曰「浮點零」。曰「浮點一」。\\n\\n吾有一術。名之曰「試界」。欲行是術。必先得三數。曰「限」。曰「元」。曰「基」。二術。曰「合」。曰「據」。乃行是術曰。\\n\\t吾有一術。名之曰「造表列」。欲行是術。必先得二數。曰「引」。曰「實」。乃行是術曰。\\n\\t\\t吾有一物。名之曰「表列」。其物如是。\\n\\t\\t\\t物之「「引」」者。數曰「引」。\\n\\t\\t\\t物之「「實」」者。數曰「實」。\\n\\t\\t是謂「表列」之物也。\\n\\t\\t乃得「表列」。\\n\\t是謂「造表列」之術也。\\n\\t吾有一術。名之曰「新據」。欲行是術。必先得二數。曰「引」。曰「實」。乃行是術曰。\\n\\t\\t若「引」不小於「限」者。乃得陽也。\\n\\t\\t施「據」於「實」。若其然者。乃得陽也。\\n\\t\\t乃得陰。\\n\\t是謂「新據」之術也。\\n\\n\\t施「新據」於零。於「元」。若其然者。夫零。夫「元」。取二以施「造表列」。乃得矣。云云。\\n\\t施「新據」於一。於「基」。若其然者。夫一。夫「基」。取二以施「造表列」。乃得矣。云云。\\n\\t吾有二數。曰一。曰「基」。名之曰「引」。曰「實」。\\n\\t吾有一列。名之曰「記表列」。\\n\\t恆為是。\\n\\t\\t加「引」於「引」。名之曰「新引」。\\n\\t\\t夫「實」。夫「實」。取二以施「合」。名之曰「新實」。\\n\\t\\t施「新據」於「新引」。於「新實」。若其然者。乃止也。\\n\\t\\t夫「引」。夫「實」。取二以施「造表列」。充「記表列」以其。\\n\\t\\t昔之「引」者。今「新引」是矣。\\n\\t\\t昔之「實」者。今「新實」是矣。\\n\\t云云。\\n\\t夫「記表列」之長。名之曰「甲」。\\n\\t恆為是。\\n\\t\\t若「甲」等於零者。乃止也。\\n\\t\\t夫「記表列」之「甲」。名之曰「表列」。\\n\\t\\t夫「表列」之「「引」」。加其於「引」。名之曰「新引」。\\n\\t\\t夫「表列」之「「實」」。夫「實」。取二以施「合」。名之曰「新實」。\\n\\t\\t施「新據」於「新引」。於「新實」。若其不然者。\\n\\t\\t\\t昔之「引」者。今「新引」是矣。\\n\\t\\t\\t昔之「實」者。今「新實」是矣。\\n\\t\\t云云。\\n\\t\\t減一於「甲」。昔之「甲」者。今其是矣。\\n\\t云云。\\n\\t加一於「引」。夫「基」。夫「實」。取二以施「合」。取二以施「造表列」。乃得矣。\\n是謂「試界」之術也。\\n\\n吾有一術。名之曰「盤古」。乃行是術曰。\\n\\t除一於三。若其等於零者。\\n\\t\\t噫。夫「「告。計算機除不盡而捨餘者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\n\\t有數五分。名之曰「寅」。減「寅」以「寅」。名之曰「卯」。乘「卯」以「卯」。昔之「浮點零」者。今其是矣。\\n\\t加一於「浮點零」。昔之「浮點一」者。今其是矣。\\n\\n\\t吾有一列。名之曰「素數」。充「素數」以二。以三。以五。以七。以十一。以十三。\\n\\t有數零。名之曰「進制素因數」。\\n\\t昔之「進制」者。今「浮點一」是矣。\\n\\t凡「素數」中之「法」。\\n\\t\\t加一於「法」。除其以「法」。減其以一。乘其以「法」。名之曰「餘」。\\n\\t\\t若「餘」等於一者。\\n\\t\\t\\t乘「法」於「進制」。昔之「進制」者。今其是矣。\\n\\t\\t\\t加一於「進制素因數」。昔之「進制素因數」者。今其是矣。\\n\\t\\t云云。\\n\\t\\t若「餘」等於零者。\\n\\t\\t\\t噫。夫「「告。計算機除不盡而不得分釐者。不可行本算經之術。」」。書之。\\n\\t\\t\\t乃歸空無也。\\n\\t云云。\\n\\t若「進制素因數」大於二者。\\n\\t\\t噫。夫「「告。計算機掩絲毫之瑕而求整者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\t若「進制」不等於二者。\\n\\t\\t噫。夫「「告。計算機非二進者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\t除「進制」於一。昔之「退制」者。今其是矣。\\n\\n\\t吾有一術。名之曰「加」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t\\t加「甲」於「乙」。乃得矣。\\n\\t是謂「加」之術也。\\n\\t吾有一術。名之曰「乘」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t\\t乘「甲」於「乙」。乃得矣。\\n\\t是謂「乘」之術也。\\n\\t吾有一術。名之曰「位溢乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t\\t乘「甲」以「進制」。名之曰「乙」。\\n\\t\\t加一於「乙」。減其以「乙」。若其等於一者。乃得陰。若非。乃得陽也。\\n\\t是謂「位溢乎」之術也。\\n\\n\\t有數一萬。名之曰「試位限」。\\n\\t施「試界」於「試位限」。於「浮點一」。於「進制」。於「乘」。於「位溢乎」。名之曰「算限表」。\\n\\t夫「算限表」之「「引」」。若其不小於「試位限」者。\\n\\t\\t噫。夫「「告。計算機算位無限者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\t夫「算限表」之「「引」」。加其以一。昔之「總算位」者。今其是矣。\\n\\t夫「算限表」之「「實」」。昔之「上位冪」者。今其是矣。\\n\\t除一以「上位冪」。昔之「下位冪」者。今其是矣。\\n\\t加一以「下位冪」。減其以一。若其不等於「下位冪」者。\\n\\t\\t噫。夫「「告。計算機非二進者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\n\\t吾有一術。名之曰「上溢乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t\\t乘「甲」以「進制」。名之曰「乙」。\\n\\t\\t乘「乙」以「進制」。若其大於「乙」者。乃得陰。若非。乃得陽也。\\n\\t是謂「上溢乎」之術也。\\n\\t吾有一術。名之曰「下溢乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t\\t乘「甲」以「退制」。名之曰「乙」。\\n\\t\\t若「乙」等於零者。乃得陽也。\\n\\t\\t若「乙」小於「甲」者。乃得陰也。\\n\\t\\t乃得陽。\\n\\t是謂「下溢乎」之術也。\\n\\n\\t有數一億。名之曰「試指限」。\\n\\t施「試界」於「試指限」。於「浮點一」。於「進制」。於「乘」。於「上溢乎」。名之曰「上限表」。\\n\\t夫「上限表」之「「引」」。昔之「至大指」者。今其是矣。\\n\\t夫「上限表」之「「實」」。昔之「巨位冪」者。今其是矣。\\n\\t減「進制」以「下位冪」。乘其以「巨位冪」。昔之「至巨數」者。今其是矣。\\n\\n\\t施「試界」於「試指限」。於「浮點一」。於「退制」。於「乘」。於「下溢乎」。名之曰「下限表」。\\n\\t夫「下限表」之「「引」」。減其於「總算位」。減其以一。昔之「至小指」者。今其是矣。\\n\\t夫「下限表」之「「實」」。昔之「至微數」者。今其是矣。\\n\\t乘「至微數」以「上位冪」。昔之「微位冪」者。今其是矣。\\n\\t減「總算位」於「至小指」。減其於「至大指」。昔之「位極差」者。今其是矣。\\n\\n\\t注曰「「以上驗算制。」」\\n是謂「盤古」之術也。\\n施「盤古」。\\n\\n注曰「「圓周率。同Javascript之Math.PI也。」」\\n今有一數。曰三·一四一五九二六五三五八九七九三二三八四六二六四三三八三二七九五〇二八八四一九七。名之曰「圓周率」。\\n注曰「「倍圓周率。同Javascript之Math.PI * 2也。」」\\n今有一數。曰六·二八三一八五三〇七一七九五八六四七六九二五二八六七六六五五九〇〇五七六八三九四。名之曰「倍圓周率」。\\n注曰「「半圓周率。同Javascript之Math.PI / 2也。」」\\n今有一數。曰一·五七〇七九六三二六七九四八九六六一九二三一三二一六九一六三九七五一四四二〇九九。名之曰「半圓周率」。\\n注曰「「四分圓周率。同Javascript之Math.PI / 4也。」」\\n今有一數。曰〇·七八五三九八一六三三九七四四八三〇九六一五六六〇八四五八一九八七五七二一〇四九三。名之曰「四分圓周率」。\\n注曰「「自然常數。同Javascript之Math.E也。」」\\n今有一數。曰二·七一八二八一八二八四五九〇四五二三五三六〇二八七四七一三五二六六二四九七七五七。名之曰「自然常數」。\\n注曰「「歐拉常數。同Javascript之0.5772156649015329也。」」\\n今有一數。曰〇·五七七二一五六六四九〇一五三二八六〇六〇六五一二〇九〇〇八二四〇二四三一〇四二二。名之曰「歐拉常數」。\\n注曰「「黃金分割數。同Javascript之1.618033988749895也。」」\\n今有一數。曰一·六一八〇三三九八八七四九八九四八四八二〇四五八六八三四三六五六三八一一七七二〇。名之曰「黃金分割數」。\\n注曰「「二之平方根。同Javascript之Math.SQRT2也。」」\\n今有一數。曰一·四一四二一三五六二三七三〇九五〇四八八〇一六八八七二四二〇九六九八〇七八五七〇。名之曰「二之平方根」。\\n注曰「「二之對數。同Javascript之Math.LN2也。」」\\n今有一數。曰〇·六九三一四七一八〇五五九九四五三〇九四一七二三二一二一四五八一七六五六八〇七五五。名之曰「二之對數」。\\n注曰「「十之對數。同Javascript之Math.LN10也。」」\\n今有一數。曰二·三〇二五八五〇九二九九四〇四五六八四〇一七九九一四五四六八四三六四二〇七六〇一。名之曰「十之對數」。\\n\\n注曰「「不可算數乎。同Javascript之Number.isNaN也。」」\\n今有一術。名之曰「不可算數乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t若「甲」等於「甲」者。乃得陰。\\n\\t若非。乃得陽也。\\n是謂「不可算數乎」之術也。\\n\\n吾有一術。名之曰「下溢」。欲行是術。必先得一數。曰「符」。乃行是術曰。\\n\\t乘「符」以「微位冪」。乘其以「至微數」。乃得矣。\\n是謂「下溢」之術也。\\n\\n吾有一術。名之曰「上溢」。欲行是術。必先得一數。曰「符」。乃行是術曰。\\n\\t乘「符」以「至巨數」。乘其以「至巨數」。乃得矣。\\n是謂「上溢」之術也。\\n\\n吾有一術。名之曰「除以零」。欲行是術。必先得一數。曰「符」。乃行是術曰。\\n\\t除「符」以「浮點零」。乃得矣。\\n是謂「除以零」之術也。\\n\\n吾有一術。名之曰「不可算」。乃行是術曰。\\n\\t除「浮點零」於「浮點零」。乃得矣。\\n是謂「不可算」之術也。\\n\\n吾有一術。名之曰「求進冪」。欲行是術。必先得一數。曰「位」。乃行是術曰。\\n\\t吾有一術。名之曰「吾之冪」。欲行是術。必先得二數。曰「底」。曰「指」。乃行是術曰。\\n\\t\\t有數「底」。名之曰「甲」。\\n\\t\\t有數「浮點一」。名之曰「冪」。\\n\\t\\t恆為是。\\n\\t\\t\\t若「指」等於零者。乃止也。\\n\\t\\t\\t除「指」以二。所餘幾何。名之曰「餘」。\\n\\t\\t\\t若「餘」大於零者。乘「甲」於「冪」。昔之「冪」者。今其是矣。云云。\\n\\t\\t\\t乘「甲」於「甲」。昔之「甲」者。今其是矣。\\n\\t\\t\\t減「餘」於「指」。除其以二。昔之「指」者。今其是矣。\\n\\t\\t云云。\\n\\t\\t乃得「冪」。\\n\\t是謂「吾之冪」之術也。\\n\\t若「位」小於零者。\\n\\t\\t夫「退制」。減零以「位」。取二以施「吾之冪」。乃得矣。\\n\\t若非。\\n\\t\\t夫「進制」。夫「位」。取二以施「吾之冪」。乃得矣。\\n\\t云云。\\n是謂「求進冪」之術也。\\n\\n吾有三數。名之曰「取位常數甲」。曰「取位常數乙」。曰「取位上溢限」。\\n吾有三數。名之曰「分算常數」。曰「分算上溢限甲」。曰「分算上溢限乙」。\\n\\n吾有一術。名之曰「伏羲」。乃行是術曰。\\n\\t加一於「上位冪」。昔之「取位常數甲」者。今其是矣。\\n\\t除二於「下位冪」。減其於一。昔之「取位常數乙」者。今其是矣。\\n\\t除「上位冪」於「巨位冪」。昔之「取位上溢限」者。今其是矣。\\n\\n\\t加一於「總算位」。名之曰「甲」。\\n\\t除二於「甲」。所餘幾何。減其於「甲」。除其以二。名之曰「半算位」。\\n\\t施「求進冪」於「半算位」。名之曰「半位冪」。\\n\\t加一於「半位冪」。昔之「分算常數」者。今其是矣。\\n\\t除「半位冪」於「巨位冪」。昔之「分算上溢限甲」者。今其是矣。\\n\\t乘「半位冪」於「下位冪」。減其於「進制」。乘其以「巨位冪」。昔之「分算上溢限乙」者。今其是矣。\\n是謂「伏羲」之術也。\\n施「伏羲」。\\n\\n吾有一術。名之曰「取本位冪」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「二進者方可施是術。」」\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「取位上溢限」者。\\n\\t\\t乘「乙」以「取位常數甲」。名之曰「丙」。\\n\\t\\t乘「丙」以「取位常數乙」。名之曰「丁」。\\n\\t\\t減「丁」於「丙」。乃得矣。\\n\\t若非。\\n\\t\\t乘「乙」以「下位冪」。乘其以「下位冪」。名之曰「丙」。\\n\\t\\t若「丙」小於「取位上溢限」者。\\n\\t\\t\\t施「取本位冪」於「丙」。乘其以「上位冪」。乘其以「上位冪」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t乃得「乙」也。\\n\\t云云。\\n是謂「取本位冪」之術也。\\n\\n吾有一術。名之曰「取內鄰數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「二進者方可施是術。」」\\n\\t乘「甲」以「取位常數乙」。名之曰「乙」。\\n\\t若「乙」不等於「甲」者。\\n\\t\\t乃得「乙」也。\\n\\t若「甲」等於零者。\\n\\t\\t乃得「甲」也。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「丙」。\\n\\t若「丙」大於「至巨數」者。\\n\\t\\t乘「符」於「至巨數」。乃得矣。云云。\\n\\t減「至微數」於「丙」。乘其以「符」。乃得矣。\\n是謂「取內鄰數」之術也。\\n\\n吾有一術。名之曰「取外鄰數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「二進者方可施是術。」」\\n\\t施「正負」於「甲」。名之曰「符」。\\n\\t施「取本位冪」於「甲」。乘其以「下位冪」。乘其以「符」。加其以「甲」。名之曰「乙」。\\n\\t若「乙」不等於「甲」者。\\n\\t\\t乃得「乙」也。\\n\\t若「甲」等於零者。\\n\\t\\t乃得「至微數」也。\\n\\t乘「符」於「甲」。加其以「至微數」。乘其以「符」。乃得矣。\\n是謂「取外鄰數」之術也。\\n\\n吾有一術。名之曰「分算」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「分算者。其位上下二分。借二算布之也。」」\\n\\t吾有一列。名之曰「二算」。\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「分算上溢限甲」者。\\n\\t\\t乘「甲」以「分算常數」。名之曰「丙」。\\n\\t\\t減「丙」於「甲」。名之曰「丁」。\\n\\t\\t加「丁」於「丙」。名之曰「上甲」。\\n\\t\\t充「二算」以「上甲」。\\n\\t\\t減「甲」以「上甲」。充「二算」以其。\\n\\t若非。\\n\\t\\t若「乙」小於「分算上溢限乙」者。\\n\\t\\t\\t乘「甲」以「下位冪」。名之曰「丙」。\\n\\t\\t\\t施「分算」於「丙」。名之曰「丁」。\\n\\t\\t\\t凡「丁」中之「戊」。\\n\\t\\t\\t\\t乘「戊」以「上位冪」。充「二算」以其。\\n\\t\\t\\t云云。\\n\\t\\t若非。\\n\\t\\t\\t減「乙」以「分算上溢限乙」。名之曰「丙」。\\n\\t\\t\\t若「丙」小於「分算上溢限乙」者。\\n\\t\\t\\t\\t施「正負」於「甲」。名之曰「符」。\\n\\t\\t\\t\\t乘「符」於「分算上溢限乙」。充「二算」以其。\\n\\t\\t\\t\\t乘「符」於「丙」。充「二算」以其。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t充「二算」以「甲」。以「甲」。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t云云。\\n\\t乃得「二算」。\\n是謂「分算」之術也。\\n\\n吾有一術。名之曰「造雙數」。欲行是術。必先得二數。曰「上」。曰「下」。乃行是術曰。\\n\\t注曰「「雙數者。以二算布一數。其位倍之。」」\\n\\t吾有一列。名之曰「雙」。充「雙」以「上」。以「下」。乃得「雙」。\\n是謂「造雙數」之術也。\\n\\n吾有一術。名之曰「雙數取反」。欲行是術。必先得一列。曰「甲」。乃行是術曰。\\n\\t夫「甲」之一。乘其以負一。名之曰「上」。\\n\\t夫「甲」之二。乘其以負一。名之曰「下」。\\n\\t施「造雙數」於「上」。於「下」。乃得矣。\\n是謂「雙數取反」之術也。\\n\\n吾有一術。名之曰「以小加大得雙」。欲行是術。必先得二數。曰「小」。曰「大」。乃行是術曰。\\n\\t注曰「「大小者。二數移位之大小也。或前小而後大。或同。不可反之。」」\\n\\t加「小」於「大」。名之曰「上和」。\\n\\t減「大」於「上和」。名之曰「丙」。\\n\\t減「丙」於「小」。名之曰「下和」。\\n\\t施「造雙數」於「上和」。於「下和」。乃得矣。\\n是謂「以小加大得雙」之術也。\\n\\n吾有一術。名之曰「相加得雙」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t加「甲」於「乙」。名之曰「上和」。\\n\\t減「乙」於「上和」。名之曰「丙」。\\n\\t減「丙」於「上和」。名之曰「丁」。\\n\\t減「丙」於「甲」。名之曰「戊」。\\n\\t減「丁」於「乙」。名之曰「己」。\\n\\t加「戊」於「己」。名之曰「下和」。\\n\\t施「造雙數」於「上和」。於「下和」。乃得矣。\\n是謂「相加得雙」之術也。\\n\\n吾有一術。名之曰「加單於雙」。欲行是術。必先得一數。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\t夫「乙」之一。名之曰「上乙」。夫「乙」之二。名之曰「下乙」。\\n\\t施「相加得雙」於「甲」。於「上乙」。名之曰「丙」。\\n\\t夫「丙」之二。加其於「下乙」。夫「丙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「加單於雙」之術也。\\n\\n吾有一術。名之曰「以單減雙得單」。欲行是術。必先得一數。曰「甲」。一列。曰「乙」。是術曰。\\n\\t夫「乙」之一。名之曰「上乙」。夫「乙」之二。名之曰「下乙」。\\n\\t減「甲」於「上乙」。加其以「下乙」。乃得矣。\\n是謂「以單減雙得單」之術也。\\n\\n吾有一術。名之曰「加雙於雙」。欲行是術。必先得二列。曰「甲」。曰「乙」。乃行是術曰。\\n\\t夫「甲」之一。夫「乙」之一。取二以施「相加得雙」。名之曰「丙」。\\n\\t夫「甲」之二。夫「乙」之二。取二以施「相加得雙」。名之曰「丁」。\\n\\t夫「丙」之一。名之曰「上丙」。\\n\\t夫「丙」之二。名之曰「下丙」。\\n\\t夫「丁」之一。加其於「下丙」。夫「上丙」。取二以施「以小加大得雙」。名之曰「戊」。\\n\\t夫「戊」之一。名之曰「上戊」。\\n\\t夫「戊」之二。名之曰「下戊」。\\n\\t夫「丁」之二。加其於「下戊」。夫「上戊」。取二以施「以小加大得雙」。乃得矣。\\n是謂「加雙於雙」之術也。\\n\\n吾有一術。名之曰「自乘得雙」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t乘「甲」以「甲」。名之曰「上方」。\\n\\t施「分算」於「甲」。名之曰「分甲」。\\n\\t夫「分甲」之一。名之曰「上甲」。\\n\\t夫「分甲」之二。名之曰「下甲」。\\n\\t乘「上甲」於「上甲」。減其以「上方」。名之曰「丙」。\\n\\t乘「上甲」於「下甲」。乘其以二。加其於「丙」。名之曰「丁」。\\n\\t乘「下甲」於「下甲」。加其於「丁」。名之曰「下方」。\\n\\t施「造雙數」於「上方」。於「下方」。乃得矣。\\n是謂「自乘得雙」之術也。\\n\\n吾有一術。名之曰「相乘得雙」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t乘「甲」以「乙」。名之曰「上積」。\\n\\t施「分算」於「甲」。名之曰「分甲」。\\n\\t夫「分甲」之一。名之曰「上甲」。\\n\\t夫「分甲」之二。名之曰「下甲」。\\n\\t施「分算」於「乙」。名之曰「分乙」。\\n\\t夫「分乙」之一。名之曰「上乙」。\\n\\t夫「分乙」之二。名之曰「下乙」。\\n\\t乘「上甲」於「上乙」。減其以「上積」。名之曰「丙」。\\n\\t乘「上甲」於「下乙」。加其於「丙」。名之曰「丁」。\\n\\t乘「下甲」於「上乙」。加其於「丁」。名之曰「戊」。\\n\\t乘「下甲」於「下乙」。加其於「戊」。名之曰「下積」。\\n\\t施「造雙數」於「上積」。於「下積」。乃得矣。\\n是謂「相乘得雙」之術也。\\n\\n吾有一術。名之曰「乘單於雙」。欲行是術。必先得一數。曰「甲」。一列。曰「乙」。是術曰。\\n\\t夫「乙」之一。名之曰「上乙」。\\n\\t夫「乙」之二。名之曰「下乙」。\\n\\t施「相乘得雙」於「甲」於「上乙」。名之曰「丙」。\\n\\t乘「甲」於「下乙」。名之曰「丁」。\\n\\t夫「丙」之二。加其以「丁」。夫「丙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「乘單於雙」之術也。\\n\\n吾有一術。名之曰「雙數自乘」。欲行是術。必先得一列。曰「甲」。乃行是術曰。\\n\\t夫「甲」之一。名之曰「上甲」。\\n\\t夫「甲」之二。名之曰「下甲」。\\n\\t施「自乘得雙」於「上甲」。名之曰「乙」。\\n\\t乘「上甲」於「下甲」。乘其以二。名之曰「丙」。\\n\\t夫「乙」之二。加其以「丙」。夫「乙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「雙數自乘」之術也。\\n\\n吾有一術。名之曰「乘雙於雙」。欲行是術。必先得二列。曰「甲」。曰「乙」。是術曰。\\n\\t夫「甲」之一。名之曰「上甲」。\\n\\t夫「甲」之二。名之曰「下甲」。\\n\\t夫「乙」之一。名之曰「上乙」。\\n\\t夫「乙」之二。名之曰「下乙」。\\n\\t施「相乘得雙」於「上甲」於「上乙」。名之曰「丙」。\\n\\t乘「上甲」於「下乙」。名之曰「丁」。\\n\\t乘「下甲」於「上乙」。加其於「丁」。名之曰「戊」。\\n\\t夫「丙」之二。加其以「戊」。夫「丙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「乘雙於雙」之術也。\\n\\n吾有一術。名之曰「求多項式」。欲行是術。必先得一列。曰「式」。一數。曰「甲」。乃行是術曰。\\n\\t有數零。名之曰「解」。\\n\\t夫「式」之長。名之曰「引」。\\n\\t恆為是。\\n\\t\\t若「引」等於零者。乃得「解」也。\\n\\t\\t乘「解」以「甲」。名之曰「乙」。\\n\\t\\t夫「式」之「引」。加其於「乙」。昔之「解」者。今其是矣。\\n\\t\\t減一於「引」。昔之「引」者。今其是矣。\\n\\t云云。\\n是謂「求多項式」之術也。\\n\\n注曰「「浮點移位。同Javascript之x * Math.pow(2, y), y is integer也。」」\\n今有一術。名之曰「浮點移位」。欲行是術。必先得二數。曰「本」。曰「位」。乃行是術曰。\\n\\t注曰「「位正則進位。負則退位。」」\\n\\t若「位」不大於「至大指」者。若「位」不小於「至小指」者。\\n\\t\\t施「求進冪」於「位」。乘其於「本」。乃得矣。\\n\\t云云。云云。\\n\\n\\t施「不可算數乎」於「本」。若其然者。\\n\\t\\t乃得「本」也。\\n\\t施「不可算數乎」於「位」。若其然者。\\n\\t\\t乃得「位」也。\\n\\t若「位」大於零者。\\n\\t\\t加二於「位極差」。名之曰「限」。\\n\\t\\t若「位」不大於「限」者。\\n\\t\\t\\t夫「本」。減「位」以「至大指」。取二以施「浮點移位」。乘其以「巨位冪」。乃得矣。云云。\\n\\t\\t若「位」不大於「至巨數」者。\\n\\t\\t\\t夫「本」。減「限」以「至大指」。取二以施「浮點移位」。乘其以「巨位冪」。乃得矣。云云。\\n\\t\\t若「本」不等於零者。\\n\\t\\t\\t施「正負」於「本」。取一以施「上溢」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t施「不可算」。乃得矣。\\n\\t\\t云云。\\n\\t若非。\\n\\t\\t減負二以「位極差」。名之曰「限」。\\n\\t\\t若「位」不小於「限」者。\\n\\t\\t\\t夫「本」。減「位」以「至小指」。取二以施「浮點移位」。乘其以「微位冪」。乃得矣。云云。\\n\\t\\t乘負一於「至巨數」。若「位」不小於其者。\\n\\t\\t\\t夫「本」。減「限」以「至小指」。取二以施「浮點移位」。乘其以「微位冪」。乃得矣。云云。\\n\\t\\t施「絕對」於「本」。若其不大於「至巨數」者。\\n\\t\\t\\t乘「本」以「浮點零」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t施「不可算」。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n是謂「浮點移位」之術也。\\n\\n注曰「「析浮點數。同Javascript之N/A也。」」\\n今有一術。名之曰「析浮點數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「是術得一物。物有三數。曰符。曰位。曰本。符者。正負也。位者。進退位也。本者。本數也。」」\\n\\t注曰「「設計算機二進。若施是術於負六。乃得符負一。位二。本一又五分。」」\\n\\t吾有一術。名之曰「造析」。欲行是術。必先得三數。曰「符」。曰「位」。曰「本」。乃行是術曰。\\n\\t\\t吾有一物。名之曰「析」。其物如是。\\n\\t\\t\\t物之「「符」」者。數曰「符」。\\n\\t\\t\\t物之「「位」」者。數曰「位」。\\n\\t\\t\\t物之「「本」」者。數曰「本」。\\n\\t\\t是謂「析」之物也。\\n\\t\\t乃得「析」。\\n\\t是謂「造析」之術也。\\n\\n\\t吾有一術。名之曰「乘」。欲行是術。必先得二數。曰「丙」。曰「丁」。乃行是術曰。\\n\\t\\t乘「丙」於「丁」。乃得矣。\\n\\t是謂「乘」之術也。\\n\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t若「甲」等於零者。\\n\\t\\t夫「符」。施「除以零」於負一。夫「乙」。取三以施「造析」。乃得矣。云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t夫「符」。夫「甲」。夫「乙」。取三以施「造析」。乃得矣。云云。\\n\\t若「乙」大於「至巨數」者。\\n\\t\\t夫「符」。夫「乙」。夫「乙」。取三以施「造析」。乃得矣。云云。\\n\\n\\t若「乙」不小於一者。\\n\\t\\t吾有一術。名之曰「據」。欲行是術。必先得一數。曰「丙」。乃行是術曰。\\n\\t\\t\\t乘「丙」以「進制」。若其大於「乙」者。乃得陽。若非。乃得陰也。\\n\\t\\t是謂「據」之術也。\\n\\t\\t夫「至大指」。夫「浮點一」。夫「進制」。夫「乘」。夫「據」。取五以施「試界」。名之曰「位表」。\\n\\t\\t夫「位表」之「「引」」。名之曰「位」。\\n\\t\\t夫「位表」之「「實」」。除其於「乙」。名之曰「本」。\\n\\t\\t夫「符」。夫「位」。夫「本」。取三以施「造析」。乃得矣。\\n\\t若非。\\n\\t\\t吾有一術。名之曰「據」。欲行是術。必先得一數。曰「丙」。乃行是術曰。\\n\\t\\t\\t若「丙」不大於「乙」者。乃得陽。若非。乃得陰也。\\n\\t\\t是謂「據」之術也。\\n\\t\\t減「至小指」於「總算位」。夫「浮點一」。夫「退制」。夫「乘」。夫「據」。取五以施「試界」。名之曰「位表」。\\n\\t\\t夫「位表」之「「引」」。減其於零。名之曰「位」。\\n\\t\\t夫「位表」之「「實」」。除其於「乙」。名之曰「本」。\\n\\t\\t夫「符」。夫「位」。夫「本」。取三以施「造析」。乃得矣。\\n\\t云云。\\n是謂「析浮點數」之術也。\\n\\n除「上位冪」以四。名之曰「整除大數限」。\\n\\n注曰「「取底除。同Javascript之{ 商: Math.floor(x / y), 餘: x - y * quo }也。」」\\n今有一術。名之曰「取底除」。欲行是術。必先得二數曰「實」。曰「法」。是術曰。\\n\\t施「正負」於「法」。名之曰「法符」。乘「法」以「法符」。名之曰「法值」。乘「實」以「法符」。名之曰「乙」。\\n\\t施「正負」於「乙」。名之曰「乙符」。乘「乙」以「乙符」。名之曰「實值」。\\n\\t除「法值」於「實值」。所餘幾何。名之曰「餘」。\\n\\t減「餘」於「實值」。除其以「法值」。取一以施「取整」。名之曰「商」。\\n\\t若「乙符」小於零者。若「餘」不等於零者。\\n\\t\\t減「商」於負一。昔之「商」者。今其是矣。\\n\\t\\t減「餘」於「法值」。昔之「餘」者。今其是矣。\\n\\t云云。云云。\\n\\t吾有一物。名之曰「商餘」。其物如是。\\n\\t\\t物之「「商」」者。數曰「商」。\\n\\t\\t物之「「餘」」者。數曰「餘」。\\n\\t是謂「商餘」之物也。\\n\\t乃得「商餘」。\\n是謂「取底除」之術也。\\n\\n注曰「「取整除。同Javascript之{ 商: Math.round(x / y), 餘: x - y * quo }也。」」\\n今有一術。名之曰「取整除」。欲行是術。必先得二數曰「實」。曰「法」。是術曰。\\n\\t施「正負」於「法」。名之曰「法符」。乘「法」以「法符」。名之曰「法值」。\\n\\t施「正負」於「實」。名之曰「實符」。乘「實」以「實符」。名之曰「實值」。\\n\\t乘「法符」於「實符」名之曰「符」。\\n\\t除「法值」於「實值」。所餘幾何。名之曰「餘」。\\n\\t減「餘」於「實值」。除其以「法值」。取一以施「取整」。名之曰「商」。\\n\\t除「法值」以二。若「餘」不小於其者。\\n\\t\\t加「商」以一。昔之「商」者。今其是矣。\\n\\t\\t減「餘」以「法值」。昔之「餘」者。今其是矣。\\n\\t云云。\\n\\t乘「商」以「符」。昔之「商」者。今其是矣。\\n\\t乘「餘」以「符」。昔之「餘」者。今其是矣。\\n\\t吾有一物。名之曰「商餘」。其物如是。\\n\\t\\t物之「「商」」者。數曰「商」。\\n\\t\\t物之「「餘」」者。數曰「餘」。\\n\\t是謂「商餘」之物也。\\n\\t乃得「商餘」。\\n是謂「取整除」之術也。\\n\\n吾有一列。名之曰「半圓周率密率」。\\n\\t施「浮點移位」於八八四二七九七一九〇〇三五五五。於負四十九。充「半圓周率密率」以其。\\n\\t施「浮點移位」於四九六七七五七六〇〇〇二一五一一。於負一百零六。充「半圓周率密率」以其。\\n\\n吾有一術。名之曰「分四象」。欲行是術。必先得二數曰「甲」。曰「上限」。是術曰。\\n\\t注曰「「甲須為有限非零數。」」\\n\\t注曰「「術尚不精。當以極密率除之。」」\\n\\t夫「甲」。夫「半圓周率密率」之一。取二以施「取整除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。名之曰「商」。夫「乙」之「「餘」」。名之曰「餘」。\\n\\t注曰「「半圓周率弧度即一象。」」\\n\\t施「絕對」於「商」。若其不小於「整除大數限」者。\\n\\t\\t注曰「「商甚大。或算位不足而謬之。」」\\n\\t\\t有數四。名之曰「移位」。\\n\\t\\t夫「甲」。減零以「移位」。取二以施「浮點移位」。夫「上限」。取二以施「分四象」。\\n\\t\\t夫其之「「角」」。夫「移位」。取二以施「浮點移位」。夫「上限」。取二以施「分四象」。乃得矣。\\n\\t云云。\\n\\t施「取底除」於「商」。於四。夫其之「「餘」」。名之曰「象」。\\n\\t夫「半圓周率密率」之二。乘其以「商」。減其於「餘」。昔之「餘」者。今其是矣。\\n\\t施「絕對」於「餘」。若其大於「上限」者。\\n\\t\\t施「分四象」於「餘」。於「上限」。名之曰「解」。\\n\\t\\t夫「解」之「「象」」。加其於「象」。夫四。取二以施「取底除」。\\n\\t\\t夫其之「「餘」」。昔之「解」之「「象」」者。今其是矣。\\n\\t\\t乃得「解」。\\n\\t若非。\\n\\t\\t吾有一物。名之曰「解」。其物如是。\\n\\t\\t\\t物之「「角」」者。數曰「餘」。\\n\\t\\t\\t物之「「象」」者。數曰「象」。\\n\\t\\t是謂「解」之物也。\\n\\t\\t乃得「解」。\\n\\t云云。\\n是謂「分四象」之術也。\\n\\n有數七分九釐。名之曰「正餘弦角限」。注曰「「略大於四十五度。」」\\n\\n吾有一列。名之曰「正弦多項式」。\\n\\t除負一以六。充「正弦多項式」以其。\\n\\t除一以一二〇。充「正弦多項式」以其。\\n\\t除負一以五〇四〇。充「正弦多項式」以其。\\n\\t除一以三六二八八〇。充「正弦多項式」以其。\\n\\t除負一以三九九一六八〇〇。充「正弦多項式」以其。\\n\\t除一以六二二七〇二〇八〇〇。充「正弦多項式」以其。\\n\\t除負一以一三〇七六七四三六八〇〇〇。充「正弦多項式」以其。\\n\\t除一以三五五六八七四二八〇九六〇〇〇。充「正弦多項式」以其。\\n\\n吾有一列。名之曰「餘弦多項式」。\\n\\t除負一以二。充「餘弦多項式」以其。\\n\\t除一以二四。充「餘弦多項式」以其。\\n\\t除負一以七二〇。充「餘弦多項式」以其。\\n\\t除一以四〇三二〇。充「餘弦多項式」以其。\\n\\t除負一以三六二八八〇〇。充「餘弦多項式」以其。\\n\\t除一以四七九〇〇一六〇〇。充「餘弦多項式」以其。\\n\\t除負一以八七一七八二九一二〇〇。充「餘弦多項式」以其。\\n\\t除一以二〇九二二七八九八八八〇〇〇。充「餘弦多項式」以其。\\n\\n注曰「「正弦。同Javascript之Math.sin也。」」\\n今有一術。名之曰「正弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「數小甚矣。乃得其身。否則以泰勒展開求之。復以週期性得其餘。」」\\n\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「下位冪」者。\\n\\t\\t乃得「甲」也。\\n\\t若「乙」小於「正餘弦角限」者。\\n\\t\\t乘「甲」於「甲」。名之曰「二次冪」。\\n\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「甲」。加其於「甲」。乃得矣。云云。\\n\\t若「乙」不大於「至巨數」者。\\n\\t\\t施「分四象」於「甲」。於「正餘弦角限」。名之曰「丙」。\\n\\t\\t夫「丙」之「「角」」。名之曰「丁」。夫「丙」之「「象」」。名之曰「象」。\\n\\t\\t乘「丁」於「丁」。名之曰「二次冪」。\\n\\t\\t若「象」等於零者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。乃得矣。云云。\\n\\t\\t若「象」等於一者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。乃得矣。云云。\\n\\t\\t若「象」等於二者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。乃得矣。云云。\\n\\t\\t若「象」等於三者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。乃得矣。云云。\\n\\t云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t乃得「甲」也。\\n\\t施「不可算」。乃得矣。\\n是謂「正弦」之術也。\\n\\n注曰「「餘弦。同Javascript之Math.cos也。」」\\n今有一術。名之曰「餘弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「餘弦者。蓋正弦之變化所得。」」\\n\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「下位冪」者。\\n\\t\\t乃得一也。\\n\\t若「乙」小於「正餘弦角限」者。\\n\\t\\t乘「甲」於「甲」。名之曰「二次冪」。\\n\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其以一。乃得矣。云云。\\n\\t若「乙」不大於「至巨數」者。\\n\\t\\t施「分四象」於「甲」。於「正餘弦角限」。名之曰「丙」。\\n\\t\\t夫「丙」之「「角」」。名之曰「丁」。夫「丙」之「「象」」。名之曰「象」。\\n\\t\\t乘「丁」於「丁」。名之曰「二次冪」。\\n\\t\\t若「象」等於零者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。乃得矣。云云。\\n\\t\\t若「象」等於一者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。乃得矣。云云。\\n\\t\\t若「象」等於二者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。乃得矣。云云。\\n\\t\\t若「象」等於三者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。乃得矣。云云。\\n\\t云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t乃得「甲」也。\\n\\t施「不可算」。乃得矣。\\n是謂「餘弦」之術也。\\n\\n吾有一列。名之曰「反正弦多項式」。\\n\\t充「反正弦多項式」以〇·一六六六六六六六六六六六六六六四六。\\n\\t充「反正弦多項式」以〇·〇七五〇〇〇〇〇〇〇〇〇二三一八五三。\\n\\t充「反正弦多項式」以〇·〇四四六四二八五七〇九九五一八七七六。\\n\\t充「反正弦多項式」以〇·〇三〇三八一九四七六一二五八八一八八。\\n\\t充「反正弦多項式」以〇·〇二二三七二〇三九七二四〇六七九九六。\\n\\t充「反正弦多項式」以〇·〇一七三五五四〇八四二九六九九一六八。\\n\\t充「反正弦多項式」以〇·〇一三九二七九一六二七八〇七六一四〇。\\n\\t充「反正弦多項式」以〇·〇一一八八八五三〇五一〇五三八八〇九。\\n\\t充「反正弦多項式」以〇·〇〇七七四〇一二四四一八〇六六九〇三三。\\n\\t充「反正弦多項式」以〇·〇一六二二三四二二六二三一八二五六二。\\n\\t充「反正弦多項式」以負〇·〇一一〇六六五二一五七八〇七三九七〇。\\n\\t充「反正弦多項式」以〇·〇二八四〇〇七四九二〇一四五一九六二。\\n\\n注曰「「反正弦。同Javascript之Math.asin也。」」\\n今有一術。名之曰「反正弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「小於五分者。以多項式求之。其餘以三角恆等式變化可得。」」\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「乙」大於零者。若「乙」不大於一者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「甲」等於零者。乃得「甲」也。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。乃得「甲」也。\\n\\t\\t施「不可算」。乃得矣。\\n\\t云云。\\n\\n\\t若「乙」大於五分者。\\n\\t\\t減「乙」於一。除其以二。名之曰「丙」。\\n\\t\\t施「平方根」於「丙」。乘其以二。名之曰「丁」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其以「丁」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。減其以「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。加其於「己」。乘其以「符」。乃得矣。\\n\\t若非。\\n\\t\\t乘「乙」於「乙」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「甲」。加其於「甲」。乃得矣。\\n\\t云云。\\n是謂「反正弦」之術也。\\n\\n注曰「「反餘弦。同Javascript之Math.acos也。」」\\n今有一術。名之曰「反餘弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「反餘弦者。蓋反正弦之變化所得。」」\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「乙」不大於一者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。\\n\\t若「非常」者。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。乃得「甲」也。\\n\\t\\t施「不可算」。乃得矣。\\n\\t云云。\\n\\n\\t若「乙」大於五分者。\\n\\t\\t減「乙」於一。除其以二。名之曰「丙」。\\n\\t\\t施「平方根」於「丙」。乘其以二。名之曰「丁」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其以「丁」。名之曰「戊」。\\n\\t\\t若「甲」大於零者。\\n\\t\\t\\t乃得「戊」。\\n\\t\\t若非。\\n\\t\\t\\t夫「半圓周率密率」之二。乘其以二。減其以「戊」。名之曰「己」。\\n\\t\\t\\t夫「半圓周率密率」之一。乘其以二。加其於「己」。乃得矣。\\n\\t\\t云云。\\n\\t若非。\\n\\t\\t乘「乙」於「乙」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「甲」。加其於「甲」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。減其以「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。加其於「己」。乃得矣。\\n\\t云云。\\n是謂「反餘弦」之術也。\\n\\n注曰「「正切。同Javascript之Math.tan也。」」\\n今有一術。名之曰「正切」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「數小甚矣。乃得其身。其餘或以三角恆等式。或以週期性可得。」」\\n\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「下位冪」者。\\n\\t\\t乃得「甲」也。\\n\\t若「乙」小於「正餘弦角限」者。\\n\\t\\t乘「甲」於「甲」。名之曰「二次冪」。\\n\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「甲」。加其於「甲」。名之曰「勾」。\\n\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其以一。名之曰「股」。\\n\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t若「乙」不大於「至巨數」者。\\n\\t\\t施「分四象」於「甲」。於「正餘弦角限」。名之曰「丙」。\\n\\t\\t夫「丙」之「「角」」。名之曰「丁」。夫「丙」之「「象」」。名之曰「象」。\\n\\t\\t乘「丁」於「丁」。名之曰「二次冪」。\\n\\t\\t若「象」等於零者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t\\t若「象」等於一者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t\\t若「象」等於二者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t\\t若「象」等於三者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t乃得「甲」也。\\n\\t施「不可算」。乃得矣。\\n是謂「正切」之術也。\\n\\n吾有一列。名之曰「反正切多項式」。\\n\\t充「反正切多項式」以負〇·三三三三三三三三三三三三三三三二六。\\n\\t充「反正切多項式」以〇·一九九九九九九九九九九九九二二六八。\\n\\t充「反正切多項式」以負〇·一四二八五七一四二八四二一〇九五七。\\n\\t充「反正切多項式」以〇·一一一一一一一〇九九六五六八一〇三。\\n\\t充「反正切多項式」以負〇·〇九〇九〇九〇四五七三六一九二八〇九。\\n\\t充「反正切多項式」以〇·〇七六九二二〇二二一一〇八五〇六九六。\\n\\t充「反正切多項式」以負〇·〇六六六五〇九六二七三七〇九三七五五。\\n\\t充「反正切多項式」以〇·〇五八六六八一九一二四六一七二三一三。\\n\\t充「反正切多項式」以負〇·〇五一五九〇五五四五〇八四〇七四八七。\\n\\t充「反正切多項式」以〇·〇四二八八一四六一二三五七三四五六〇。\\n\\t充「反正切多項式」以負〇·〇二九〇三〇一七〇一六〇九七五七五一。\\n\\t充「反正切多項式」以〇·〇一一二〇八四九一一九三〇八七七九二。\\n\\n注曰「「反正切。同Javascript之Math.atan也。」」\\n今有一術。名之曰「反正切」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「小於五分者。以多項式求之。其餘以三角恆等式變化可得。」」\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「乙」大於零者。若「乙」不大於「至巨數」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「乙」等於零者。乃得「甲」也。\\n\\t\\t若「乙」大於「至巨數」者。乘「符」於「半圓周率」。乃得矣。云云。\\n\\t\\t乃得「甲」。\\n\\t云云。\\n\\n\\t若「乙」小於五分者。\\n\\t\\t乘「乙」於「乙」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正切多項式」。於「丙」。乘其以「丙」。乘其以「甲」。加其於「甲」。乃得矣。\\n\\t或若「乙」大於二者。\\n\\t\\t除「乙」於一。名之曰「丁」。\\n\\t\\t乘「丁」於「丁」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正切多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其於「丁」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。減其以「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。加其於「己」。乘其以「符」。乃得矣。\\n\\t若非。\\n\\t\\t減「乙」以一。名之曰「庚」。加「乙」於一。除其於「庚」。名之曰「丁」。\\n\\t\\t乘「丁」於「丁」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正切多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其於「丁」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。除其以二。加其於「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。除其以二。加其於「己」。乘其以「符」。乃得矣。\\n\\t云云。\\n是謂「反正切」之術也。\\n\\n\\n注曰「「勾股求角。同Javascript之Math.atan2也。」」\\n今有一術。名之曰「勾股求角」。欲行是術。必先得二數曰「甲」。曰「乙」。乃行是術曰。\\n\\t注曰「「反正切之分類討論也」」\\n\\t施「絕對」於「甲」。若其大於「至巨數」者。\\n\\t\\t施「絕對」於「乙」。若其大於「至巨數」者。\\n\\t\\t\\t施「正負」於「甲」。施「正負」於「乙」。取二以施「勾股求角」。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t若「乙」等於零者。\\n\\t\\t若「甲」大於零者。乃得「半圓周率」也。\\n\\t\\t若「甲」小於零者。減零以「半圓周率」乃得其也。\\n\\t\\t乃得零也。\\n\\n\\t除「甲」以「乙」。取一以施「反正切」。名之曰「丙」。\\n\\t若「乙」大於零者。乃得「丙」也。\\n\\t若「甲」不小於零者。加「丙」以「圓周率」。乃得矣。云云。\\n\\n\\t減「丙」以「圓周率」。乃得矣。\\n\\n是謂「勾股求角」之術也。\\n\\n\\n除五〇六二九七三以二〇九七一五二。名之曰「勾股求弦常數上」。\\n有數負〇·〇〇〇〇〇〇〇九五〇〇六〇五五三四一八二三三一一二七五七九〇三〇一九二一四三〇三二八一二四六二。\\n\\t名之曰「勾股求弦常數下」。\\n注曰「「加二之平方根於一也。」」\\n\\n注曰「「勾股求弦。同Javascript之Math.hypot也。」」\\n今有一術。名之曰「勾股求弦」。欲行是術。必先得二數曰「勾」。曰「股」。乃行是術曰。\\n\\t施「絕對」於「勾」。名之曰「甲」。\\n\\t施「絕對」於「股」。名之曰「乙」。\\n\\t若「甲」等於零者。乃得「乙」也。\\n\\t若「乙」等於零者。乃得「甲」也。\\n\\t若「甲」大於「至巨數」者。乃得「甲」也。\\n\\t若「乙」大於「至巨數」者。乃得「乙」也。\\n\\t施「不可算數乎」於「甲」。若其然者。乃得「甲」也。\\n\\t施「不可算數乎」於「乙」。若其然者。乃得「乙」也。\\n\\t若「乙」大於「甲」者。\\n\\t\\t有數「甲」。名之曰「借」。\\n\\t\\t昔之「甲」者。今「乙」是矣。\\n\\t\\t昔之「乙」者。今「借」是矣。\\n\\t云云。\\n\\n\\t減「乙」於「甲」。名之曰「丙」。\\n\\t若「丙」等於「甲」者。\\n\\t\\t乃得「甲」。\\n\\t或若「丙」大於「乙」者。\\n\\t\\t除「乙」於「甲」。名之曰「丁」。\\n\\t\\t乘「丁」於「丁」。加其於一。取一以施「平方根」。加其於「丁」。\\n\\t\\t除其於「乙」。加其於「甲」。乃得矣。\\n\\t若非。\\n\\t\\t除「乙」於「丙」。名之曰「戊」。\\n\\t\\t加「戊」於二。乘其以「戊」。名之曰「己」。\\n\\t\\t加「己」於二。取一以施「平方根」。加其於「二之平方根」。除其於「己」。名之曰「庚」。\\n\\t\\t加「庚」於「勾股求弦常數下」。加其於「戊」。加其於「勾股求弦常數上」。\\n\\t\\t除其於「乙」。加其於「甲」。乃得矣。\\n\\t云云。\\n是謂「勾股求弦」之術也。\\n\\n除一百四十五萬三千六百三十五以二百零九萬七千一百五十二。名之曰「二之對數上」。\\n有數負〇·〇〇〇〇〇〇〇〇一九〇四六五四二九九九五七七六七八七八五四一八二三四三一九二四四九九八六五六四〇。\\n\\t名之曰「二之對數下」。\\n\\n吾有一列。名之曰「對數多項式甲」。\\n\\t除一以三。充「對數多項式甲」以其。\\n\\t除一以五。充「對數多項式甲」以其。\\n\\t除一以七。充「對數多項式甲」以其。\\n\\t除一以九。充「對數多項式甲」以其。\\n\\t除一以十一。充「對數多項式甲」以其。\\n\\t除一以十三。充「對數多項式甲」以其。\\n\\t除一以十五。充「對數多項式甲」以其。\\n\\t除一以十七。充「對數多項式甲」以其。\\n\\t除一以十九。充「對數多項式甲」以其。\\n注曰「「 x^2 * f(x^2) = atanh(x)/x - 1 」」\\n\\n注曰「「對數。同Javascript之Math.log也。」」\\n今有一術。名之曰「對數」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「自然對數。」」\\n\\t有爻陽。名之曰「非常」。\\n\\t若「甲」大於零者。若「甲」不大於「至巨數」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「甲」等於零者。\\n\\t\\t\\t施「除以零」於負一。乃得矣。云云。\\n\\t\\t若「甲」小於零者。\\n\\t\\t\\t施「不可算」。乃得矣。云云。\\n\\t\\t乃得「甲」。\\n\\t云云。\\n\\n\\t注曰「「以對數屬性佐泰勒展開」」\\n\\t施「析浮點數」於「甲」。名之曰「析甲」。\\n\\t夫「析甲」之「「位」」。名之曰「位」。\\n\\t夫「析甲」之「「本」」。名之曰「本」。\\n\\t若「本」大於「二之平方根」者。\\n\\t\\t加一於「位」。昔之「位」者。今其是矣。\\n\\t\\t除二於「本」。昔之「本」者。今其是矣。\\n\\t云云。\\n\\t乘「二之對數」於「位」。名之曰「乙」。\\n\\t減「本」以一。名之曰「分子」。加「本」以一。除其於「分子」。名之曰「丙」。\\n\\t乘「丙」以「丙」。名之曰「二次冪」。\\n\\t施「求多項式」於「對數多項式甲」。於「二次冪」。乘其以「二次冪」。乘其以「丙」。加其於「丙」。\\n\\t乘其以二。加其以「乙」。乃得矣。\\n\\n是謂「對數」之術也。\\n\\n加二於「至大指」。乘其以「二之對數」。名之曰「指數上溢限」。\\n減「至小指」以「總算位」。減其以一。乘其以「二之對數」。名之曰「指數下溢限」。\\n\\n吾有一列。名之曰「指數多項式甲」。\\n\\t除一以三。充「指數多項式甲」以其。\\n\\t除負一以四十五。充「指數多項式甲」以其。\\n\\t除二以九百四十五。充「指數多項式甲」以其。\\n\\t除負一以四千七百二十五。充「指數多項式甲」以其。\\n\\t除二以九萬三千五百五十五。充「指數多項式甲」以其。\\n\\t除負一千三百八十二以六億三千八百五十一萬二千八百七十五。充「指數多項式甲」以其。\\n注曰「「 x^2 * f(x^2) = x/tanh(x) - 1 」」\\n\\n注曰「「指數。同Javascript之Math.exp也。」」\\n今有一術。名之曰「指數」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「自然指數。」」\\n\\t有爻陽。名之曰「非常」。\\n\\t若「甲」小於「指數上溢限」者。若「甲」大於「指數下溢限」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t\\t乃得「甲」也。\\n\\t\\t若「甲」大於零者。\\n\\t\\t\\t若「甲」大於「至巨數」者。\\n\\t\\t\\t\\t乃得「甲」。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t施「上溢」於一。乃得矣。\\n\\t\\t\\t云云。\\n\\t\\t若非。\\n\\t\\t\\t乘負一於「至巨數」。若「甲」小於其者。\\n\\t\\t\\t\\t乃得「浮點零」。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t施「下溢」於一。乃得矣。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t除「甲」以「二之對數」。取一以施「取整」。名之曰「移位數」。\\n\\t乘「二之對數上」於「移位數」。減其於「甲」。名之曰「乙」。\\n\\t乘「二之對數下」於「移位數」。減其於「乙」。名之曰「丙」。\\n\\t注曰「「除二之對數於甲。其餘者丙。以密率求之。」」\\n\\t除二於「丙」。名之曰「丁」。\\n\\t乘「丁」於「丁」。名之曰「戊」。\\n\\t施「求多項式」於「指數多項式甲」。於「戊」。乘其以「戊」。減其於「丁」。名之曰「己」。\\n\\t減「己」於一。除其於「丙」。加其於一。名之曰「庚」。\\n\\t施「浮點移位」於「庚」。於「移位數」。乃得矣。\\n是謂「指數」之術也。\\n\\n吾有一列。名之曰「對數多項式乙上」。充「對數多項式乙上」。\\n\\t以〇·三三三三一七二四二二九四七八五六五三九一一〇五。\\n\\t以〇·二〇四三一三三七三七九六七九〇〇七〇九三五三六。\\n吾有一列。名之曰「對數多項式乙下」。充「對數多項式乙下」。\\n\\t以〇·〇〇〇〇一六〇九一〇三八五四七六七九四三一。\\n\\t以負〇·〇〇四三一三三七三七九六七九〇一〇六七。\\n\\t以〇·一四二八五七一四二八五七一七六四六。\\n\\t以〇·一一一一一一一一一〇九九二五〇七五。\\n\\t以〇·〇九〇九〇九〇九二九八八二一八〇一八。\\n\\t以〇·〇七六九二二八七三三〇三六九五五四四。\\n\\t以〇·〇六六六七八三二一八五七九三二五一五。\\n\\t以〇·〇五八四三七二六四一三一四六七八六七。\\n\\t以〇·〇五九四四三八八四三七八七五一四八四。\\n注曰「「 x^2 * (f0(x^2) + f1(x^2)) = atanh(x)/x - 1 」」\\n\\n吾有一術。名之曰「正數之冪」。欲行是術。必先得二數。曰「底」。曰「指」。是術曰。\\n\\t注曰「「底為有限正數。指為有限數。」」\\n\\n\\t注曰「「以下求底之對數。」」\\n\\t施「析浮點數」於「底」。名之曰「析底」。\\n\\t夫「析底」之「「位」」。名之曰「位」。\\n\\t夫「析底」之「「本」」。名之曰「本」。\\n\\t若「本」大於「二之平方根」者。\\n\\t\\t加一於「位」。昔之「位」者。今其是矣。\\n\\t\\t除二於「本」。昔之「本」者。今其是矣。\\n\\t云云。\\n\\t減「本」以一。名之曰「丙」。\\n\\t加「本」以一。名之曰「丁」。\\n\\t除「丁」於「丙」。名之曰「戊」。\\n\\t夫「戊」。夫「戊」。夫「本」。取二以施「相乘得雙」。取二以施「加單於雙」。名之曰「己」。\\n\\t夫「丙」。夫「己」。取二以施「以單減雙得單」。乘其以負一。除其以「丁」。\\n\\t\\t夫「戊」。取二以施「以小加大得雙」。名之曰「庚」。\\n\\t施「雙數自乘」於「庚」。名之曰「辛」。\\n\\t夫「對數多項式乙下」。夫「辛」之一。取二以施「求多項式」。\\n\\t\\t夫「對數多項式乙上」之二。夫「辛」。取二以施「乘單於雙」。取二以施「加單於雙」。名之曰「壬」。\\n\\t夫「對數多項式乙上」之一。夫「壬」。取二以施「加單於雙」。夫「辛」。取二以施「乘雙於雙」。\\n\\t\\t夫「庚」。取二以施「乘雙於雙」。夫「庚」。取二以施「加雙於雙」。名之曰「癸」。\\n\\t夫「癸」之一。乘其以二。乘「位」於「二之對數上」。取二以施「相加得雙」。名之曰「子」。\\n\\t夫「癸」之二。乘其以二。名之曰「丑」。\\n\\t夫「子」之二。加其以「丑」。名之曰「寅」。\\n\\t乘「位」於「二之對數下」。加其以「寅」。夫「子」之一。取二以施「以小加大得雙」。名之曰「底之對數」。\\n\\n\\t注曰「「以下求冪之對數。」」\\n\\t夫「底之對數」之一。乘其以「指」。名之曰「卯」。\\n\\t若「卯」大於「指數上溢限」者。施「上溢」於一。乃得矣。\\n\\t或若「卯」小於「指數下溢限」者。施「下溢」於一。乃得矣。云云。\\n\\n\\t夫「指」。夫「底之對數」。取二以施「乘單於雙」。名之曰「冪之對數」。\\n\\t夫「冪之對數」之一。除其以「二之對數」。取一以施「取整」。名之曰「移位數」。\\n\\t乘「移位數」以「二之對數下」。乘「移位數」以「二之對數上」。取二以施「以小加大得雙」。\\n\\t\\t取一以施「雙數取反」。夫「冪之對數」。取二以施「加雙於雙」。名之曰「辰」。\\n\\t夫「辰」之一。取一以施「指數」。夫「移位數」。取二以施「浮點移位」。乃得矣。\\n是謂「正數之冪」之術也。\\n\\n注曰「「冪。同Javascript之Math.pow也。」」\\n今有一術。名之曰「冪」。欲行是術。必先得二數。曰「底」。曰「指」。乃行是術曰。\\n\\t若「指」等於零者。乃得一。\\n\\t或若「指」等於一者。乃得「底」。\\n\\t或若「指」等於二者。乘「底」於「底」。乃得矣。\\n\\t或若「指」等於負一者。除「底」於一。乃得矣。\\n\\t或若「指」等於五分者。施「平方根」於「底」。乃得矣。\\n\\t或若「指」等於三者。乘「底」於「底」。乘其於「底」。乃得矣。\\n\\t或若「指」等於負二者。除「底」於一。除其以「底」。乃得矣。\\n\\t或若「指」等於負五分者。施「平方根」於「底」。除其於一。乃得矣。\\n\\t云云。\\n\\n\\t若「底」等於一者。乃得一也。\\n\\n\\t施「不可算數乎」於「底」。若其然者。乃得「底」也。\\n\\t施「不可算數乎」於「指」。若其然者。乃得「指」也。\\n\\n\\t施「絕對」於「底」。名之曰「甲」。\\n\\t施「絕對」於「指」。名之曰「乙」。\\n\\t若「乙」大於「至巨數」者。\\n\\t\\t若「甲」等於一者。\\n\\t\\t\\t乃得一。\\n\\t\\t或若「甲」小於一者。\\n\\t\\t\\t若「指」大於零者。乃得「浮點零」。\\n\\t\\t\\t若非。乃得「乙」也。\\n\\t\\t若非。\\n\\t\\t\\t若「指」大於零者。乃得「乙」。\\n\\t\\t\\t若非。乃得「浮點零」也。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t吾有三爻。名之曰「指為偶數」。曰「指為奇數」。曰「指非整數」。\\n\\t除二於「乙」。所餘幾何。名之曰「丙」。\\n\\t若「丙」等於零者。昔之「指為偶數」者。今陽是矣。\\n\\t或若「丙」等於一者。昔之「指為奇數」者。今陽是矣。\\n\\t若非。昔之「指非整數」者。今陽是矣。\\n\\t云云。\\n\\n\\t若「底」等於零者。\\n\\t\\t若「指」小於零者。\\n\\t\\t\\t若「指為奇數」者。除「底」於一。乃得矣。\\n\\t\\t\\t若非。除「甲」於一。乃得矣。云云。\\n\\t\\t若非。\\n\\t\\t\\t若「指為奇數」者。乃得「底」。\\n\\t\\t\\t若非。乃得「甲」也。\\n\\t\\t云云。\\n\\t或若「甲」大於「至巨數」者。\\n\\t\\t若「指」小於零者。\\n\\t\\t\\t若「指為奇數」者。施「正負」於「底」。乘其於「浮點零」。乃得矣。\\n\\t\\t\\t若非。乃得「浮點零」也。\\n\\t\\t若非。\\n\\t\\t\\t若「指為奇數」者。乃得「底」。\\n\\t\\t\\t若非。乃得「甲」也。\\n\\t\\t云云。\\n\\t或若「底」小於零者。\\n\\t\\t若「指非整數」者。\\n\\t\\t\\t施「不可算」。乃得矣。\\n\\t\\t或若「指為奇數」者。\\n\\t\\t\\t施「正數之冪」於「甲」於「指」。乘其以負一。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t施「正數之冪」於「甲」於「指」。乃得矣。\\n是謂「冪」之術也。\\n\\n有數四分一釐七毫三絲一忽九微。名之曰「平方根常數甲」。\\n注曰「「 (2^0.5 - 1) * sqrt((2^0.25 + 2^-0.25) / 2) 」」\\n減一於「二之平方根」。乘其以二。名之曰「平方根常數乙」。\\n乘「上位冪」於「微位冪」。乘其以「進制」。乘其以「進制」。名之曰「平方根下溢界」。\\n\\n注曰「「平方根。同Javascript之Math.sqrt也。」」\\n今有一術。名之曰「平方根」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「甲」不小於「平方根下溢界」者。若「甲」小於「巨位冪」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「甲」等於零者。\\n\\t\\t\\t乃得「浮點零」也。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t\\t乃得「甲」也。\\n\\t\\t若「甲」大於「至巨數」者。\\n\\t\\t\\t乃得「甲」也。\\n\\t\\t若「甲」小於零者。\\n\\t\\t\\t施「不可算」。乃得矣。云云。\\n\\t\\t若「甲」不大於「平方根下溢界」者。\\n\\t\\t\\t乘「甲」以「上位冪」。乘其以「上位冪」。乘其以「進制」。乘其以「進制」。取一以施「平方根」。\\n\\t\\t\\t乘其以「下位冪」。乘其以「退制」。乃得矣。\\n\\t\\t云云。\\n\\t\\t若「甲」不小於「巨位冪」者。\\n\\t\\t\\t乘「甲」以「退制」。乘其以「退制」。取一以施「平方根」。\\n\\t\\t\\t乘其以「進制」。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t施「析浮點數」於「甲」。名之曰「析甲」。\\n\\t夫「析甲」之「「位」」。除其以二。名之曰「半位」。\\n\\t施「取底」於「半位」。名之曰「整半位」。\\n\\t夫「析甲」之「「本」」。加其以「二之平方根」。乘其以「平方根常數甲」。名之曰「丁」。\\n\\t減「半位」以「整半位」。乘其以「平方根常數乙」。加其以一。乘其以「丁」。名之曰「戊」。\\n\\t施「求進冪」於「整半位」。名之曰「己」。\\n\\t乘「己」於「戊」。名之曰「乙」。\\n\\t注曰「「以上求疏根」」\\n\\n\\t批曰「「蓋用牛頓法耳」」\\n\\t為是三遍。\\n\\t\\t除「甲」以「乙」。加其以「乙」。除其以二。名之曰「丙」。\\n\\t\\t昔之「乙」者。今「丙」是矣。\\n\\t云云。\\n\\n\\t注曰「「以下校末位。」」\\n\\t乘「己」以「下位冪」。名之曰「庚」。\\n\\t減「庚」於「乙」。名之曰「下數」。\\n\\t施「相乘得雙」於「乙」。於「下數」。名之曰「下積」。\\n\\t夫「下積」之一。若其大於「甲」者。\\n\\t\\t乃得「下數」也。\\n\\t夫「下積」之一。若其等於「甲」者。夫「下積」之二。若其不小於零者。\\n\\t\\t乃得「下數」。\\n\\t云云。云云。\\n\\t注曰「「若甲等於中數乘下數者。其平方根不足下半間數。捨餘得下數也。」」\\n\\n\\t加「庚」於「乙」。名之曰「上數」。\\n\\t施「相乘得雙」於「乙」。於「上數」。名之曰「上積」。\\n\\t夫「上積」之一。若其小於「甲」者。\\n\\t\\t乃得「上數」也。\\n\\t夫「上積」之一。若其等於「甲」者。夫「上積」之二。若其小於零者。\\n\\t\\t乃得「上數」。\\n\\t云云。云云。\\n\\t注曰「「若甲等於中數乘上數者。其平方根不足上半間數。捨餘得中數也。」」\\n\\n\\t乃得「乙」。\\n是謂「平方根」之術也。\\n\\n注曰「「絕對。同Javascript之Math.abs也。」」\\n今有一術。名之曰「絕對」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。乃得矣。\\n是謂「絕對」之術也。\\n\\n注曰「「取頂。同Javascript之Math.ceil也。」」\\n今有一術。名之曰「取頂」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t乘負一於「甲」。取一以施「取底」。乘其以負一。乃得矣。\\n是謂「取頂」之術也。\\n\\n注曰「「取底。同Javascript之Math.floor也。」」\\n今有一術。名之曰「取底」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t注曰「「JavaScript者。除負以正。所餘負也。Python者。除負以正。所餘正也。」」\\n\\t除「乙」以一。所餘幾何。名之曰「丙」。\\n\\t若「丙」大於零者。\\n\\t\\t減「丙」於「乙」。乘其以「符」。名之曰「丁」。\\n\\t\\t若「符」小於零者。\\n\\t\\t\\t減一於「丁」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t乃得「丁」也。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「取底」之術也。\\n\\n注曰「「取整。同Javascript之Math.round, but rounded away from zero when the fractional part is exactly 0.5也。」」\\n今有一術。名之曰「取整」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t除「乙」以一。所餘幾何。名之曰「丙」。\\n\\t若「丙」等於「丙」者。\\n\\t\\t若「丙」小於五分者。\\n\\t\\t\\t減「丙」於「乙」。乘其以「符」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t減「丙」於「乙」。加其以一。乘其以「符」。乃得矣。\\n\\t\\t云云。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「取整」之術也。\\n\\n注曰「「捨餘。同Javascript之Math.trunc也。」」\\n今有一術。名之曰「捨餘」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t除「乙」以一。所餘幾何。名之曰「丙」。\\n\\t若「丙」等於「丙」者。\\n\\t\\t減「丙」於「乙」。乘其以「符」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「捨餘」之術也。\\n\\n注曰「「正負。同Javascript之Math.sign也。」」\\n今有一術。名之曰「正負」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t若「甲」大於零者。乃得一也。\\n\\t若「甲」小於零者。乃得負一也。\\n\\t乃得「甲」。\\n是謂「正負」之術也。\\n\";","export default \"注曰「「求和。同Javascript之reduce((a,b)=>a+b)也。」」\\n今有一術。名之曰「求和」。欲行是術。必先得一列。曰「列」。乃行是術曰。\\n吾有一數。曰零。名之曰「和」。凡「列」中之「數」。加「和」以「數」。\\n名之曰「和」。云云。乃得「和」。是謂「求和」之術也。\\n\\n今有一術。名之曰「算術平均」。欲行是術。必先得一列。曰「列」。乃行是術曰。\\n施「求和」於「列」。名之曰「和」。夫「列」之長。名之曰「長」。除「和」以「長」。\\n名之曰「算術平均數」。乃得「算術平均數」。是謂「算術平均」之術也。\\n\\n今有一術。名之曰「方差」。欲行是術。必先得一列。曰「列」。乃行是術曰。\\n施「算術平均」於「列」。名之曰「算術平均數」。夫「列」之長。名之曰「長」。\\n吾有一數。曰零。名之曰「平方和」。凡「列」中之「數」。減「數」以「算術平均數」。\\n名之曰「偏差」。乘「偏差」以「偏差」。名之曰「偏差之平方」。\\n加「偏差之平方」以「平方和」。名之曰「平方和」。云云。除「平方和」以「長」。\\n名之曰「方差之數」。乃得「方差之數」。是謂「方差」之術也。\\n\";","import {\n  ASCNode,\n  isASCNodeOperator,\n  Token,\n  IdenType,\n  TypeSignature,\n  TypeScope\n} from \"./types\";\nimport { defaultAssert, isRoman } from \"./utils\";\n\nfunction printType(t: IdenType, n = 0, d = 0): string {\n  if (d > 100) {\n    return \"...\";\n  }\n  if (t.type == \"any\") {\n    let abc = \"abcdefghijklmnopqrstuvwxyz\";\n    if (n < 26) {\n      return \"'\" + abc[n];\n    } else {\n      return \"'\" + abc[Math.floor(n / 26)] + abc[n % 26];\n    }\n  }\n  if (t.type == \"arr\") {\n    return \"(\" + printType(t.element, n, d + 1) + \") arr\";\n  }\n  if (t.type == \"fun\") {\n    return (\n      \"(\" +\n      printType(t.in, n, d + 1) +\n      \") -> (\" +\n      printType(t.out, n + 1, d + 1) +\n      \")\"\n    );\n  }\n  if (t.type == \"obj\") {\n    let s = \"{ \";\n    let m = 0;\n    for (let k in t.fields) {\n      s += k + \" : (\" + printType(t.fields[k], n + m, d + 1) + \"), \";\n      m++;\n    }\n    if (s.length > 2) {\n      s = s.slice(0, -2);\n    }\n    s += \" }\";\n    return s;\n  }\n  return t.type;\n}\n\nfunction printSignature(signature: TypeSignature) {\n  let s = \"\";\n  signature = signature.filter(x => Object.keys(x[1]).length);\n  signature.sort((x, y) => x[0][0] - y[0][0]);\n  for (let i = 0; i < signature.length; i++) {\n    for (let j = signature.length - 1; j >= 0; j--) {\n      if (signature[j][0][1] <= signature[i][0][0]) {\n        signature[j][0][1] = 1 / 0;\n        s += \"  \".repeat(signature[j][0][2]) + \"}\\n\";\n      }\n    }\n    s +=\n      \"  \".repeat(signature[i][0][2]) +\n      `[${signature[i][0][0]}-${signature[i][0][1]}] {\\n`;\n    for (let k in signature[i][1]) {\n      s +=\n        \"  \".repeat(signature[i][0][2] + 1) +\n        k +\n        \" : \" +\n        printType(signature[i][1][k]) +\n        \"\\n\";\n    }\n  }\n  for (let j = signature.length - 1; j >= 0; j--) {\n    if (signature[j][0][1] < 1 / 0) {\n      s += \"  \".repeat(signature[j][0][2]) + \"}\\n\";\n    }\n  }\n  return s;\n}\n\nfunction typecheck(asc: ASCNode[], assert = defaultAssert()) {\n  let imported: string[] = [];\n  let strayvar: IdenType[] = [];\n  let scope: TypeScope[] = [{}];\n  let scopestarts: ASCNode[] = [{ pos: 0, op: \"global\" }];\n  let signature: TypeSignature = [];\n  let funstack: string[] = [];\n  let funretcnt: number[] = [];\n  let prevobj = \"\";\n  let took = 0;\n\n  function checkscopei(i: number, name: string) {\n    if (scope[i][name]) {\n      return scope[i][name];\n    }\n    if (!scope[i - 1]) {\n      return;\n    }\n    for (let j = funstack.length - 1; j >= 0; j--) {\n      if (scope[i - 1][funstack[j]]) {\n        let ptr = scope[i - 1][funstack[j]];\n        while (ptr.type == \"fun\") {\n          if (ptr.in.name == name) {\n            return ptr.in;\n          }\n          ptr = ptr.out;\n        }\n      }\n    }\n  }\n\n  function checkscopeall(name: string) {\n    for (let i = scope.length - 1; i >= 0; i--) {\n      let b = checkscopei(i, name);\n      if (b) {\n        return b;\n      }\n    }\n    if (imported.includes(name)) {\n      return inittype(\"any\"); //for now\n    }\n    if (isRoman(name)) {\n      //backdoor for native code\n      return inittype(\"any\");\n    }\n\n    return undefined;\n  }\n\n  function checkscopethis(name: string, pos: number) {\n    assert(\n      \"Scope stack depleted, possibly due to extraneous end-block statement.\",\n      pos,\n      scope.length\n    );\n    return checkscopei(scope.length - 1, name);\n  }\n\n  function inittype(type: IdenType[\"type\"]): IdenType {\n    if (type == \"any\") {\n      return { type: \"any\" };\n    }\n    if (type == \"nil\") {\n      return { type: \"nil\" };\n    }\n    let x: IdenType = { type: type };\n    if (type == \"fun\") {\n      x.in = { type: \"any\" };\n      x.out = { type: \"any\" };\n    } else if (type == \"obj\") {\n      x.fields = {};\n    } else if (type == \"arr\") {\n      x.element = { type: \"any\" };\n    }\n    return x;\n  }\n\n  function gettype(tok: Token): IdenType {\n    if (tok[0] == \"lit\") {\n      return inittype(\"str\");\n    } else if (tok[0] == \"bool\") {\n      return inittype(\"bol\");\n    } else if (tok[0] == \"num\") {\n      return inittype(\"num\");\n    } else if (tok[0] == \"iden\") {\n      return checkscopeall(tok[1]);\n    } else if (tok[0] == \"ans\") {\n      var s = strayvar[strayvar.length - 1];\n      // strayvar = [];\n      return s;\n    }\n    assert(`[Type] Expecting value, found '${tok[0]}'`, tok[2], false);\n  }\n\n  function objfield(t: IdenType, x: string) {\n    if (t.isarg) {\n      t.fields[x] = inittype(\"any\");\n    }\n    return t.fields[x];\n  }\n\n  function scopepush(node: ASCNode) {\n    scope.push({});\n    scopestarts.push(node);\n  }\n\n  function scopepop(node: ASCNode, ...acceptScopeStartOps) {\n    let ss = scopestarts.pop();\n    let s = scope.pop();\n    assert(\n      `[Type] Unexpected '${node.op}' in '${ss.op}' block`,\n      node.pos,\n      acceptScopeStartOps.indexOf(ss.op) >= 0\n    );\n    signature.push([[ss.pos, node.pos, scope.length], s]);\n  }\n\n  function logscope() {\n    console.dir(scope, { depth: null, maxArrayLength: null });\n  }\n\n  function typeEqual(a: IdenType, b: IdenType) {\n    if (a.type == \"any\") {\n      return b;\n    }\n    if (b.type == \"any\") {\n      return a;\n    }\n    if (a.type != b.type) {\n      return false;\n    }\n    if (a.type == b.type) {\n      if (a.type == \"arr\") {\n        if (typeEqual(a.element, b.element)) {\n          return a;\n        }\n        if (b.element) {\n          return b;\n        }\n        if (a.element) {\n          return a;\n        }\n      }\n      if (a.type == \"obj\") {\n        var x;\n        var y;\n        if (Object.keys(a.fields).length > Object.keys(b.fields).length) {\n          [x, y] = [b, a];\n        } else {\n          [x, y] = [a, b];\n        }\n        for (var k in x.fields) {\n          if (!typeEqual(x.fields[k], y.fields[k])) {\n            return false;\n          }\n        }\n        return y;\n      }\n      return a;\n    }\n    return false;\n  }\n\n  function typeassert(who: string, want: IdenType[], got: Token, pos: number) {\n    let t = gettype(got);\n    assert(`[Type] Undeclared variable '${got[1]}'`, pos, t);\n\n    let ok = false;\n    let ut = [];\n    for (let i = 0; i < want.length; i++) {\n      ut.push(\"(\" + printType(want[i]) + \")\");\n      if (typeEqual(want[i], t)) {\n        ok = true;\n        break;\n      }\n    }\n    assert(\n      `[Type] ${who} expecting ${ut.join(\"|\")}, found '${got[1]}' : ${printType(\n        t\n      )}`,\n      pos,\n      ok\n    );\n  }\n\n  for (let i = 0; i < asc.length; i++) {\n    var a = asc[i];\n    // console.log(',,,,,,,',a)\n\n    if (a.op == \"var\") {\n      // console.log(a)\n      for (let j = 0; j < a.count; j++) {\n        if (j >= a.names.length) {\n          strayvar.push(inittype(a.type));\n          continue;\n        }\n\n        assert(\n          `[Type] Variable '${a.names[j]}' redeclared in the same scope`,\n          a.pos,\n          !checkscopethis(a.names[j], a.pos)\n        );\n\n        scope[scope.length - 1][a.names[j]] = inittype(a.type);\n        if (a.type == \"fun\") {\n          funstack.push(a.names[j]);\n          funretcnt.push(0);\n        } else if (a.type == \"obj\") {\n          prevobj = a.names[j];\n        }\n      }\n    } else if (a.op == \"print\") {\n      //pass\n    } else if (a.op == \"fun\") {\n      let ptr = scope[scope.length - 1][funstack[funstack.length - 1]];\n      for (let j = 0; j < a.arity; j++) {\n        ptr.in = inittype(a.args[j].type);\n        if (a.args[j].type == \"obj\") {\n          ptr.in.isarg = true;\n        }\n        ptr.in.name = a.args[j].name;\n        if (j != a.arity - 1) {\n          ptr.out = inittype(\"fun\");\n          ptr = ptr.out;\n        }\n      }\n    } else if (a.op == \"funbody\") {\n      if (asc[i - 1].op != \"fun\") {\n        let ptr = scope[scope.length - 1][funstack[funstack.length - 1]];\n        ptr.in = inittype(\"nil\");\n      }\n      scopepush(a);\n    } else if (a.op == \"funend\") {\n      var f = funstack.pop();\n      var n = funretcnt.pop();\n      scopepop(a, \"funbody\");\n\n      if (n == 0) {\n        var ptr = scope[scope.length - 1][f];\n        while (ptr.out.type == \"fun\") {\n          ptr = ptr.out;\n        }\n        ptr.out = inittype(\"nil\");\n      }\n    } else if (a.op == \"objend\") {\n      //pass\n    } else if (a.op == \"objbody\") {\n      //pass\n    } else if (a.op == \"prop\") {\n      scope[scope.length - 1][prevobj].fields[a.name.slice(1, -1)] = inittype(\n        a.type\n      );\n    } else if (a.op == \"end\") {\n      scopepop(a, \"if\", \"else\", \"for\", \"whiletrue\", \"whilen\");\n    } else if (a.op == \"if\") {\n      if (a.elseif) {\n        scopepop(a, \"if\");\n      }\n      scopepush(a);\n    } else if (a.op == \"else\") {\n      scopepop(a, \"if\");\n      scopepush(a);\n    } else if (a.op == \"return\") {\n      funretcnt[funretcnt.length - 1]++;\n      let ptr;\n      for (let j = 1; j < scope.length; j++) {\n        ptr = scope[scope.length - 1 - j][funstack[funstack.length - 1]];\n        if (ptr) {\n          break;\n        }\n      }\n      while (ptr.out.type == \"fun\") {\n        ptr = ptr.out;\n      }\n      if (a.value == undefined) {\n        ptr.out = inittype(\"nil\");\n      } else {\n        let ty = gettype(a.value);\n        // console.log(strayvar)\n        // console.log(funstack[funstack.length-1],ty,ptr)\n        if (ptr.out.type == \"any\" || ptr.out.type == \"nil\") {\n          ptr.out = Object.assign({}, ty);\n          delete ptr.out.name;\n        } else {\n          // console.log(ptr.out.type,ty.type)\n          typeassert(`Function return`, [ptr.out], a.value, a.pos);\n\n          ptr.out = typeEqual(ptr.out, gettype(a.value));\n        }\n      }\n    } else if (isASCNodeOperator(a)) {\n      let op = a.op.slice(2);\n\n      let otype;\n      if (op == \"+\") {\n        typeassert(\n          `${op} operator`,\n          [inittype(\"num\"), inittype(\"str\")],\n          a.lhs,\n          a.pos\n        );\n        typeassert(\n          `${op} operator`,\n          [inittype(\"num\"), inittype(\"str\")],\n          a.rhs,\n          a.pos\n        );\n        otype = Object.assign({}, typeEqual(gettype(a.lhs), gettype(a.rhs)));\n      } else if ([\"-\", \"*\", \"/\", \"%\"].includes(op)) {\n        typeassert(`${op} operator`, [inittype(\"num\")], a.lhs, a.pos);\n        typeassert(`${op} operator`, [inittype(\"num\")], a.rhs, a.pos);\n        otype = inittype(\"num\");\n      } else if ([\"||\", \"&&\"].includes(op)) {\n        typeassert(`${op} operator`, [inittype(\"bol\")], a.lhs, a.pos);\n        typeassert(`${op} operator`, [inittype(\"bol\")], a.rhs, a.pos);\n        otype = inittype(\"bol\");\n      }\n      strayvar.push(otype);\n      // console.log(strayvar)\n    } else if (a.op == \"name\") {\n      for (let j = a.names.length - 1; j >= 0; j--) {\n        scope[scope.length - 1][a.names[j]] = strayvar.pop();\n      }\n    } else if (a.op == \"call\") {\n      let ty = gettype(a.fun);\n\n      if (ty == undefined) {\n        // damn hoisting\n        strayvar.push(inittype(\"any\"));\n      } else {\n        typeassert(`Call function`, [inittype(\"fun\")], a.fun, a.pos);\n\n        let args = [];\n        if (a.args) {\n          args = a.args.slice();\n        }\n        if (a.pop) {\n          for (let j = 0; j < took; j++) {\n            args.unshift(strayvar.pop());\n          }\n        }\n\n        let ptr = ty;\n\n        for (let j = 0; j < args.length; j++) {\n          if (ptr.type == \"any\") {\n            ptr = inittype(\"fun\");\n          }\n          let ta = ptr.in;\n          if (a.pop) {\n            assert(\n              `Function argument expecting ${printType(ta)}, found ${printType(\n                args[j]\n              )}`,\n              a.pos,\n              typeEqual(args[j], ta)\n            );\n          } else {\n            typeassert(`Function argument`, [ta], args[j], a.pos);\n          }\n          ptr = ptr.out;\n        }\n\n        if (args.length == 0 && ptr.type == \"fun\") {\n          ptr = ptr.out;\n        }\n\n        strayvar.push(Object.assign({}, ptr));\n      }\n    } else if (a.op == \"subscript\") {\n      // typeassert(`Subscript operator LHS`,[inittype('arr'),inittype('obj')],a.container,a.pos)\n\n      if (a.value[0] == \"ctnr\" && a.value[1] == \"rest\") {\n        typeassert(\n          `Subscript operator LHS`,\n          [inittype(\"arr\"), inittype(\"str\")],\n          a.container,\n          a.pos\n        );\n\n        let ty = gettype(a.container);\n        strayvar.push(Object.assign({}, ty));\n      } else {\n        typeassert(\n          `Subscript operator RHS`,\n          [inittype(\"num\"), inittype(\"str\")],\n          a.value,\n          a.pos\n        );\n\n        if (gettype(a.value).type == \"str\") {\n          typeassert(\n            `Subscript operator LHS`,\n            [inittype(\"obj\")],\n            a.container,\n            a.pos\n          );\n          let ty = gettype(a.container);\n          if (ty.type == \"any\") {\n            ty.type = \"obj\";\n            ty.fields = {};\n            ty.fields[a.value[1].slice(1, -1)] = inittype(\"any\");\n            ty.isarg = true;\n          }\n          assert(\n            `[Type] Property ${a.value[1]} does not exist in obj ${printType(\n              ty\n            )}`,\n            a.pos,\n            objfield(ty, a.value[1].slice(1, -1))\n          );\n\n          strayvar.push(Object.assign({}, ty.fields[a.value[1].slice(1, -1)]));\n        } else {\n          typeassert(\n            `Subscript operator LHS`,\n            [inittype(\"arr\"), inittype(\"str\")],\n            a.container,\n            a.pos\n          );\n          let ty = gettype(a.container);\n\n          if (ty.type == \"str\") {\n            strayvar.push(inittype(\"str\"));\n          } else {\n            if (ty.type == \"any\") {\n              // ty = inittype('arr')\n              ty.type = \"arr\";\n              ty.element = { type: \"any\" };\n              // console.log(gettype(a.container))\n              // console.log(ty)\n              // process.exit()\n              // strayvar.push(inittype('any'))\n            }\n            strayvar.push(Object.assign({}, ty.element));\n          }\n        }\n      }\n    } else if (a.op == \"cat\") {\n      typeassert(`Concat`, [inittype(\"arr\")], a.containers[0], a.pos);\n      let typ = gettype(a.containers[0]);\n      let olt = typ;\n      for (let j = 1; j < a.containers.length; j++) {\n        typ = typeEqual(typ, gettype(a.containers[j]));\n        if (!typ) {\n          typeassert(`Concat`, [olt], a.containers[j], a.pos);\n        }\n        olt = typ;\n      }\n      strayvar.push(Object.assign({}, typ));\n    } else if (a.op == \"push\") {\n      typeassert(`Push LHS`, [inittype(\"arr\")], a.container, a.pos);\n      let typy = gettype(a.container);\n      let typ = typy.element;\n      if ((typy.type = \"any\")) {\n        typ = inittype(\"any\");\n      }\n      let olt = typ;\n      for (let j = 0; j < a.values.length; j++) {\n        // console.log(a.values[j],gettype(a.values[j]))\n        typ = typeEqual(typ, gettype(a.values[j]));\n        if (!typ) {\n          typeassert(`Push RHS`, [olt], a.values[j], a.pos);\n        }\n        olt = typ;\n      }\n\n      gettype(a.container).element = Object.assign({}, typ);\n    } else if (a.op == \"for\") {\n      scopepush(a);\n      typeassert(`For-each LHS`, [inittype(\"arr\")], a.container, a.pos);\n      scope[scope.length - 1][a.iterator] =\n        gettype(a.container).element || inittype(\"any\");\n    } else if (a.op == \"whiletrue\") {\n      scopepush(a);\n    } else if (a.op == \"whilen\") {\n      scopepush(a);\n    } else if (a.op == \"break\") {\n      //pass\n    } else if (a.op == \"continue\") {\n      //pass\n    } else if (a.op == \"not\") {\n      strayvar.push(inittype(\"bol\"));\n    } else if (a.op == \"reassign\") {\n      let tl = gettype(a.lhs);\n\n      let tlv = tl;\n\n      if (a.lhssubs) {\n        let tls = gettype(a.lhssubs);\n        typeassert(\n          `Reassignment LHS subscript`,\n          [inittype(\"str\"), inittype(\"num\")],\n          a.lhssubs,\n          a.pos\n        );\n\n        if (tls.type == \"str\") {\n          typeassert(\n            `Reassignment LHS container`,\n            [inittype(\"obj\")],\n            a.lhs,\n            a.pos\n          );\n          if (tl.type == \"any\") {\n            tlv = inittype(\"any\");\n          } else {\n            tlv = objfield(tl, a.lhssubs[1].slice(1, -1));\n          }\n        } else {\n          typeassert(\n            `Reassignment LHS container`,\n            [inittype(\"arr\")],\n            a.lhs,\n            a.pos\n          );\n          if (tl.type == \"any\") {\n            tlv = inittype(\"any\");\n          } else {\n            tlv = tl.element;\n          }\n        }\n      }\n      if (a.del) {\n      } else {\n        let tr = gettype(a.rhs);\n        let trv = tr;\n        if (a.rhssubs) {\n          let trs = gettype(a.rhssubs);\n\n          typeassert(\n            `Reassignment RHS subscript`,\n            [inittype(\"str\"), inittype(\"num\")],\n            a.rhssubs,\n            a.pos\n          );\n          if (trs.type == \"str\") {\n            typeassert(\n              `Reassignment RHS container`,\n              [inittype(\"obj\")],\n              a.rhs,\n              a.pos\n            );\n            if (tr.type == \"any\") {\n              trv = inittype(\"any\");\n            } else {\n              trv = objfield(tr, a.rhssubs[1].slice(1, -1));\n            }\n          } else {\n            typeassert(\n              `Reassignment RHS container`,\n              [inittype(\"arr\")],\n              a.rhs,\n              a.pos\n            );\n            if (tr.type == \"any\") {\n              trv = inittype(\"any\");\n            } else {\n              trv = tr.element;\n            }\n          }\n        }\n        assert(`[Type] Reassignment LHS is not declared`, a.pos, tlv);\n        assert(`[Type] Reassignment RHS is not declared`, a.pos, trv);\n        // console.log(a,tlv,trv,tl,tr)\n        let typ = typeEqual(tlv, trv);\n        // console.log(a.lhs,a.rhs,gettype(a.rhs),tl,tr,tlv,trv)\n        assert(\n          `[Type] Reassignment type mismatch: LHS:${printType(\n            tlv\n          )} RHS:${printType(trv)}`,\n          a.pos,\n          typ\n        );\n      }\n    } else if (a.op == \"length\") {\n      typeassert(\n        `Length operator`,\n        [inittype(\"arr\"), inittype(\"str\")],\n        a.container,\n        a.pos\n      );\n      strayvar.push(inittype(\"num\"));\n    } else if (a.op == \"temp\") {\n      strayvar.push(gettype(a.iden));\n    } else if (a.op == \"discard\") {\n      strayvar = [];\n    } else if (a.op == \"take\") {\n      took = a.count;\n    } else if (a.op == \"import\") {\n      imported = imported.concat(a.iden);\n    } else if (a.op == \"try\") {\n      scopepush(a);\n    } else if (a.op == \"catch\") {\n      scopepop(a, \"try\");\n      scopepush(a);\n    } else if (a.op == \"catcherr\") {\n      scopepop(a, \"catch\", \"catcherr\");\n      scopepush(a);\n      if (a.name != undefined) {\n        var x = inittype(\"any\");\n        x.fields = {\n          名: inittype(\"str\"),\n          文: inittype(\"str\"),\n          蹤: inittype(\"str\")\n        };\n        scope[scope.length - 1][a.name] = x;\n      }\n    } else if (a.op == \"tryend\") {\n      scopepop(a, \"catch\", \"catcherr\");\n    } else if (a.op == \"throw\") {\n    } else if (a.op == \"comment\") {\n      //pass\n    } else {\n    }\n  }\n  if (a) {\n    scopepop({ pos: a.pos, op: \"EOF\" }, \"global\");\n  }\n  // console.log(scope.length)\n  // console.dir(signature,{maxArrayLength:null,depth:null})\n\n  // console.log(printSignature(signature))\n  // process.exit()\n  return signature;\n}\n\nexport { typecheck, printType, printSignature };\n","export type TargetLanguages = \"js\" | \"py\" | \"rb\";\nexport type RomanizeSystem = \"none\" | \"pinyin\" | \"unicode\" | \"baxter\";\nexport type LogCallback = (...args: any[]) => void;\nexport type CacheObject = Record<string, string>;\nexport type StandardLibraryObject = Record<string, string> &\n  Record<TargetLanguages, Record<string, string>>;\n\nexport interface CompileOnlyOptions {\n  lang: TargetLanguages;\n  romanizeIdentifiers: RomanizeSystem;\n  resetVarCnt: boolean;\n  logCallback: LogCallback;\n  errorCallback: LogCallback;\n  lib: StandardLibraryObject;\n  strict: Boolean;\n}\n\nexport interface ImportOptions {\n  entryFilepath?: string;\n  importPaths: string | string[];\n  importCache: CacheObject;\n  importContext: Record<string, string | { entry: string; src?: string }>;\n  allowHttp: boolean;\n  trustedHosts: string[];\n  requestTimeout: number;\n}\n\nexport type CompileOptions = CompileOnlyOptions & ImportOptions;\n\nexport interface MarcoOptions {\n  lib: CompileOnlyOptions[\"lib\"];\n  lang: TargetLanguages;\n  importOptions: ImportOptions;\n}\n\nexport interface TranspilerOptions {\n  imports: string[];\n}\n\nexport interface ExecuteOptions {\n  lang: TargetLanguages;\n  outputHanzi: boolean;\n  scoped: boolean;\n  output: LogCallback;\n}\n\nexport type MacroDefinition = [string, string];\n\nexport interface ImportedModule {\n  moduleName: string;\n  src: string;\n  entry?: string;\n}\n\nexport type TokenType =\n  | \"ans\"\n  | \"assgn\"\n  | \"bool\"\n  | \"call\"\n  | \"cmp\"\n  | \"comment\"\n  | \"ctnr\"\n  | \"ctrl\"\n  | \"data\"\n  | \"decl\"\n  | \"discard\"\n  | \"expr\"\n  | \"iden\"\n  | \"import\"\n  | \"lit\"\n  | \"lop\"\n  | \"macro\"\n  | \"mod\"\n  | \"name\"\n  | \"not\"\n  | \"num\"\n  | \"op\"\n  | \"opord\"\n  | \"print\"\n  | \"rassgn\"\n  | \"take\"\n  | \"try\"\n  | \"type\"\n  | \"throw\";\n\nexport type Token = [TokenType, string | undefined, number] | [\"ans\"];\n\nexport interface ASCNodeCommon {\n  pos: number;\n}\n\nexport interface ASCNodeOperator {\n  op: \"op+\" | \"op-\" | \"op/\" | \"op%\";\n  lhs?: Token;\n  rhs?: Token;\n}\n\nexport interface ASCNodeReturn {\n  op: \"return\";\n  value?: Token;\n}\n\nexport interface ASCNodeIf {\n  op: \"if\";\n  test: Token[];\n  elseif?: boolean;\n  not?: boolean;\n}\n\nexport interface ASCNodeFunction {\n  op: \"fun\";\n  arity: number;\n  args: { name: string; type: string }[];\n  elseif?: boolean;\n  not?: boolean;\n}\n\nexport interface ASCNodeWithValue {\n  op: \"not\" | \"whilen\" | \"comment\";\n  value: Token;\n}\n\nexport interface ASCNodeName {\n  op: \"name\";\n  names: string[];\n}\n\nexport interface ASCNodeReassign {\n  op: \"reassign\";\n  lhs: Token;\n  rhs?: Token;\n  lhssubs?: Token;\n  rhssubs?: Token;\n  del?: boolean;\n}\n\nexport interface ASCNodeCat {\n  op: \"cat\";\n  containers: Token[];\n}\n\nexport interface ASCNodeFor {\n  op: \"for\";\n  container: Token;\n  iterator: string;\n}\n\nexport interface ASCNodeCall {\n  op: \"call\";\n  fun: Token;\n  args?: Token[];\n  pop?: boolean;\n}\n\nexport interface ASCNodeLength {\n  op: \"length\";\n  container: Token;\n}\n\nexport interface ASCNodeTake {\n  op: \"take\";\n  count: number;\n}\n\nexport interface ASCNodeTemp {\n  op: \"temp\";\n  iden: Token;\n}\n\nexport interface ASCNodeImport {\n  op: \"import\";\n  file: string;\n  iden: string[];\n}\n\nexport interface ASCNodePush {\n  op: \"push\";\n  container: Token;\n  values: Token[];\n}\n\nexport interface ASCNodeWithError {\n  op: \"catcherr\" | \"throw\";\n  error?: Token;\n  message?: Token;\n  name?: string;\n}\n\nexport interface ASCNodeSubscript {\n  op: \"subscript\";\n  container: Token;\n  value: Token;\n}\n\nexport interface ASCNodeVariable {\n  op: \"var\";\n  count: number;\n  type: string;\n  values: (Token | [])[];\n  public: boolean;\n  names?: string[];\n}\n\nexport interface ASCNodePropertry {\n  op: \"prop\";\n  type: string;\n  name: string;\n  value: Token;\n}\n\nexport interface ASCNodeGlobal {\n  op: \"global\";\n}\n\nexport interface ASCNodeEOF {\n  op: \"EOF\";\n}\n\nexport interface ASCNodeSimple {\n  op:\n    | \"break\"\n    | \"end\"\n    | \"print\"\n    | \"else\"\n    | \"continue\"\n    | \"objbody\"\n    | \"funbody\"\n    | \"whiletrue\"\n    | \"try\"\n    | \"tryend\"\n    | \"catch\"\n    | \"discard\"\n    | \"funend\"\n    | \"objend\";\n}\n\nexport type ASCNode = ASCNodeCommon &\n  (\n    | ASCNodeOperator\n    | ASCNodeSimple\n    | ASCNodeReturn\n    | ASCNodeIf\n    | ASCNodeFunction\n    | ASCNodeWithValue\n    | ASCNodeName\n    | ASCNodeReassign\n    | ASCNodeImport\n    | ASCNodeTake\n    | ASCNodeWithError\n    | ASCNodeTemp\n    | ASCNodeCat\n    | ASCNodeFor\n    | ASCNodeLength\n    | ASCNodePush\n    | ASCNodeCall\n    | ASCNodeSubscript\n    | ASCNodeVariable\n    | ASCNodePropertry\n    | ASCNodeGlobal\n    | ASCNodeEOF\n  );\n\nexport function isASCNodeOperator(\n  node: ASCNode\n): node is ASCNodeCommon & ASCNodeOperator {\n  return node.op.startsWith(\"op\");\n}\n\nexport interface IdenType {\n  type: \"any\" | \"nil\" | \"fun\" | \"obj\" | \"arr\" | \"str\" | \"bol\" | \"num\" | string;\n  name?: string;\n  isarg?: boolean;\n  in?: IdenType;\n  out?: IdenType;\n  element?: IdenType;\n  fields?: {};\n}\n\nexport type TypeScope = Record<string, IdenType>;\n\nexport type TypeSignature = [[number, number, number], TypeScope][];\n","import JS from \"./js\";\nimport PY from \"./py\";\nimport RB from \"./rb\";\nimport { TargetLanguages } from \"../types\";\nimport { BaseTranspiler } from \"./base\";\n\nconst transpilers: Record<TargetLanguages, typeof BaseTranspiler> = {\n  js: JS,\n  py: PY,\n  rb: RB\n};\n\nexport default transpilers;\n","import { BaseTranspiler, ModuleWrapperOptions } from \"./base\";\nimport { TranspilerOptions, ASCNodeOperator } from \"../types\";\n\nexport default class JSCompiler extends BaseTranspiler {\n  protected moduleWrapper({\n    src,\n    scopeName,\n    markerStart,\n    markerEnd\n  }: ModuleWrapperOptions) {\n    return `${markerStart} var ${scopeName} = new function(){ ${src} };${markerEnd}`;\n  }\n\n  transpile(options: Partial<TranspilerOptions> = {}) {\n    const imports = options.imports || [];\n    let js = \"\"; //'\"use strict\";'; (strict mode currently broken)\n    let prevfun = \"\";\n    let prevfunpublic = false;\n    let prevobj = \"\";\n    let prevobjpublic = false;\n    let previsfun = false;\n    let curlvl = 0;\n    let strayvar = [];\n    let took = 0;\n    const errcurlvls = [];\n\n    function getval(x) {\n      if (x === undefined) {\n        return \"\";\n      }\n      if (x[0] == \"ans\") {\n        const ans = strayvar[strayvar.length - 1];\n        strayvar = [];\n        return ans;\n      }\n      return x[1];\n    }\n\n    for (const a of this.asc) {\n      if (a.op == \"var\") {\n        for (let j = 0; j < a.count; j++) {\n          if (a.values[j] === undefined) {\n            a.values[j] = [];\n          }\n          let name = a.names[j];\n          let value = a.values[j][1];\n          if (name === undefined) {\n            name = this.nextTmpVar();\n            strayvar.push(name);\n          }\n          if (value === undefined) {\n            if (a.type == \"arr\") {\n              value = \"[]\";\n            } else if (a.type == \"num\") {\n              value = \"0\";\n            } else if (a.type == \"str\") {\n              value = `\"\"`;\n            } else if (a.type == \"bol\") {\n              value = \"false\";\n            } else if (a.type == \"fun\") {\n              value = \"_=>{}\";\n              prevfun = name;\n              prevfunpublic = a.public;\n            } else if (a.type == \"obj\") {\n              value = \"{}\";\n              prevobj = name;\n              prevobjpublic = a.public;\n            } else if (a.type == \"any\") {\n              value = \"void 0\";\n            }\n          }\n          js += `var ${name}=${a.public ? `this.${name}=` : \"\"}${value};`;\n        }\n      } else if (a.op == \"print\") {\n        js += `console.log(${strayvar.join(\",\")});`;\n        strayvar = [];\n      } else if (a.op == \"fun\") {\n        js += `${prevfun}=${prevfunpublic ? `this.${prevfun}=` : \"\"}${\n          a.args.length == 0\n            ? \"()=>\"\n            : a.args.map(arg => `${arg.name}=>`).join(\"\")\n        }{`;\n        curlvl++;\n      } else if (a.op == \"funbody\") {\n        if (!previsfun) {\n          js += `${prevfun}=${prevfunpublic ? `this.${prevfun}=` : \"\"}()=>{`;\n          curlvl++;\n        }\n      } else if (a.op == \"funend\") {\n        js += \"};\";\n        curlvl--;\n      } else if (a.op == \"objend\") {\n        js += \"};\";\n        curlvl--;\n      } else if (a.op == \"objbody\") {\n        js += `${prevobjpublic ? `${prevobj} = this.` : \"\"}${prevobj}={`;\n        curlvl++;\n      } else if (a.op == \"prop\") {\n        js += `${a.name}:${a.value[1]},`;\n      } else if (a.op == \"end\") {\n        js += \"};\";\n        curlvl--;\n      } else if (a.op == \"if\") {\n        if (a.elseif) {\n          js += \"}else \";\n          curlvl--;\n        }\n        js += \"if (\";\n        if (a.not) {\n          js += \"!(\";\n        }\n        let j = 0;\n        while (j < a.test.length) {\n          if (a.test[j][0] == \"cmp\") {\n            js += a.test[j][1];\n          } else if (a.test[j][0] == \"ctnr\") {\n            if (a.test[j][1] == \"subs\") {\n              if (a.test[j + 1][1] == \"rest\") {\n                js += \".slice(1)\";\n              } else {\n                if (a.test[j + 1][0] == \"lit\") {\n                  js += \"[\" + a.test[j + 1][1] + \"]\";\n                } else {\n                  js += \"[\" + a.test[j + 1][1] + \"-1]\";\n                }\n              }\n              j++;\n            } else if (a.test[j][1] == \"len\") {\n              js += \".length\";\n            }\n          } else {\n            js += getval(a.test[j]);\n          }\n          j++;\n        }\n        if (a.not) {\n          js += \")\";\n        }\n        js += \"){\";\n        curlvl++;\n      } else if (a.op == \"else\") {\n        js += \"}else{\";\n      } else if (a.op == \"return\") {\n        js += `return ${getval(a.value)};`;\n      } else if (a.op.startsWith(\"op\")) {\n        const _a = a as ASCNodeOperator;\n        const lhs = getval(_a.lhs);\n        const rhs = getval(_a.rhs);\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${lhs}${a.op.slice(2)}${rhs};`;\n        strayvar.push(vname);\n      } else if (a.op == \"name\") {\n        for (let j = 0; j < a.names.length; j++) {\n          js += `var ${a.names[j]}=${\n            strayvar[strayvar.length - a.names.length + j]\n          };`;\n        }\n        strayvar = strayvar.slice(0, strayvar.length - a.names.length);\n      } else if (a.op == \"call\") {\n        if (a.pop) {\n          let jj = \"\";\n          for (let j = 0; j < took; j++) {\n            jj += `(${strayvar[strayvar.length - took + j]})`;\n          }\n          strayvar = strayvar.slice(0, strayvar.length - took);\n          took = 0;\n          const vname = this.nextTmpVar();\n          if (!jj.length) {\n            jj = \"()\";\n          }\n          js += `const ${vname}=${getval(a.fun)}` + jj + \";\";\n          strayvar.push(vname);\n        } else {\n          const vname = this.nextTmpVar();\n          js += `const ${vname}=${getval(a.fun)}(${a.args\n            .map(x => getval(x))\n            .join(\")(\")});`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"subscript\") {\n        const idx = getval(a.value);\n        if (idx == \"rest\") {\n          const vname = this.nextTmpVar();\n          js += `const ${vname}=${getval(a.container)}.slice(1);`;\n          strayvar.push(vname);\n        } else {\n          const vname = this.nextTmpVar();\n          js += `const ${vname}=${getval(a.container)}[${idx}${\n            a.value[0] == \"lit\" ? \"\" : \"-1\"\n          }];`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"cat\") {\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${getval(a.containers[0])}.concat(${a.containers\n          .slice(1)\n          .map(x => x[1])\n          .join(\").concat(\")});`;\n        strayvar.push(vname);\n      } else if (a.op == \"push\") {\n        js += `${getval(a.container)}.push(${a.values\n          .map(x => getval(x))\n          .join(\",\")});`;\n      } else if (a.op == \"for\") {\n        js += `for(let ${a.iterator} of ${getval(a.container)}){`;\n        curlvl++;\n      } else if (a.op == \"whiletrue\") {\n        js += \"while(true){\";\n        curlvl++;\n      } else if (a.op == \"whilen\") {\n        const v = this.randVar();\n        js += `for(let ${v}=0;${v}<${getval(a.value)};${v}++){`;\n        curlvl++;\n      } else if (a.op == \"break\") {\n        js += \"break;\";\n      } else if (a.op == \"continue\") {\n        js += \"continue;\";\n      } else if (a.op == \"not\") {\n        const v = getval(a.value);\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=!${v};`;\n        strayvar.push(vname);\n      } else if (a.op == \"reassign\") {\n        if (a.del == true) {\n          const lhs = getval(a.lhs);\n          js += `delete ${lhs}[${a.lhssubs[1]}${\n            a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"\n          }];`;\n        } else {\n          let rhs = getval(a.rhs);\n          let lhs = getval(a.lhs);\n          if (a.lhssubs) {\n            lhs += `[${a.lhssubs[1]}${a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          if (a.rhssubs) {\n            rhs += `[${a.rhssubs[1]}${a.rhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          js += `${lhs}=${rhs};`;\n        }\n      } else if (a.op == \"length\") {\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${getval(a.container)}.length;`;\n        strayvar.push(vname);\n      } else if (a.op == \"temp\") {\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${a.iden[1]};`;\n        strayvar.push(vname);\n      } else if (a.op == \"discard\") {\n        strayvar = [];\n      } else if (a.op == \"take\") {\n        took = a.count;\n      } else if (a.op == \"import\") {\n        const f = a.file.replace(/\"/g, \"\");\n        for (const id of a.iden) {\n          js += `var ${id}=${f}.${id};`;\n        }\n        imports.push(f);\n      } else if (a.op == \"try\") {\n        js += `try{`;\n        curlvl++;\n      } else if (a.op == \"catch\") {\n        const r = this.randVar();\n        errcurlvls.push([curlvl, r]);\n        js += `}catch(${r}){`;\n        js += `${r}['名']=({'SyntaxError':'文法','RangeError':'逾界','TypeError':'異類','ReferenceError':'虛指'}[${r}.name])||${r}.name;`;\n        js += `${r}['文']=${r}.message; ${r}['蹤']=${r}.stack;`;\n        strayvar = [];\n      } else if (a.op == \"catcherr\") {\n        const ec = errcurlvls[errcurlvls.length - 1];\n        if (a.error === undefined) {\n          if (curlvl != ec[0]) {\n            js += `}else{`;\n          }\n        } else {\n          if (curlvl != ec[0]) {\n            js += `}else `;\n            curlvl--;\n          }\n          js += `if (${ec[1]}.name===${a.error[1]}||${ec[1]}['名']===${a.error[1]}){`;\n          curlvl++;\n        }\n        if (a.name != undefined) {\n          js += `const ${a.name}=${ec[1]};`;\n        }\n      } else if (a.op == \"tryend\") {\n        const ec = errcurlvls.pop();\n        if (curlvl != ec[0]) {\n          js += `}`;\n          curlvl--;\n        }\n        js += `}`;\n        curlvl--;\n        strayvar = [];\n      } else if (a.op == \"throw\") {\n        const r = this.randVar();\n        js += `{const ${r} = new Error(); ${r}.name=${\n          a.error[1]\n        }; ${r}.message=${a.message ? getval(a.message) : '\"\"'}; throw ${r};}`;\n      } else if (a.op == \"comment\") {\n        js += `/*${getval(a.value)}*/`;\n      } else {\n        console.log(a.op);\n      }\n      previsfun = a.op == \"fun\";\n    }\n    return { result: js, imports };\n  }\n}\n","import { BaseTranspiler, ModuleWrapperOptions } from \"./base\";\nimport { TranspilerOptions, ASCNodeOperator } from \"../types\";\n\nexport default class PythonTranspiler extends BaseTranspiler {\n  protected moduleWrapper({\n    src,\n    markerStart,\n    markerEnd\n  }: ModuleWrapperOptions) {\n    return `#${markerStart}\\n${src}\\n#${markerEnd}\\n`;\n  }\n\n  transpile(options: Partial<TranspilerOptions> = {}) {\n    var imports = options.imports || [];\n    var lop = {\n      \"||\": \" or \",\n      \"&&\": \" and \"\n    };\n\n    var py = this.lib;\n    var prevfun = \"\";\n    var prevobj = \"\";\n    var prevobjpublic = false;\n    var curlvl = 0;\n    var strayvar = [];\n    var funcurlvls = [];\n    var funcurnames = [];\n    var took = 0;\n    var globals = [];\n    var locals = [];\n    var funargs = [];\n\n    const getval = x => {\n      if (x === undefined) {\n        return \"\";\n      }\n      if (x[0] == \"ans\") {\n        var ans = strayvar[strayvar.length - 1];\n        strayvar = [];\n        return ans;\n      }\n      if (x[1] === undefined) {\n        return undefined;\n      }\n      if (x[1].toString() == \"true\") {\n        return \"True\";\n      }\n      if (x[1].toString() == \"false\") {\n        return \"False\";\n      }\n      return x[1];\n    };\n\n    for (var i = 0; i < this.asc.length; i++) {\n      var a = this.asc[i];\n      if (a.op == \"var\") {\n        for (var j = 0; j < a.count; j++) {\n          if (a.values[j] === undefined) {\n            a.values[j] = [];\n          }\n          var name = a.names[j];\n          var value = getval(a.values[j]);\n          if (name === undefined) {\n            name = this.nextTmpVar();\n            strayvar.push(name);\n          }\n          if (value === undefined) {\n            if (a.type == \"arr\") {\n              value = \"Ctnr()\";\n            } else if (a.type == \"num\") {\n              value = \"0\";\n            } else if (a.type == \"str\") {\n              value = `\"\"`;\n            } else if (a.type == \"bol\") {\n              value = \"False\";\n            } else if (a.type == \"fun\") {\n              value = \"lambda _:0\";\n              prevfun = name;\n            } else if (a.type == \"obj\") {\n              value = \"{}\";\n              prevobj = name;\n              prevobjpublic = a.public;\n            }\n          }\n          py += \"\\t\".repeat(curlvl);\n          py += `${name}=${value}\\n`;\n          if (name[0] != \"_\") {\n            if (curlvl == 0) {\n              globals.push(name);\n            } else {\n              if (!locals.length) {\n                locals.push([]);\n              }\n              locals[locals.length - 1].push(name);\n            }\n          }\n        }\n      } else if (a.op == \"print\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `print(`;\n        for (var j = 0; j < strayvar.length; j++) {\n          py += `${strayvar[j]}`;\n          if (j != strayvar.length - 1) {\n            py += \",\";\n          }\n        }\n        py += \");\\n\";\n        strayvar = [];\n      } else if (a.op == \"fun\") {\n        funcurlvls.push(curlvl);\n        py += \"\\t\".repeat(curlvl);\n        py += `def ${prevfun} (`;\n        for (var j = 0; j < a.arity; j++) {\n          curlvl++;\n          py += `${a.args[j].name}):\\n`;\n          funargs.push(a.args[j].name);\n\n          if (j != a.arity - 1) {\n            py += \"\\t\".repeat(curlvl);\n            var r = this.randVar();\n            py += `def ${r}(`;\n            funcurnames.push(r);\n          }\n        }\n        for (var j = 0; j < a.arity - 1; j++) {\n          py += \"\\t\".repeat(curlvl);\n          py += \"nonlocal \" + a.args[j].name + \";\\n\";\n        }\n      } else if (a.op == \"funbody\") {\n        if (this.asc[i - 1].op != \"fun\") {\n          funcurlvls.push(curlvl);\n          py += \"\\t\".repeat(curlvl);\n          py += `def ` + prevfun + \"():\\n\";\n          curlvl++;\n        }\n        // py += \"):\\n\";\n        for (var j = 0; j < globals.length; j++) {\n          if (funargs.includes(globals[j])) {\n            continue;\n          }\n          py += \"\\t\".repeat(curlvl);\n          py += \"global \" + globals[j] + \";\\n\";\n        }\n        if (locals.length) {\n          for (var j = 0; j < locals[locals.length - 1].length; j++) {\n            py += \"\\t\".repeat(curlvl);\n            py += \"nonlocal \" + locals[locals.length - 1][j] + \";\\n\";\n          }\n        }\n        locals.push([]);\n        funargs = [];\n      } else if (a.op == \"funend\") {\n        var cl = funcurlvls.pop();\n        var n = curlvl - cl - 1;\n        for (var j = 0; j < n; j++) {\n          curlvl--;\n          py += \"\\t\".repeat(curlvl);\n          py += `return ${funcurnames.pop()};\\n`;\n        }\n        locals.pop();\n        py += \"\\n\";\n        curlvl--;\n      } else if (a.op == \"objend\") {\n        py += \"};\\n\";\n      } else if (a.op == \"objbody\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `${prevobjpublic ? `${prevobj} = this.` : \"\"}${prevobj}={`;\n      } else if (a.op == \"prop\") {\n        py += `${a.name}:${a.value[1]},`;\n      } else if (a.op == \"end\") {\n        py += \"\\n\";\n        curlvl--;\n      } else if (a.op == \"if\") {\n        py += \"\\n\";\n        py += \"\\t\".repeat(curlvl);\n        py += \"if \";\n        var j = 0;\n        while (j < a.test.length) {\n          if (a.test[j][0] == \"cmp\") {\n            py += a.test[j][1];\n          } else if (a.test[j][0] == \"ctnr\") {\n            if (a.test[j][1] == \"subs\") {\n              if (a.test[j + 1][1] == \"rest\") {\n                py += \".slice(1)\";\n              } else {\n                if (a.test[j + 1][0] == \"lit\") {\n                  py += \"[\" + a.test[j + 1][1] + \"]\";\n                } else {\n                  py += \"[\" + a.test[j + 1][1] + \"-1]\";\n                }\n              }\n              j++;\n            } else if (a.test[j][1] == \"len\") {\n              py += \".length\";\n            }\n          } else {\n            py += getval(a.test[j]);\n          }\n          j++;\n        }\n        py += \":\\n\";\n        curlvl++;\n      } else if (a.op == \"else\") {\n        py += \"\\n\";\n        py += \"\\t\".repeat(curlvl - 1);\n        py += \"else:\\n\";\n      } else if (a.op == \"return\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `return ${getval(a.value)}\\n`;\n      } else if (a.op.startsWith(\"op\")) {\n        let _a = a as ASCNodeOperator;\n        py += \"\\t\".repeat(curlvl);\n        var lhs = getval(_a.lhs);\n        var rhs = getval(_a.rhs);\n        var vname = this.nextTmpVar();\n        py += `${vname}=${lhs}${\n          lop[a.op.slice(2)] ? lop[a.op.slice(2)] : a.op.slice(2)\n        }${rhs};\\n`;\n        strayvar.push(vname);\n      } else if (a.op == \"name\") {\n        for (var j = 0; j < a.names.length; j++) {\n          py += \"\\n\";\n          py += \"\\t\".repeat(curlvl);\n          py += `${a.names[j]}=${\n            strayvar[strayvar.length - a.names.length + j]\n          };\\n`;\n        }\n        strayvar = strayvar.slice(0, strayvar.length - a.names.length);\n      } else if (a.op == \"call\") {\n        py += \"\\t\".repeat(curlvl);\n        if (a.pop) {\n          var jj = \"\";\n          for (var j = 0; j < took; j++) {\n            jj += `(${strayvar[strayvar.length - took + j]})`;\n          }\n          strayvar = strayvar.slice(0, strayvar.length - took);\n          took = 0;\n          var vname = this.nextTmpVar();\n          if (!jj.length) {\n            jj = \"()\";\n          }\n          py += `${vname}=${getval(a.fun)}` + jj + \";\\n\";\n          strayvar.push(vname);\n        } else {\n          var vname = this.nextTmpVar();\n          py += `${vname}=${getval(a.fun)}(${a.args\n            .map(x => getval(x))\n            .join(\")(\")});\\n`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"subscript\") {\n        var idx = getval(a.value);\n        var vname = this.nextTmpVar();\n        py += \"\\t\".repeat(curlvl);\n        if (idx == \"rest\") {\n          py += `${vname}=${getval(a.container)}.slice(1);\\n`;\n        } else {\n          py += `${vname}=${getval(a.container)}[${idx}${\n            a.value[0] == \"lit\" ? \"\" : \"-1\"\n          }];\\n`;\n        }\n        strayvar.push(vname);\n      } else if (a.op == \"cat\") {\n        var vname = this.nextTmpVar();\n        py += \"\\t\".repeat(curlvl);\n        py +=\n          `${vname}=${getval(a.containers[0])}.concat(` +\n          a.containers\n            .slice(1)\n            .map(x => x[1])\n            .join(\").concat(\") +\n          \");\\n\";\n        strayvar.push(vname);\n      } else if (a.op == \"push\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `${getval(a.container)}.push(${a.values\n          .map(x => getval(x))\n          .join(\",\")})\\n`;\n      } else if (a.op == \"for\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `for ${a.iterator} in ${getval(a.container)}:\\n`;\n        curlvl++;\n      } else if (a.op == \"whiletrue\") {\n        py += \"\\t\".repeat(curlvl);\n        py += \"while (True):\\n\";\n        curlvl++;\n      } else if (a.op == \"whilen\") {\n        py += \"\\t\".repeat(curlvl);\n        let v = this.randVar();\n        py += `for ${v} in range(${getval(a.value)}):\\n`;\n        curlvl++;\n      } else if (a.op == \"break\") {\n        py += \"\\t\".repeat(curlvl);\n        py += \"break\\n\";\n      } else if (a.op == \"not\") {\n        py += \"\\t\".repeat(curlvl);\n        var v = getval(a.value);\n        var vname = this.nextTmpVar();\n        py += `${vname}=not ${v};`;\n        strayvar.push(vname);\n      } else if (a.op == \"reassign\") {\n        py += \"\\n\";\n\n        py += \"\\t\".repeat(curlvl);\n        if (a.del == true) {\n          var lhs = getval(a.lhs);\n          py += `del ${lhs}[${a.lhssubs[1]}${\n            a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"\n          }];\\n`;\n        } else {\n          var rhs = getval(a.rhs);\n          var lhs = getval(a.lhs);\n          if (a.lhssubs) {\n            lhs += `[${a.lhssubs[1]}${a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          if (a.rhssubs) {\n            rhs += `[${a.rhssubs[1]}${a.rhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          py += `${lhs}=${rhs};\\n`;\n        }\n      } else if (a.op == \"temp\") {\n        py += \"\\t\".repeat(curlvl);\n        var vname = this.nextTmpVar();\n        py += `${vname}=${a.iden[1]};\\n`;\n        strayvar.push(vname);\n      } else if (a.op == \"discard\") {\n        strayvar = [];\n      } else if (a.op == \"take\") {\n        took = a.count;\n      } else if (a.op == \"import\") {\n        var f = a.file.replace(/\"/g, \"\");\n        for (var j = 0; j < a.iden.length; j++) {\n          py += `${a.iden[j]}=${a.iden[j]};`;\n        }\n        imports.push(f);\n      } else if (a.op == \"length\") {\n        py += \"\\t\".repeat(curlvl);\n        var vname = this.nextTmpVar();\n        var val = getval(a.container);\n        py += `${vname}=${val}.length if type(${val}) != str else len(${val});`;\n        strayvar.push(vname);\n      } else if (a.op == \"comment\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `\"\"\" ${getval(a.value)} \"\"\"\\n`;\n      } else {\n        console.log(a.op);\n      }\n      // py+=\"\\n\"\n    }\n    return { result: py, imports };\n  }\n\n  lib = `# -*- coding: utf-8 -*-\nclass Ctnr:\n  def __init__(self):self.dict = dict();self.length = 0;self.it = -1;\n  def push(self,*args):\n    for arg in args:\n      self.dict[str(self.length)]=arg; self.length+=1\n  def __getitem__(self,i):\n    try: return self.dict[str(i)]\n    except: return None\n  def __setitem__(self,i,x):\n    self.dict[str(i)]=x\n    inti = None\n    try:\n      inti = int(i)\n      if (abs(inti - float(i))>0.0001): inti=None\n    except: pass\n    if (inti != None):\n      self.length=inti+1\n      for j in range(0,self.length):\n        try:  self.dict[str(j)]\n        except: self.dict[str(j)]=None\n  def slice(self,i):\n    ret = Ctnr();\n    for i in range(i,self.length): ret.push(self[i])\n    return ret\n  def concat(self,other):\n    ret = Ctnr();\n    for i in range(0,self.length): ret.push(self[i])\n    for i in range(0,other.length): ret.push(other[i])\n    return ret\n  def __str__(self):\n    if (len(self.dict.keys())==self.length):\n      ret = \"[\"\n      for k in range(0,self.length):\n        v = self[k]\n        if (isinstance(v,Ctnr)): ret += v.__str__()\n        else: ret += str(v)\n        ret+=\",\"\n      ret += \"]\"\n      return ret;\n    else:\n      ret = \"{\"\n      for k in self.dict.keys():\n        ret += str(k)+\":\"\n        v = self.dict[k]\n        if (isinstance(v,Ctnr)): ret += v.__str__()\n        else: ret += str(v)\n        ret+=\",\"\n      ret += \"}\"\n      return ret;\n  def __repr__(self):\n    return self.__str__()\n  def __iter__(self):\n    self.it = -1;\n    return self\n  def __next__(self):\n    self.it += 1\n    if (self.it >= self.length): raise StopIteration()\n    return self[self.it]\nglobals()['Ctnr']=Ctnr;\nclass JSON:\n  @staticmethod\n  def stringify(x):\n    return x;\n#####\n`;\n}\n","import { BaseTranspiler, ModuleWrapperOptions } from \"./base\";\nimport { TranspilerOptions, ASCNodeOperator } from \"../types\";\n\nexport default class RubyCompiler extends BaseTranspiler {\n  protected moduleWrapper({\n    src,\n    markerStart,\n    markerEnd\n  }: ModuleWrapperOptions) {\n    return `#${markerStart}\\n${src}\\n#${markerEnd}\\n`;\n  }\n\n  rename(name) {\n    return name && `${name.toLowerCase()}`;\n  }\n\n  lowerAllPinYinAndMakeItGlobal(asc) {\n    for (let i = 0; i < asc.length; i++) {\n      const item = asc[i];\n      switch (item.op) {\n        case \"var\":\n        case \"name\":\n          item.names = item.names.map(e => this.rename(e));\n          break;\n        case \"call\":\n          if (item.fun[0] == \"iden\") {\n            item.fun[1] = this.rename(item.fun[1]);\n          }\n          item.args = item.args.map(arg => {\n            if (arg[0] == \"iden\") arg[1] = this.rename(arg[1]);\n            return arg;\n          });\n          break;\n        case \"fun\":\n          item.args = item.args.map(arg => {\n            arg.name = this.rename(arg.name);\n            return arg;\n          });\n          break;\n        case \"return\":\n          if (item.value[0] == \"iden\")\n            item.value[1] = this.rename(item.value[1]);\n          break;\n        case \"cat\":\n          item.containers = item.containers.map(e => this.rename(e));\n          break;\n        case \"for\":\n          if (item.container[0] == \"iden\") {\n            item.container[1] = this.rename(item.container[1]);\n          }\n          item.iterator = this.rename(item.iterator);\n          break;\n        case \"push\":\n        case \"length\":\n          if (item.container[0] == \"iden\") {\n            item.container[1] = this.rename(item.container[1]);\n          }\n          break;\n        case \"subscript\":\n          if (item.container[0] == \"iden\") {\n            item.container[1] = this.rename(item.container[1]);\n          }\n          if (item.value[0] == \"iden\") this.rename(item.value[1]);\n          break;\n        case \"if\":\n          item.test = item.test.map(condition => {\n            if (condition[0] == \"iden\")\n              condition[1] = this.rename(condition[1]);\n            return condition;\n          });\n        default:\n          break;\n      }\n      if (item.values) {\n        item.values.forEach(value => {\n          if (value[0] == \"iden\") value[1] = this.rename(value[1]);\n        });\n      }\n      [\"rhs\", \"lhs\", \"lhssubs\", \"value\"].forEach(key => {\n        if (item[key] && item[key][0] == \"iden\")\n          item[key][1] = this.rename(item[key][1]);\n      });\n    }\n    return asc;\n  }\n\n  transpile(options: Partial<TranspilerOptions> = {}) {\n    let imports = options.imports || [];\n    let asc = this.asc;\n    let lop = {\n      \"||\": \" or \",\n      \"&&\": \" and \"\n    };\n    let rb = this.lib;\n    var prevfun = \"\";\n    var prevobj = \"\";\n    var prevobjpublic = false;\n    let curlvl = 0;\n    let strayvar = [];\n    let lambdaList = [];\n    let methodIndex = 0;\n    let took = 0;\n    asc = this.lowerAllPinYinAndMakeItGlobal(asc);\n    const getval = x => {\n      if (!x) return \"\";\n      if (x[0] == \"ans\") {\n        var ans = strayvar[strayvar.length - 1];\n        strayvar = [];\n        return ans;\n      }\n      if (x[0] == \"iden\") return this.rename(x[1]);\n      if (x[1] === undefined) return \"nil\";\n      return x[1];\n    };\n    for (let i = 0; i < asc.length; i++) {\n      let a = asc[i];\n      if (a.op == \"var\") {\n        for (let j = 0; j < a.count; j++) {\n          if (a.values[j] === undefined) {\n            a.values[j] = [];\n          }\n          let name = a.names[j];\n          if (a.type == \"fun\") {\n            prevfun = name;\n            continue;\n          }\n          let value = getval(a.values[j]);\n          if (name === undefined) {\n            name = this.nextTmpVar();\n            strayvar.push(name);\n          }\n          if ([undefined, \"nil\"].includes(value)) {\n            if (a.type == \"arr\") {\n              value = \"Ctnr.new\";\n            } else if (a.type == \"num\") {\n              value = \"0\";\n            } else if (a.type == \"str\") {\n              value = `\"\"`;\n            } else if (a.type == \"bol\") {\n              value = \"false\";\n            }\n          }\n          rb += \"\\t\".repeat(curlvl);\n          rb += `${name}=${value}\\n`;\n        }\n      } else if (a.op == \"print\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `p([`;\n        rb += strayvar.join(\", \");\n        rb += \"].join)\\n\";\n        strayvar = [];\n      } else if (a.op == \"fun\") {\n        rb += \"\\t\".repeat(curlvl);\n        let argsStr = a.args.map(arg => arg.name).join(\",\");\n        if (methodIndex == 0) {\n          rb += `def ${prevfun}(${argsStr})`;\n        } else {\n          lambdaList.push(prevfun);\n          rb += `${prevfun} = proc {|${argsStr}|`;\n        }\n        methodIndex++;\n      } else if (a.op == \"funbody\") {\n        rb += \"\\t\".repeat(curlvl);\n        if (asc[i - 1].op != \"fun\") {\n          if (methodIndex == 0) {\n            rb += `def ${prevfun}()`;\n          } else {\n            lambdaList.push(prevfun);\n            rb += `${prevfun} = proc {|_|`;\n          }\n          methodIndex++;\n        }\n        rb += \"\\n\";\n        curlvl++;\n      } else if (a.op == \"funend\") {\n        curlvl--;\n        methodIndex--;\n        if (methodIndex == 0) {\n          rb += `${\"\\t\".repeat(curlvl)}end\\n`;\n        } else {\n          rb += `${\"\\t\".repeat(curlvl)}}`;\n        }\n        rb += \"\\n\";\n      } else if (a.op == \"end\") {\n        curlvl--;\n        rb += `${\"\\t\".repeat(curlvl)}end \\n`;\n      } else if (a.op == \"if\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += \"if \";\n        let j = 0;\n        while (j < a.test.length) {\n          if (a.test[j][0] == \"cmp\") {\n            rb += a.test[j][1];\n          } else if (a.test[j][0] == \"ctnr\") {\n            if (a.test[j][1] == \"subs\") {\n              if (a.test[j + 1][1] == \"rest\") {\n                rb += \".slice(1)\";\n              } else {\n                if (a.test[j + 1][0] == \"lit\") {\n                  rb += \"[\" + a.test[j + 1][1] + \"]\";\n                } else {\n                  rb += \"[\" + a.test[j + 1][1] + \"-1]\";\n                }\n              }\n              j++;\n            } else if (a.test[j][1] == \"len\") {\n              rb += \".length\";\n            }\n          } else {\n            rb += a.test[j][1];\n          }\n          j++;\n        }\n        rb += \"\\n\";\n        curlvl++;\n      } else if (a.op == \"else\") {\n        rb += \"\\t\".repeat(curlvl - 1);\n        rb += \"else\\n\";\n      } else if (a.op == \"return\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `return ${getval(a.value)}\\n`;\n      } else if (a.op.startsWith(\"op\")) {\n        rb += \"\\t\".repeat(curlvl);\n        let _a = a as ASCNodeOperator;\n        var lhs = getval(_a.lhs);\n        var rhs = getval(_a.rhs);\n        var vname = this.nextTmpVar();\n        rb += `${vname}=${lhs}${a.op.slice(2)}${rhs};`;\n        strayvar.push(vname);\n      } else if (a.op == \"name\") {\n        for (var j = 0; j < a.names.length; j++) {\n          rb += \"\\n\";\n          rb += \"\\t\".repeat(curlvl);\n          rb += `${a.names[j]}=${\n            strayvar[strayvar.length - a.names.length + j]\n          };`;\n        }\n        strayvar = strayvar.slice(0, strayvar.length - a.names.length);\n      } else if (a.op == \"call\") {\n        rb += \"\\t\".repeat(curlvl);\n        if (a.pop) {\n          var jj = \"\";\n          for (var j = 0; j < took; j++) {\n            jj += `(${strayvar[strayvar.length - took + j]})`;\n          }\n          strayvar = strayvar.slice(0, strayvar.length - took);\n          took = 0;\n          var vname = this.nextTmpVar();\n          if (!jj.length) {\n            jj = \"()\";\n          }\n          rb += `${vname}=${getval(a.fun)}` + jj + \";\";\n          strayvar.push(vname);\n        } else {\n          var vname = this.nextTmpVar();\n          rb += `${vname}=${getval(a.fun)}(${a.args\n            .map(x => getval(x))\n            .join(\")(\")});`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"subscript\") {\n        var idx = getval(a.value);\n        var vname = this.nextTmpVar();\n        if (idx == \"rest\") {\n          rb += `${vname}=${getval(a.container)}.slice(1);`;\n        } else {\n          rb += `${vname}=${getval(a.container)}[${idx}${\n            a.value[0] == \"lit\" ? \"\" : \"-1\"\n          }];`;\n        }\n        strayvar.push(vname);\n      } else if (a.op == \"cat\") {\n        var vname = this.nextTmpVar();\n        rb +=\n          `${vname}=${getval(a.containers[0])}.concat(` +\n          a.containers\n            .slice(1)\n            .map(x => x[1])\n            .join(\").concat(\") +\n          \");\";\n        strayvar.push(vname);\n      } else if (a.op == \"push\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `${getval(a.container)}.push(${a.values\n          .map(x => getval(x))\n          .join(\",\")})\\n`;\n      } else if (a.op == \"for\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `${getval(a.container)}.each do |${a.iterator.toLowerCase()}|\\n`;\n        curlvl++;\n      } else if (a.op == \"whiletrue\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += \"while true do\\n\";\n        curlvl++;\n      } else if (a.op == \"whilen\") {\n        rb += \"\\t\".repeat(curlvl);\n        let v = this.randVar();\n        rb += `${getval(a.value)}.times do |${v}|\\n`;\n        curlvl++;\n      } else if (a.op == \"break\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += \"break\\n\";\n      } else if (a.op == \"not\") {\n        rb += \"\\t\".repeat(curlvl);\n        var v = getval(a.value);\n        var vname = this.nextTmpVar();\n        rb += `${vname}=!${v};`;\n        strayvar.push(vname);\n      } else if (a.op == \"reassign\") {\n        rb += \"\\t\".repeat(curlvl);\n        let rhs = getval(a.rhs);\n        let lhs = getval(a.lhs);\n        if (a.lhssubs) {\n          lhs += `[${a.lhssubs[1]}${a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n        }\n        rb += `${lhs}=${rhs}\\n`;\n      } else if (a.op == \"temp\") {\n        var vname = this.nextTmpVar();\n        rb += `${vname}=${a.iden[1]};`;\n        strayvar.push(vname);\n      } else if (a.op == \"discard\") {\n        strayvar = [];\n      } else if (a.op == \"take\") {\n        took = a.count;\n      } else if (a.op == \"import\") {\n        var f = a.file.replace(/\"/g, \"\");\n        for (var j = 0; j < a.iden.length; j++) {\n          rb += `${a.iden[j]}=${f}.${a.iden[j]};`;\n        }\n        imports.push(f);\n      } else if (a.op == \"length\") {\n        var vname = this.nextTmpVar();\n        rb += `${vname}=${getval(a.container)}.length;`;\n        strayvar.push(vname);\n      } else if (a.op == \"comment\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `# ${getval(a.value)}\\n`;\n        rb += \"\\t\".repeat(curlvl);\n      } else {\n      }\n    }\n    return { result: rb, imports };\n  }\n\n  lib = `# encoding: UTF-8\nrequire 'forwardable'\nclass Ctnr\n  extend Forwardable\n  attr_accessor :dict, :length, :it\n  def initialize()\n    @dict = {}\n    @length = 0\n    @it = -1\n  end\n  def push(*args)\n    args.each do |arg|\n      @dict[@length.to_s] = arg\n      @length += 1\n    end\n  end\n  def [](i)\n    @dict[i.to_s]\n  end\n  def []=(i,x)\n    @dict[i.to_s] = x\n  end\n  def slice(i)\n    result = Ctnr.new;\n    i.times {|index| result.push(self[index])}\n    return result\n  end\n  def concat(other)\n    other.length.times {|i| push(other[i]) }\n    self\n  end\n  def values\n    @dict.values\n  end\n  def to_s\n    \"[#{@dict.values.join(\", \")}]\"\n  end\n  def_delegators :values, :each\nend\nmodule Math\n  def self.random(*args)\n    rand(*args)\n  end\n  def self.floor(number)\n    number.floor\n  end\nend\n#####\n`;\n}\n","import { semantic } from \"./highlight\";\nimport { num2hanzi } from \"./converts/hanzi2num\";\nimport { wy2tokens, compile } from \"./parser\";\n\nconst FONT = \"'I.Ming', 'Source Han Serif KR', 'Noto Serif CJK KR', serif\"; //\"Source Han Serif TC\"\nconst RED = \"#E53\";\nconst BLACK = \"#222\";\n\nconst BOOK_COLORS = {\n  ctrl: RED,\n  lop: BLACK,\n  name: BLACK,\n  cmp: BLACK,\n  decl: BLACK,\n  print: BLACK,\n  rassgn: BLACK,\n  ctnr: BLACK,\n  comment: RED,\n  type: BLACK,\n  call: BLACK,\n  assgn: BLACK,\n  discard: BLACK,\n  endl: BLACK,\n  ans: BLACK,\n  expr: BLACK,\n  op: BLACK,\n  not: BLACK,\n  operand: BLACK,\n  bool: BLACK,\n  data: \"#666\",\n  iden: \"#248\",\n  quot: BLACK,\n  num: \"#872\"\n};\n\nfunction render(fname, txt, { plotResult = false } = {}) {\n  var svgs = [];\n  var W2 = 792;\n\n  var W = W2 / 2;\n  var H = 612;\n\n  var X0 = W - 30;\n  var Y0 = 120;\n  var X1 = 10;\n  var Y1 = H - 20;\n\n  var CW = (X0 - X1) / 13;\n  var CH = 18;\n  var CS = 20;\n  var CO = 4;\n\n  var PCT = 40;\n  var PCB = 5;\n\n  var PSH = 0; //-2;\n  var MA = 0; //10;\n\n  txt = txt.replace(/\\r\\n/g, \"\\n\");\n  txt = txt.replace(/\\n+/g, \"\");\n  txt = txt.replace(/\\t+/g, \"\");\n  txt = txt.replace(/ +/g, \"\");\n  txt = txt.replace(/『/g, \"「「\");\n  txt = txt.replace(/』/g, \"」」\");\n  // txt = txt + txt + txt;\n\n  var tokens = wy2tokens(txt);\n\n  var side = 0;\n  var pageno = 0;\n  var commentx = W2;\n\n  var sm = semantic(txt) as string[];\n\n  var svg = \"\";\n\n  function makeBorder() {\n    var p = 5;\n    var vo = Y0 + (Y1 - Y0) * 0.2;\n    var vh = 10;\n    var vp = 3;\n    var uo = Y0 + (Y1 - Y0) * 0.7;\n    if (!side) {\n      svg += `<path d=\"M${W2} ${Y0} L${W2 - X0 - p} ${Y0} L${W2 -\n        X0 -\n        p} ${Y1} L${W2} ${Y1}\" stroke=\"${BLACK}\" fill=\"none\" stroke-width=\"3\"></path>`;\n      svg += `<path d=\"M${W2} ${vo} L${W2 - X1} ${vo} L${W2 - X1} ${vo +\n        vh} L${W2} ${vo + vh / 2}\" fill=\"${BLACK}\" stroke=\"none\"></path>`;\n      svg += `<path d=\"M${W2} ${vo - vp} L${W2 - X1} ${vo -\n        vp}\" fill=\"none\" stroke=\"${BLACK}\"></path>`;\n      svg += `<path d=\"M${W2 - X1} ${vo + vh + vp} L${W2} ${vo +\n        vh / 2 +\n        vp}\" fill=\"none\" stroke=\"${BLACK}\"></path>`;\n      svg += `<path d=\"M${W2} ${uo} L${W2 -\n        X1} ${uo}\" fill=\"none\" stroke=\"${BLACK}\"></path>`;\n    } else {\n      svg += `<path d=\"M${0} ${Y0} L${X0 + p} ${Y0} L${X0 +\n        p} ${Y1} L${0} ${Y1}\" stroke=\"${BLACK}\" fill=\"none\" stroke-width=\"3\"></path>`;\n      svg += `<path d=\"M${0} ${vo} L${X1} ${vo} L${X1} ${vo + vh} L${0} ${vo +\n        vh / 2}\" fill=\"${BLACK}\" stroke=\"none\"></path>`;\n      svg += `<path d=\"M${0} ${vo - vp} L${X1} ${vo -\n        vp}\" fill=\"none\" stroke=\"${BLACK}\"></path>`;\n      svg += `<path d=\"M${X1} ${vo + vh + vp} L${0} ${vo +\n        vh / 2 +\n        vp}\" fill=\"none\" stroke=\"${BLACK}\"></path>`;\n      svg += `<path d=\"M${0} ${uo} L${X1} ${uo}\" fill=\"none\" stroke=\"${BLACK}\"></path>`;\n    }\n\n    if (!plotResult) {\n      for (\n        var i = side ? X0 : W2 - X1;\n        i >= (side ? X1 : W2 - X0) - p;\n        i -= CW\n      ) {\n        svg += `<line x1=\"${i}\" y1=\"${Y0}\" x2=\"${i}\" y2=\"${Y1}\" stroke=\"${BLACK}\"></line>`;\n      }\n    } else {\n      if (!side) {\n        svg += `<line x1=\"${W2 - X1}\" y1=\"${Y0}\" x2=\"${W2 -\n          X1}\" y2=\"${Y1}\" stroke=\"${BLACK}\"></line>`;\n        svg += `<line x1=\"${W2 - X0}\" y1=\"${Y0}\" x2=\"${W2 -\n          X0}\" y2=\"${Y1}\" stroke=\"${BLACK}\"></line>`;\n      } else {\n        svg += `<line x1=\"${X1}\" y1=\"${Y0}\" x2=\"${X1}\" y2=\"${Y1}\" stroke=\"${BLACK}\"></line>`;\n        svg += `<line x1=\"${X0}\" y1=\"${Y0}\" x2=\"${X0}\" y2=\"${Y1}\" stroke=\"${BLACK}\"></line>`;\n      }\n    }\n\n    for (var i = 0; i < fname.length; i++) {\n      svg += `<text x=\"${(side ? 0 : W2 - X1) + X1 * 0.1}\" y=\"${vo +\n        30 +\n        i * X1 * 1.5}\" font-size=\"${X1 *\n        0.8}\" font-family=\"${FONT}\" fill=\"${BLACK}\">${fname[i]}</text>`;\n    }\n    var hpg = num2hanzi(pageno + 1);\n    for (var i = 0; i < hpg.length; i++) {\n      svg += `<text x=\"${(side ? 0 : W2 - X1) + X1 * 0.1}\" y=\"${uo +\n        30 +\n        i * X1 * 1.5}\" font-size=\"${X1 *\n        0.8}\" font-family=\"${FONT}\" fill=\"${BLACK}\">${hpg[i]}</text>`;\n    }\n  }\n\n  var x;\n  var y;\n\n  function newSvg() {\n    svg = `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${W2}\" height=\"${H}\" viewBox=\"${-MA} ${-MA} ${W2 +\n      MA * 2} ${H + MA * 2}\">`;\n    if (MA) {\n      svg += `<rect x=\"${-MA}\" y=\"${-MA}\" width=\"${W2 + MA * 2}\" height=\"${H +\n        MA * 2}\" stroke=\"none\" fill=\"white\"></rect>`;\n    }\n    svg += `<rect x=\"${0}\" y=\"${0}\" width=\"${W}\" height=\"${H}\" stroke=\"${BLACK}\" fill=\"linen\"></rect>`;\n    svg += `<rect x=\"${W}\" y=\"${0}\" width=\"${W}\" height=\"${H}\" stroke=\"${BLACK}\" fill=\"linen\"></rect>`;\n\n    if (side == 0) {\n      x = W2 - X1 - CW;\n    } else {\n      x = X0 - CW;\n    }\n    y = Y0 + CH;\n    commentx = W2;\n  }\n  newSvg();\n  makeBorder();\n\n  function managePage() {\n    if ((side == 0 && x < W2 - X0 - 0.1) || (side == 1 && x < X1 - 0.1)) {\n      side = side == 0 ? 1 : 0;\n      pageno++;\n\n      if (side == 0) {\n        x = W + X0 - CW;\n        svg += \"</svg>\";\n        svgs.push(svg);\n        newSvg();\n      } else {\n        x = X0 - CW;\n      }\n      y = Y0 + CH;\n      makeBorder();\n    }\n  }\n  function makeLine() {\n    if (plotResult) {\n      if (Math.abs(x - X1) > 0.1 && Math.abs(x - (W2 - X0)) > 0.1) {\n        svg += `<line x1=\"${x}\" y1=\"${Y0}\" x2=\"${x}\" y2=\"${Y1}\" stroke=\"${BLACK}\"></line>`;\n      }\n    }\n  }\n  function nextLine() {\n    makeLine();\n    x -= CW;\n    y = Y0 + CH;\n    managePage();\n  }\n\n  function resultPlotter() {\n    var out = \"\";\n\n    var js = compile(txt, { lang: \"js\" })\n      .replace(/console.log\\(\\)/g, `out+=\"\\\\n\";`)\n      .replace(/console.log\\((.+?)\\)/g, function(_, p1) {\n        return `out+=` + p1.split(\",\").join(\"+\") + `+\"\\\\n\";`;\n      });\n\n    eval(js);\n    makeLine();\n    x -= CW / 2;\n    y = Y0 + CH;\n    for (var i = 0; i < out.length; i++) {\n      if (out[i] == \"\\n\") {\n        y = Y0 + CH;\n        x -= CW / 3.7;\n      } else {\n        svg += `<text x=\"${x}\" y=\"${y}\" font-size=\"${CS /\n          3}\" font-family=\"${FONT}\" fill=\"rgba(0,0,0,0.7)\">${out[i]}</text>`;\n        y += CH / 2.5;\n        if (y >= Y1) {\n          y = Y0 + CH;\n          x -= CW / 3.7;\n        }\n      }\n    }\n  }\n\n  var iden = false;\n  for (var i = 0; i < txt.length; i++) {\n    if (txt[i] == \"\\n\") {\n      nextLine();\n    } else {\n      if (!iden && txt[i] == \"批\" && txt[i + 1] == \"曰\") {\n        for (var j = 0; j < tokens.length; j++) {\n          if (tokens[j][2] > i + 1) {\n            var cmt = tokens[j][1].replace(/^\\\"\\\"*/, \"\").replace(/\\\"\\\"*$/, \"\");\n            console.log(cmt);\n            var ky = PCT + CH / 2;\n            var kx = Math.min(commentx, x + CO + CW / 2);\n            for (var k = 0; k < cmt.length; k++) {\n              if (cmt[k] == \"。\" || cmt[k] == \"、\") {\n                svg += `<circle cx=\"${kx + CW / 2 - CO}\" cy=\"${ky -\n                  CH / 2}\" r=\"${CH /\n                  12}\" stroke=\"${RED}\" fill=\"none\" stroke-width=\"0.5\"></circle>`;\n              } else {\n                svg += `<text x=\"${kx}\" y=\"${ky}\" font-size=\"${CS /\n                  2.2}\" font-family=\"${FONT}\" fill=\"${BOOK_COLORS.comment}\">${\n                  cmt[k]\n                }</text>`;\n                ky += CH / 1.5;\n                if (ky > Y0 - PCB) {\n                  ky = PCT + CH / 2;\n                  kx -= CW / 2;\n                }\n              }\n            }\n            commentx = kx - CW / 2;\n            i = tokens[j][2];\n            break;\n          }\n        }\n      } else if (txt[i] == \"。\") {\n        // svg += `<text x=\"${x+CW*0.6+CO}\" y=\"${y-CH}\" font-size=\"${CS}\" font-family=\"${FONT}\" fill=\"${RED}\">${txt[i]}</text>`\n        svg += `<circle cx=\"${x + CW - 3}\" cy=\"${y - CH + PSH}\" r=\"${CH /\n          7}\" stroke=\"${RED}\" fill=\"none\" stroke-width=\"1\" wy-data=\"${\n          txt[i]\n        }\"></circle>`;\n      } else if (txt[i] == \"、\" && !iden) {\n        svg += `<text x=\"${x + CW - 6}\" y=\"${y -\n          CH +\n          PSH}\" fill=\"${RED}\" wy-data=\"${txt[i]}\">、</text>`;\n      } else if (txt[i] == \"「\") {\n        iden = true;\n        if (y > Y1) {\n          nextLine();\n        }\n        var h = CH / 4;\n        svg += `<path d=\"M${x} ${y - CH / 2 + h / 2 + PSH} L${x + CW / 5} ${y -\n          CH / 2 -\n          h / 2 +\n          PSH} L${x + (4 * CW) / 5} ${y - CH / 2 - h / 2 + PSH} L${x + CW} ${y -\n          CH / 2 +\n          h / 2 +\n          PSH}\" stroke=\"${BLACK}\" fill=\"none\" stroke-width=\"0.5\" wy-data=\"${\n          txt[i]\n        }\"></path>`;\n        // svg += `<text x=\"${x+CO}\" y=\"${y-CH/2}\" font-size=\"${CS}\" font-family=\"${FONT}\">︹</text>`\n        y += CH / 2;\n      } else if (txt[i] == \"」\") {\n        iden = false;\n        if (y > Y1) {\n          nextLine();\n        }\n        var h = CH / 4;\n        svg += `<path d=\"M${x} ${y - CH / 2 - h + PSH} L${x + CW / 5} ${y -\n          CH / 2 +\n          PSH} L${x + (4 * CW) / 5} ${y - CH / 2 + PSH} L${x + CW} ${y -\n          CH / 2 -\n          h +\n          PSH}\" stroke=\"${BLACK}\" fill=\"none\" stroke-width=\"0.5\" wy-data=\"${\n          txt[i]\n        }\"></path>`;\n        // svg += `<text x=\"${x+CO}\" y=\"${y}\" font-size=\"${CS}\" font-family=\"${FONT}\">︺</text>`\n        y += CH / 2;\n      } else {\n        if (y >= Y1) {\n          nextLine();\n        }\n        svg += `<text x=\"${x +\n          CO}\" y=\"${y}\" font-size=\"${CS}\" font-family=\"${FONT}\" fill=\"${\n          BOOK_COLORS[sm[i]]\n        }\" wy-data=\"${txt[i]}\">${txt[i]}</text>`;\n        y += CH;\n      }\n    }\n  }\n  if (plotResult) {\n    resultPlotter();\n  }\n  // makeLine();\n  svg += \"</svg>\";\n  svgs.push(svg);\n  return svgs;\n}\n\nfunction unrender(svgs) {\n  var txt = \"\";\n  for (var i = 0; i < svgs.length; i++) {\n    svgs[i].replace(/wy-data=\"(.*?)\"/g, function(_, p) {\n      txt += p;\n    });\n  }\n  return txt;\n}\n\nexport { render, unrender, BOOK_COLORS };\n","var { num2hanzi } = require(\"./converts/hanzi2num\");\nvar { NUMBER_KEYWORDS, KEYWORDS } = require(\"./keywords\");\n\nvar DEFAULT_COLORS = {\n  ctrl: \"#F92672\",\n  lop: \"#FFF\",\n  name: \"#FFF\",\n  cmp: \"#FFF\",\n  decl: \"#FFF\",\n  print: \"#FFF\",\n  rassgn: \"#FFF\",\n  ctnr: \"#66D9EF\",\n  comment: \"#FFF\",\n  type: \"#66D9EF\",\n  call: \"#FFF\",\n  assgn: \"#FFF\",\n  discard: \"#FFF\",\n  endl: \"#75715E\",\n  ans: \"#A6E22E\",\n  expr: \"#FFF\",\n  op: \"#FFF\",\n  not: \"#FFF\",\n  operand: \"#FFF\",\n  bool: \"#AE81FF\",\n  data: \"#75715E\",\n  iden: \"#A6E22E\",\n  quot: \"#A6E22E\",\n  num: \"#AE81FF\"\n};\n\nvar setTheme = function(theme) {\n  DEFAULT_COLORS = theme;\n};\n\nvar semantic = function(txt) {\n  var off = 0;\n  var out = [];\n  var i = 0;\n  while (i < txt.length) {\n    if (txt[i] == \"「\" || txt[i] == \"『\") {\n      off++;\n      out.push(\"quot\");\n    } else if (txt[i] == \"」\" || txt[i] == \"』\") {\n      off--;\n      out.push(\"quot\");\n    } else {\n      if (off) {\n        out.push(\"iden\");\n      } else {\n        var ok = false;\n        for (var k in KEYWORDS) {\n          ok = true;\n          for (var j = 0; j < k.length; j++) {\n            if (k[j] != txt[i + j]) {\n              ok = false;\n              break;\n            }\n          }\n          if (ok) {\n            for (var j = 0; j < k.length; j++) {\n              out.push(KEYWORDS[k][0]);\n              i++;\n            }\n            i--;\n            break;\n          }\n        }\n        if (ok == false) {\n          if (NUMBER_KEYWORDS.includes(txt[i])) {\n            out.push(\"num\");\n          } else {\n            out.push(\"data\");\n          }\n        }\n      }\n    }\n    i++;\n  }\n  return out;\n};\n\nvar NNL = 0;\n\nfunction newEditor(txt) {\n  var div = document.createElement(\"pre\");\n  div.contentEditable = \"true\";\n  div.autoComplete = \"off\";\n  div.autoCorrect = \"off\";\n  div.autoCapitalize = \"off\";\n  div.spellCheck = \"off\";\n  div.onkeyup = function() {\n    if (event.keyCode == 13) {\n      NNL += 1;\n    }\n  };\n  div.innerHTML = txt;\n  highlight([div]);\n  // setInterval(()=>highlight([div]),20000);\n  return div;\n}\n\nvar highlight = function(codes) {\n  function getCaretPosition(element, mode) {\n    var caretOffset = 0;\n    var doc = element.ownerDocument || element.document;\n    var win = doc.defaultView || doc.parentWindow;\n    var sel;\n\n    sel = win.getSelection();\n    if (sel.rangeCount > 0) {\n      var range = win.getSelection().getRangeAt(0);\n      var preCaretRange = range.cloneRange();\n      preCaretRange.selectNodeContents(element);\n      if (mode == \"start\") {\n        preCaretRange.setEnd(range.endContainer, range.endOffset);\n      } else {\n        preCaretRange.setEnd(range.startContainer, range.startOffset);\n      }\n      caretOffset = preCaretRange.toString().length;\n    }\n    return caretOffset;\n  }\n\n  function setCaretPosition(element, i, j, ie, je) {\n    var range = document.createRange();\n    var sel = window.getSelection();\n    range.setStart(element.childNodes[i], j);\n    range.setEnd(element.childNodes[ie], je);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  for (var i = 0; i < codes.length; i++) {\n    var c = getCaretPosition(codes[i], \"start\") + NNL;\n    var ce = getCaretPosition(codes[i], \"end\") + NNL;\n    NNL = 0;\n    var cc = codes[i].innerText;\n    var nc = \"\";\n    var sm = semantic(cc);\n\n    for (var j = 0; j < cc.length; j++) {\n      nc += `<x style=\"color:${DEFAULT_COLORS[sm[j]]}\">${cc[j]}</x>`;\n    }\n    // console.log(cc);\n    // console.log(nc);\n    codes[i].innerHTML = nc;\n    if (document.activeElement == codes[i]) {\n      var c0 = Math.min(c, ce);\n      var c1 = Math.max(c, ce);\n      try {\n        setCaretPosition(codes[i], c0, 0, c1, 0);\n        // console.log(c0,0,c1,0)\n      } catch (e) {\n        for (var eee = 0; eee < 10; eee++) {\n          try {\n            codes[i].innerHTML += \"<i></i>\";\n            setCaretPosition(codes[i], c0, 0, c1, 0);\n            break;\n          } catch (e) {}\n        }\n      }\n    }\n  }\n};\n\nfunction newLineNo(ed) {\n  var div = document.createElement(\"pre\");\n  div.style.float = \"left\";\n  div.style.textAlign = \"right\";\n  div.style.color = DEFAULT_COLORS.endl;\n  function isRoman(x) {\n    return x.replace(/[ -~\\t]/g, \"\").length == 0;\n  }\n  function genLineNo() {\n    var ls = ed.innerText.split(\"\\n\");\n    var n = ls.length;\n    div.innerText = \"\";\n    for (var i = 0; i < n; i++) {\n      if (!isRoman(ls[i])) {\n        div.innerText += num2hanzi(i + 1) + \" \";\n      }\n      if (i != n - 1) {\n        div.innerText += \"\\n\";\n      }\n    }\n  }\n  setInterval(genLineNo, 1000);\n  genLineNo();\n  return div;\n}\n\nmodule.exports = {\n  semantic,\n  highlight,\n  newLineNo,\n  DEFAULT_COLORS,\n  newEditor,\n  setTheme\n};\n","module.exports = require(\"readline\");"],"sourceRoot":""}